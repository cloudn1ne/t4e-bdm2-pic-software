

Microchip Technology PIC PRO Macro Assembler V1.33 build 59893 
                                                                                               Tue May 22 23:29:01 2018

Microchip Technology Omniscient Code Generator (PRO mode) build 59893
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK5,global,class=CODE,delta=2
     5                           	psect	idataBANK6,global,class=CODE,delta=2
     6                           	psect	idataBANK7,global,class=CODE,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    10                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    11                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    12                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    13                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    14                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1
    17                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text26,local,class=CODE,merge=1,delta=2
    30                           	psect	text27,local,class=CODE,merge=1,delta=2
    31                           	psect	text30,local,class=CODE,merge=1,delta=2
    32                           	psect	text39,local,class=CODE,merge=1,delta=2
    33                           	psect	text40,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x620,48
    41                           	dabs	1,0x5C0,48
    42                           	dabs	1,0x1A0,43
    43                           	dabs	1,0x120,80
    44                           	dabs	1,0xD0,32
    45                           	dabs	1,0x20,24,_bds
    46                           	dabs	1,0x2390,0,_gdb_buf
    47                           	dabs	1,0x7E,2
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  008C                     	;# 
    75  008D                     	;# 
    76  008E                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0095                     	;# 
    80  0096                     	;# 
    81  0097                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  010C                     	;# 
    92  010D                     	;# 
    93  010E                     	;# 
    94  0111                     	;# 
    95  0112                     	;# 
    96  0113                     	;# 
    97  0114                     	;# 
    98  0115                     	;# 
    99  0116                     	;# 
   100  0117                     	;# 
   101  0118                     	;# 
   102  0119                     	;# 
   103  011D                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  018E                     	;# 
   107  0191                     	;# 
   108  0191                     	;# 
   109  0192                     	;# 
   110  0193                     	;# 
   111  0193                     	;# 
   112  0194                     	;# 
   113  0195                     	;# 
   114  0196                     	;# 
   115  0197                     	;# 
   116  0199                     	;# 
   117  019A                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019C                     	;# 
   121  019D                     	;# 
   122  019E                     	;# 
   123  019F                     	;# 
   124  020C                     	;# 
   125  020D                     	;# 
   126  0211                     	;# 
   127  0211                     	;# 
   128  0212                     	;# 
   129  0212                     	;# 
   130  0213                     	;# 
   131  0213                     	;# 
   132  0214                     	;# 
   133  0214                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0216                     	;# 
   138  0216                     	;# 
   139  0217                     	;# 
   140  0217                     	;# 
   141  0391                     	;# 
   142  0392                     	;# 
   143  0393                     	;# 
   144  0394                     	;# 
   145  0395                     	;# 
   146  0396                     	;# 
   147  039A                     	;# 
   148  039B                     	;# 
   149  0611                     	;# 
   150  0612                     	;# 
   151  0613                     	;# 
   152  0613                     	;# 
   153  0614                     	;# 
   154  0615                     	;# 
   155  0616                     	;# 
   156  0616                     	;# 
   157  0691                     	;# 
   158  0692                     	;# 
   159  0693                     	;# 
   160  0694                     	;# 
   161  0695                     	;# 
   162  0E8E                     	;# 
   163  0E8F                     	;# 
   164  0E90                     	;# 
   165  0E91                     	;# 
   166  0E92                     	;# 
   167  0E93                     	;# 
   168  0E94                     	;# 
   169  0E94                     	;# 
   170  0E95                     	;# 
   171  0E96                     	;# 
   172  0E97                     	;# 
   173  0E98                     	;# 
   174  0E99                     	;# 
   175  0E9A                     	;# 
   176  0E9B                     	;# 
   177  0E9C                     	;# 
   178  0E9D                     	;# 
   179  0E9E                     	;# 
   180  0E9F                     	;# 
   181  0FE4                     	;# 
   182  0FE5                     	;# 
   183  0FE6                     	;# 
   184  0FE7                     	;# 
   185  0FE8                     	;# 
   186  0FE9                     	;# 
   187  0FEA                     	;# 
   188  0FEB                     	;# 
   189  0FED                     	;# 
   190  0FEE                     	;# 
   191  0FEF                     	;# 
   192  0000                     	;# 
   193  0001                     	;# 
   194  0002                     	;# 
   195  0003                     	;# 
   196  0004                     	;# 
   197  0005                     	;# 
   198  0006                     	;# 
   199  0007                     	;# 
   200  0008                     	;# 
   201  0009                     	;# 
   202  000A                     	;# 
   203  000B                     	;# 
   204  000C                     	;# 
   205  000D                     	;# 
   206  000E                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009B                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  0111                     	;# 
   239  0112                     	;# 
   240  0113                     	;# 
   241  0114                     	;# 
   242  0115                     	;# 
   243  0116                     	;# 
   244  0117                     	;# 
   245  0118                     	;# 
   246  0119                     	;# 
   247  011D                     	;# 
   248  018C                     	;# 
   249  018D                     	;# 
   250  018E                     	;# 
   251  0191                     	;# 
   252  0191                     	;# 
   253  0192                     	;# 
   254  0193                     	;# 
   255  0193                     	;# 
   256  0194                     	;# 
   257  0195                     	;# 
   258  0196                     	;# 
   259  0197                     	;# 
   260  0199                     	;# 
   261  019A                     	;# 
   262  019B                     	;# 
   263  019B                     	;# 
   264  019C                     	;# 
   265  019D                     	;# 
   266  019E                     	;# 
   267  019F                     	;# 
   268  020C                     	;# 
   269  020D                     	;# 
   270  0211                     	;# 
   271  0211                     	;# 
   272  0212                     	;# 
   273  0212                     	;# 
   274  0213                     	;# 
   275  0213                     	;# 
   276  0214                     	;# 
   277  0214                     	;# 
   278  0215                     	;# 
   279  0215                     	;# 
   280  0215                     	;# 
   281  0216                     	;# 
   282  0216                     	;# 
   283  0217                     	;# 
   284  0217                     	;# 
   285  0391                     	;# 
   286  0392                     	;# 
   287  0393                     	;# 
   288  0394                     	;# 
   289  0395                     	;# 
   290  0396                     	;# 
   291  039A                     	;# 
   292  039B                     	;# 
   293  0611                     	;# 
   294  0612                     	;# 
   295  0613                     	;# 
   296  0613                     	;# 
   297  0614                     	;# 
   298  0615                     	;# 
   299  0616                     	;# 
   300  0616                     	;# 
   301  0691                     	;# 
   302  0692                     	;# 
   303  0693                     	;# 
   304  0694                     	;# 
   305  0695                     	;# 
   306  0E8E                     	;# 
   307  0E8F                     	;# 
   308  0E90                     	;# 
   309  0E91                     	;# 
   310  0E92                     	;# 
   311  0E93                     	;# 
   312  0E94                     	;# 
   313  0E94                     	;# 
   314  0E95                     	;# 
   315  0E96                     	;# 
   316  0E97                     	;# 
   317  0E98                     	;# 
   318  0E99                     	;# 
   319  0E9A                     	;# 
   320  0E9B                     	;# 
   321  0E9C                     	;# 
   322  0E9D                     	;# 
   323  0E9E                     	;# 
   324  0E9F                     	;# 
   325  0FE4                     	;# 
   326  0FE5                     	;# 
   327  0FE6                     	;# 
   328  0FE7                     	;# 
   329  0FE8                     	;# 
   330  0FE9                     	;# 
   331  0FEA                     	;# 
   332  0FEB                     	;# 
   333  0FED                     	;# 
   334  0FEE                     	;# 
   335  0FEF                     	;# 
   336  0000                     	;# 
   337  0001                     	;# 
   338  0002                     	;# 
   339  0003                     	;# 
   340  0004                     	;# 
   341  0005                     	;# 
   342  0006                     	;# 
   343  0007                     	;# 
   344  0008                     	;# 
   345  0009                     	;# 
   346  000A                     	;# 
   347  000B                     	;# 
   348  000C                     	;# 
   349  000D                     	;# 
   350  000E                     	;# 
   351  0011                     	;# 
   352  0012                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0016                     	;# 
   356  0017                     	;# 
   357  0018                     	;# 
   358  0019                     	;# 
   359  001A                     	;# 
   360  001B                     	;# 
   361  001C                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  008E                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0095                     	;# 
   368  0096                     	;# 
   369  0097                     	;# 
   370  0098                     	;# 
   371  0099                     	;# 
   372  009A                     	;# 
   373  009B                     	;# 
   374  009B                     	;# 
   375  009C                     	;# 
   376  009D                     	;# 
   377  009E                     	;# 
   378  009F                     	;# 
   379  010C                     	;# 
   380  010D                     	;# 
   381  010E                     	;# 
   382  0111                     	;# 
   383  0112                     	;# 
   384  0113                     	;# 
   385  0114                     	;# 
   386  0115                     	;# 
   387  0116                     	;# 
   388  0117                     	;# 
   389  0118                     	;# 
   390  0119                     	;# 
   391  011D                     	;# 
   392  018C                     	;# 
   393  018D                     	;# 
   394  018E                     	;# 
   395  0191                     	;# 
   396  0191                     	;# 
   397  0192                     	;# 
   398  0193                     	;# 
   399  0193                     	;# 
   400  0194                     	;# 
   401  0195                     	;# 
   402  0196                     	;# 
   403  0197                     	;# 
   404  0199                     	;# 
   405  019A                     	;# 
   406  019B                     	;# 
   407  019B                     	;# 
   408  019C                     	;# 
   409  019D                     	;# 
   410  019E                     	;# 
   411  019F                     	;# 
   412  020C                     	;# 
   413  020D                     	;# 
   414  0211                     	;# 
   415  0211                     	;# 
   416  0212                     	;# 
   417  0212                     	;# 
   418  0213                     	;# 
   419  0213                     	;# 
   420  0214                     	;# 
   421  0214                     	;# 
   422  0215                     	;# 
   423  0215                     	;# 
   424  0215                     	;# 
   425  0216                     	;# 
   426  0216                     	;# 
   427  0217                     	;# 
   428  0217                     	;# 
   429  0391                     	;# 
   430  0392                     	;# 
   431  0393                     	;# 
   432  0394                     	;# 
   433  0395                     	;# 
   434  0396                     	;# 
   435  039A                     	;# 
   436  039B                     	;# 
   437  0611                     	;# 
   438  0612                     	;# 
   439  0613                     	;# 
   440  0613                     	;# 
   441  0614                     	;# 
   442  0615                     	;# 
   443  0616                     	;# 
   444  0616                     	;# 
   445  0691                     	;# 
   446  0692                     	;# 
   447  0693                     	;# 
   448  0694                     	;# 
   449  0695                     	;# 
   450  0E8E                     	;# 
   451  0E8F                     	;# 
   452  0E90                     	;# 
   453  0E91                     	;# 
   454  0E92                     	;# 
   455  0E93                     	;# 
   456  0E94                     	;# 
   457  0E94                     	;# 
   458  0E95                     	;# 
   459  0E96                     	;# 
   460  0E97                     	;# 
   461  0E98                     	;# 
   462  0E99                     	;# 
   463  0E9A                     	;# 
   464  0E9B                     	;# 
   465  0E9C                     	;# 
   466  0E9D                     	;# 
   467  0E9E                     	;# 
   468  0E9F                     	;# 
   469  0FE4                     	;# 
   470  0FE5                     	;# 
   471  0FE6                     	;# 
   472  0FE7                     	;# 
   473  0FE8                     	;# 
   474  0FE9                     	;# 
   475  0FEA                     	;# 
   476  0FEB                     	;# 
   477  0FED                     	;# 
   478  0FEE                     	;# 
   479  0FEF                     	;# 
   480  0000                     	;# 
   481  0001                     	;# 
   482  0002                     	;# 
   483  0003                     	;# 
   484  0004                     	;# 
   485  0005                     	;# 
   486  0006                     	;# 
   487  0007                     	;# 
   488  0008                     	;# 
   489  0009                     	;# 
   490  000A                     	;# 
   491  000B                     	;# 
   492  000C                     	;# 
   493  000D                     	;# 
   494  000E                     	;# 
   495  0011                     	;# 
   496  0012                     	;# 
   497  0015                     	;# 
   498  0016                     	;# 
   499  0016                     	;# 
   500  0017                     	;# 
   501  0018                     	;# 
   502  0019                     	;# 
   503  001A                     	;# 
   504  001B                     	;# 
   505  001C                     	;# 
   506  008C                     	;# 
   507  008D                     	;# 
   508  008E                     	;# 
   509  0091                     	;# 
   510  0092                     	;# 
   511  0095                     	;# 
   512  0096                     	;# 
   513  0097                     	;# 
   514  0098                     	;# 
   515  0099                     	;# 
   516  009A                     	;# 
   517  009B                     	;# 
   518  009B                     	;# 
   519  009C                     	;# 
   520  009D                     	;# 
   521  009E                     	;# 
   522  009F                     	;# 
   523  010C                     	;# 
   524  010D                     	;# 
   525  010E                     	;# 
   526  0111                     	;# 
   527  0112                     	;# 
   528  0113                     	;# 
   529  0114                     	;# 
   530  0115                     	;# 
   531  0116                     	;# 
   532  0117                     	;# 
   533  0118                     	;# 
   534  0119                     	;# 
   535  011D                     	;# 
   536  018C                     	;# 
   537  018D                     	;# 
   538  018E                     	;# 
   539  0191                     	;# 
   540  0191                     	;# 
   541  0192                     	;# 
   542  0193                     	;# 
   543  0193                     	;# 
   544  0194                     	;# 
   545  0195                     	;# 
   546  0196                     	;# 
   547  0197                     	;# 
   548  0199                     	;# 
   549  019A                     	;# 
   550  019B                     	;# 
   551  019B                     	;# 
   552  019C                     	;# 
   553  019D                     	;# 
   554  019E                     	;# 
   555  019F                     	;# 
   556  020C                     	;# 
   557  020D                     	;# 
   558  0211                     	;# 
   559  0211                     	;# 
   560  0212                     	;# 
   561  0212                     	;# 
   562  0213                     	;# 
   563  0213                     	;# 
   564  0214                     	;# 
   565  0214                     	;# 
   566  0215                     	;# 
   567  0215                     	;# 
   568  0215                     	;# 
   569  0216                     	;# 
   570  0216                     	;# 
   571  0217                     	;# 
   572  0217                     	;# 
   573  0391                     	;# 
   574  0392                     	;# 
   575  0393                     	;# 
   576  0394                     	;# 
   577  0395                     	;# 
   578  0396                     	;# 
   579  039A                     	;# 
   580  039B                     	;# 
   581  0611                     	;# 
   582  0612                     	;# 
   583  0613                     	;# 
   584  0613                     	;# 
   585  0614                     	;# 
   586  0615                     	;# 
   587  0616                     	;# 
   588  0616                     	;# 
   589  0691                     	;# 
   590  0692                     	;# 
   591  0693                     	;# 
   592  0694                     	;# 
   593  0695                     	;# 
   594  0E8E                     	;# 
   595  0E8F                     	;# 
   596  0E90                     	;# 
   597  0E91                     	;# 
   598  0E92                     	;# 
   599  0E93                     	;# 
   600  0E94                     	;# 
   601  0E94                     	;# 
   602  0E95                     	;# 
   603  0E96                     	;# 
   604  0E97                     	;# 
   605  0E98                     	;# 
   606  0E99                     	;# 
   607  0E9A                     	;# 
   608  0E9B                     	;# 
   609  0E9C                     	;# 
   610  0E9D                     	;# 
   611  0E9E                     	;# 
   612  0E9F                     	;# 
   613  0FE4                     	;# 
   614  0FE5                     	;# 
   615  0FE6                     	;# 
   616  0FE7                     	;# 
   617  0FE8                     	;# 
   618  0FE9                     	;# 
   619  0FEA                     	;# 
   620  0FEB                     	;# 
   621  0FED                     	;# 
   622  0FEE                     	;# 
   623  0FEF                     	;# 
   624  0000                     	;# 
   625  0001                     	;# 
   626  0002                     	;# 
   627  0003                     	;# 
   628  0004                     	;# 
   629  0005                     	;# 
   630  0006                     	;# 
   631  0007                     	;# 
   632  0008                     	;# 
   633  0009                     	;# 
   634  000A                     	;# 
   635  000B                     	;# 
   636  000C                     	;# 
   637  000D                     	;# 
   638  000E                     	;# 
   639  0011                     	;# 
   640  0012                     	;# 
   641  0015                     	;# 
   642  0016                     	;# 
   643  0016                     	;# 
   644  0017                     	;# 
   645  0018                     	;# 
   646  0019                     	;# 
   647  001A                     	;# 
   648  001B                     	;# 
   649  001C                     	;# 
   650  008C                     	;# 
   651  008D                     	;# 
   652  008E                     	;# 
   653  0091                     	;# 
   654  0092                     	;# 
   655  0095                     	;# 
   656  0096                     	;# 
   657  0097                     	;# 
   658  0098                     	;# 
   659  0099                     	;# 
   660  009A                     	;# 
   661  009B                     	;# 
   662  009B                     	;# 
   663  009C                     	;# 
   664  009D                     	;# 
   665  009E                     	;# 
   666  009F                     	;# 
   667  010C                     	;# 
   668  010D                     	;# 
   669  010E                     	;# 
   670  0111                     	;# 
   671  0112                     	;# 
   672  0113                     	;# 
   673  0114                     	;# 
   674  0115                     	;# 
   675  0116                     	;# 
   676  0117                     	;# 
   677  0118                     	;# 
   678  0119                     	;# 
   679  011D                     	;# 
   680  018C                     	;# 
   681  018D                     	;# 
   682  018E                     	;# 
   683  0191                     	;# 
   684  0191                     	;# 
   685  0192                     	;# 
   686  0193                     	;# 
   687  0193                     	;# 
   688  0194                     	;# 
   689  0195                     	;# 
   690  0196                     	;# 
   691  0197                     	;# 
   692  0199                     	;# 
   693  019A                     	;# 
   694  019B                     	;# 
   695  019B                     	;# 
   696  019C                     	;# 
   697  019D                     	;# 
   698  019E                     	;# 
   699  019F                     	;# 
   700  020C                     	;# 
   701  020D                     	;# 
   702  0211                     	;# 
   703  0211                     	;# 
   704  0212                     	;# 
   705  0212                     	;# 
   706  0213                     	;# 
   707  0213                     	;# 
   708  0214                     	;# 
   709  0214                     	;# 
   710  0215                     	;# 
   711  0215                     	;# 
   712  0215                     	;# 
   713  0216                     	;# 
   714  0216                     	;# 
   715  0217                     	;# 
   716  0217                     	;# 
   717  0391                     	;# 
   718  0392                     	;# 
   719  0393                     	;# 
   720  0394                     	;# 
   721  0395                     	;# 
   722  0396                     	;# 
   723  039A                     	;# 
   724  039B                     	;# 
   725  0611                     	;# 
   726  0612                     	;# 
   727  0613                     	;# 
   728  0613                     	;# 
   729  0614                     	;# 
   730  0615                     	;# 
   731  0616                     	;# 
   732  0616                     	;# 
   733  0691                     	;# 
   734  0692                     	;# 
   735  0693                     	;# 
   736  0694                     	;# 
   737  0695                     	;# 
   738  0E8E                     	;# 
   739  0E8F                     	;# 
   740  0E90                     	;# 
   741  0E91                     	;# 
   742  0E92                     	;# 
   743  0E93                     	;# 
   744  0E94                     	;# 
   745  0E94                     	;# 
   746  0E95                     	;# 
   747  0E96                     	;# 
   748  0E97                     	;# 
   749  0E98                     	;# 
   750  0E99                     	;# 
   751  0E9A                     	;# 
   752  0E9B                     	;# 
   753  0E9C                     	;# 
   754  0E9D                     	;# 
   755  0E9E                     	;# 
   756  0E9F                     	;# 
   757  0FE4                     	;# 
   758  0FE5                     	;# 
   759  0FE6                     	;# 
   760  0FE7                     	;# 
   761  0FE8                     	;# 
   762  0FE9                     	;# 
   763  0FEA                     	;# 
   764  0FEB                     	;# 
   765  0FED                     	;# 
   766  0FEE                     	;# 
   767  0FEF                     	;# 
   768  0000                     	;# 
   769  0001                     	;# 
   770  0002                     	;# 
   771  0003                     	;# 
   772  0004                     	;# 
   773  0005                     	;# 
   774  0006                     	;# 
   775  0007                     	;# 
   776  0008                     	;# 
   777  0009                     	;# 
   778  000A                     	;# 
   779  000B                     	;# 
   780  000C                     	;# 
   781  000D                     	;# 
   782  000E                     	;# 
   783  0011                     	;# 
   784  0012                     	;# 
   785  0015                     	;# 
   786  0016                     	;# 
   787  0016                     	;# 
   788  0017                     	;# 
   789  0018                     	;# 
   790  0019                     	;# 
   791  001A                     	;# 
   792  001B                     	;# 
   793  001C                     	;# 
   794  008C                     	;# 
   795  008D                     	;# 
   796  008E                     	;# 
   797  0091                     	;# 
   798  0092                     	;# 
   799  0095                     	;# 
   800  0096                     	;# 
   801  0097                     	;# 
   802  0098                     	;# 
   803  0099                     	;# 
   804  009A                     	;# 
   805  009B                     	;# 
   806  009B                     	;# 
   807  009C                     	;# 
   808  009D                     	;# 
   809  009E                     	;# 
   810  009F                     	;# 
   811  010C                     	;# 
   812  010D                     	;# 
   813  010E                     	;# 
   814  0111                     	;# 
   815  0112                     	;# 
   816  0113                     	;# 
   817  0114                     	;# 
   818  0115                     	;# 
   819  0116                     	;# 
   820  0117                     	;# 
   821  0118                     	;# 
   822  0119                     	;# 
   823  011D                     	;# 
   824  018C                     	;# 
   825  018D                     	;# 
   826  018E                     	;# 
   827  0191                     	;# 
   828  0191                     	;# 
   829  0192                     	;# 
   830  0193                     	;# 
   831  0193                     	;# 
   832  0194                     	;# 
   833  0195                     	;# 
   834  0196                     	;# 
   835  0197                     	;# 
   836  0199                     	;# 
   837  019A                     	;# 
   838  019B                     	;# 
   839  019B                     	;# 
   840  019C                     	;# 
   841  019D                     	;# 
   842  019E                     	;# 
   843  019F                     	;# 
   844  020C                     	;# 
   845  020D                     	;# 
   846  0211                     	;# 
   847  0211                     	;# 
   848  0212                     	;# 
   849  0212                     	;# 
   850  0213                     	;# 
   851  0213                     	;# 
   852  0214                     	;# 
   853  0214                     	;# 
   854  0215                     	;# 
   855  0215                     	;# 
   856  0215                     	;# 
   857  0216                     	;# 
   858  0216                     	;# 
   859  0217                     	;# 
   860  0217                     	;# 
   861  0391                     	;# 
   862  0392                     	;# 
   863  0393                     	;# 
   864  0394                     	;# 
   865  0395                     	;# 
   866  0396                     	;# 
   867  039A                     	;# 
   868  039B                     	;# 
   869  0611                     	;# 
   870  0612                     	;# 
   871  0613                     	;# 
   872  0613                     	;# 
   873  0614                     	;# 
   874  0615                     	;# 
   875  0616                     	;# 
   876  0616                     	;# 
   877  0691                     	;# 
   878  0692                     	;# 
   879  0693                     	;# 
   880  0694                     	;# 
   881  0695                     	;# 
   882  0E8E                     	;# 
   883  0E8F                     	;# 
   884  0E90                     	;# 
   885  0E91                     	;# 
   886  0E92                     	;# 
   887  0E93                     	;# 
   888  0E94                     	;# 
   889  0E94                     	;# 
   890  0E95                     	;# 
   891  0E96                     	;# 
   892  0E97                     	;# 
   893  0E98                     	;# 
   894  0E99                     	;# 
   895  0E9A                     	;# 
   896  0E9B                     	;# 
   897  0E9C                     	;# 
   898  0E9D                     	;# 
   899  0E9E                     	;# 
   900  0E9F                     	;# 
   901  0FE4                     	;# 
   902  0FE5                     	;# 
   903  0FE6                     	;# 
   904  0FE7                     	;# 
   905  0FE8                     	;# 
   906  0FE9                     	;# 
   907  0FEA                     	;# 
   908  0FEB                     	;# 
   909  0FED                     	;# 
   910  0FEE                     	;# 
   911  0FEF                     	;# 
   912  0000                     	;# 
   913  0001                     	;# 
   914  0002                     	;# 
   915  0003                     	;# 
   916  0004                     	;# 
   917  0005                     	;# 
   918  0006                     	;# 
   919  0007                     	;# 
   920  0008                     	;# 
   921  0009                     	;# 
   922  000A                     	;# 
   923  000B                     	;# 
   924  000C                     	;# 
   925  000D                     	;# 
   926  000E                     	;# 
   927  0011                     	;# 
   928  0012                     	;# 
   929  0015                     	;# 
   930  0016                     	;# 
   931  0016                     	;# 
   932  0017                     	;# 
   933  0018                     	;# 
   934  0019                     	;# 
   935  001A                     	;# 
   936  001B                     	;# 
   937  001C                     	;# 
   938  008C                     	;# 
   939  008D                     	;# 
   940  008E                     	;# 
   941  0091                     	;# 
   942  0092                     	;# 
   943  0095                     	;# 
   944  0096                     	;# 
   945  0097                     	;# 
   946  0098                     	;# 
   947  0099                     	;# 
   948  009A                     	;# 
   949  009B                     	;# 
   950  009B                     	;# 
   951  009C                     	;# 
   952  009D                     	;# 
   953  009E                     	;# 
   954  009F                     	;# 
   955  010C                     	;# 
   956  010D                     	;# 
   957  010E                     	;# 
   958  0111                     	;# 
   959  0112                     	;# 
   960  0113                     	;# 
   961  0114                     	;# 
   962  0115                     	;# 
   963  0116                     	;# 
   964  0117                     	;# 
   965  0118                     	;# 
   966  0119                     	;# 
   967  011D                     	;# 
   968  018C                     	;# 
   969  018D                     	;# 
   970  018E                     	;# 
   971  0191                     	;# 
   972  0191                     	;# 
   973  0192                     	;# 
   974  0193                     	;# 
   975  0193                     	;# 
   976  0194                     	;# 
   977  0195                     	;# 
   978  0196                     	;# 
   979  0197                     	;# 
   980  0199                     	;# 
   981  019A                     	;# 
   982  019B                     	;# 
   983  019B                     	;# 
   984  019C                     	;# 
   985  019D                     	;# 
   986  019E                     	;# 
   987  019F                     	;# 
   988  020C                     	;# 
   989  020D                     	;# 
   990  0211                     	;# 
   991  0211                     	;# 
   992  0212                     	;# 
   993  0212                     	;# 
   994  0213                     	;# 
   995  0213                     	;# 
   996  0214                     	;# 
   997  0214                     	;# 
   998  0215                     	;# 
   999  0215                     	;# 
  1000  0215                     	;# 
  1001  0216                     	;# 
  1002  0216                     	;# 
  1003  0217                     	;# 
  1004  0217                     	;# 
  1005  0391                     	;# 
  1006  0392                     	;# 
  1007  0393                     	;# 
  1008  0394                     	;# 
  1009  0395                     	;# 
  1010  0396                     	;# 
  1011  039A                     	;# 
  1012  039B                     	;# 
  1013  0611                     	;# 
  1014  0612                     	;# 
  1015  0613                     	;# 
  1016  0613                     	;# 
  1017  0614                     	;# 
  1018  0615                     	;# 
  1019  0616                     	;# 
  1020  0616                     	;# 
  1021  0691                     	;# 
  1022  0692                     	;# 
  1023  0693                     	;# 
  1024  0694                     	;# 
  1025  0695                     	;# 
  1026  0E8E                     	;# 
  1027  0E8F                     	;# 
  1028  0E90                     	;# 
  1029  0E91                     	;# 
  1030  0E92                     	;# 
  1031  0E93                     	;# 
  1032  0E94                     	;# 
  1033  0E94                     	;# 
  1034  0E95                     	;# 
  1035  0E96                     	;# 
  1036  0E97                     	;# 
  1037  0E98                     	;# 
  1038  0E99                     	;# 
  1039  0E9A                     	;# 
  1040  0E9B                     	;# 
  1041  0E9C                     	;# 
  1042  0E9D                     	;# 
  1043  0E9E                     	;# 
  1044  0E9F                     	;# 
  1045  0FE4                     	;# 
  1046  0FE5                     	;# 
  1047  0FE6                     	;# 
  1048  0FE7                     	;# 
  1049  0FE8                     	;# 
  1050  0FE9                     	;# 
  1051  0FEA                     	;# 
  1052  0FEB                     	;# 
  1053  0FED                     	;# 
  1054  0FEE                     	;# 
  1055  0FEF                     	;# 
  1056  0000                     	;# 
  1057  0001                     	;# 
  1058  0002                     	;# 
  1059  0003                     	;# 
  1060  0004                     	;# 
  1061  0005                     	;# 
  1062  0006                     	;# 
  1063  0007                     	;# 
  1064  0008                     	;# 
  1065  0009                     	;# 
  1066  000A                     	;# 
  1067  000B                     	;# 
  1068  000C                     	;# 
  1069  000D                     	;# 
  1070  000E                     	;# 
  1071  0011                     	;# 
  1072  0012                     	;# 
  1073  0015                     	;# 
  1074  0016                     	;# 
  1075  0016                     	;# 
  1076  0017                     	;# 
  1077  0018                     	;# 
  1078  0019                     	;# 
  1079  001A                     	;# 
  1080  001B                     	;# 
  1081  001C                     	;# 
  1082  008C                     	;# 
  1083  008D                     	;# 
  1084  008E                     	;# 
  1085  0091                     	;# 
  1086  0092                     	;# 
  1087  0095                     	;# 
  1088  0096                     	;# 
  1089  0097                     	;# 
  1090  0098                     	;# 
  1091  0099                     	;# 
  1092  009A                     	;# 
  1093  009B                     	;# 
  1094  009B                     	;# 
  1095  009C                     	;# 
  1096  009D                     	;# 
  1097  009E                     	;# 
  1098  009F                     	;# 
  1099  010C                     	;# 
  1100  010D                     	;# 
  1101  010E                     	;# 
  1102  0111                     	;# 
  1103  0112                     	;# 
  1104  0113                     	;# 
  1105  0114                     	;# 
  1106  0115                     	;# 
  1107  0116                     	;# 
  1108  0117                     	;# 
  1109  0118                     	;# 
  1110  0119                     	;# 
  1111  011D                     	;# 
  1112  018C                     	;# 
  1113  018D                     	;# 
  1114  018E                     	;# 
  1115  0191                     	;# 
  1116  0191                     	;# 
  1117  0192                     	;# 
  1118  0193                     	;# 
  1119  0193                     	;# 
  1120  0194                     	;# 
  1121  0195                     	;# 
  1122  0196                     	;# 
  1123  0197                     	;# 
  1124  0199                     	;# 
  1125  019A                     	;# 
  1126  019B                     	;# 
  1127  019B                     	;# 
  1128  019C                     	;# 
  1129  019D                     	;# 
  1130  019E                     	;# 
  1131  019F                     	;# 
  1132  020C                     	;# 
  1133  020D                     	;# 
  1134  0211                     	;# 
  1135  0211                     	;# 
  1136  0212                     	;# 
  1137  0212                     	;# 
  1138  0213                     	;# 
  1139  0213                     	;# 
  1140  0214                     	;# 
  1141  0214                     	;# 
  1142  0215                     	;# 
  1143  0215                     	;# 
  1144  0215                     	;# 
  1145  0216                     	;# 
  1146  0216                     	;# 
  1147  0217                     	;# 
  1148  0217                     	;# 
  1149  0391                     	;# 
  1150  0392                     	;# 
  1151  0393                     	;# 
  1152  0394                     	;# 
  1153  0395                     	;# 
  1154  0396                     	;# 
  1155  039A                     	;# 
  1156  039B                     	;# 
  1157  0611                     	;# 
  1158  0612                     	;# 
  1159  0613                     	;# 
  1160  0613                     	;# 
  1161  0614                     	;# 
  1162  0615                     	;# 
  1163  0616                     	;# 
  1164  0616                     	;# 
  1165  0691                     	;# 
  1166  0692                     	;# 
  1167  0693                     	;# 
  1168  0694                     	;# 
  1169  0695                     	;# 
  1170  0E8E                     	;# 
  1171  0E8F                     	;# 
  1172  0E90                     	;# 
  1173  0E91                     	;# 
  1174  0E92                     	;# 
  1175  0E93                     	;# 
  1176  0E94                     	;# 
  1177  0E94                     	;# 
  1178  0E95                     	;# 
  1179  0E96                     	;# 
  1180  0E97                     	;# 
  1181  0E98                     	;# 
  1182  0E99                     	;# 
  1183  0E9A                     	;# 
  1184  0E9B                     	;# 
  1185  0E9C                     	;# 
  1186  0E9D                     	;# 
  1187  0E9E                     	;# 
  1188  0E9F                     	;# 
  1189  0FE4                     	;# 
  1190  0FE5                     	;# 
  1191  0FE6                     	;# 
  1192  0FE7                     	;# 
  1193  0FE8                     	;# 
  1194  0FE9                     	;# 
  1195  0FEA                     	;# 
  1196  0FEB                     	;# 
  1197  0FED                     	;# 
  1198  0FEE                     	;# 
  1199  0FEF                     	;_ep_buffers
  1200                           
  1201                           	psect	idataBANK5
  1202  0000                     __pidataBANK5:	
  1203                           
  1204                           	psect	idataBANK6
  1205  0000                     __pidataBANK6:	
  1206                           
  1207                           	psect	idataBANK7
  1208  0000                     __pidataBANK7:	
  1209                           
  1210                           	psect	stringtext
  1211  1800                     __pstringtext:	
  1212  1800                     _fake_serial_num:	
  1213  1800  3478               	retlw	120
  1214  1801  3403               	retlw	3
  1215  1802  3446               	retlw	70
  1216  1803  3400               	retlw	0
  1217  1804  3441               	retlw	65
  1218  1805  3400               	retlw	0
  1219  1806  344B               	retlw	75
  1220  1807  3400               	retlw	0
  1221  1808  3445               	retlw	69
  1222  1809  3400               	retlw	0
  1223  180A  3420               	retlw	32
  1224  180B  3400               	retlw	0
  1225  180C  3453               	retlw	83
  1226  180D  3400               	retlw	0
  1227  180E  3465               	retlw	101
  1228  180F  3400               	retlw	0
  1229  1810  3472               	retlw	114
  1230  1811  3400               	retlw	0
  1231  1812  3469               	retlw	105
  1232  1813  3400               	retlw	0
  1233  1814  3461               	retlw	97
  1234  1815  3400               	retlw	0
  1235  1816  346C               	retlw	108
  1236  1817  3400               	retlw	0
  1237  1818  3420               	retlw	32
  1238  1819  3400               	retlw	0
  1239  181A  344E               	retlw	78
  1240  181B  3400               	retlw	0
  1241  181C  3475               	retlw	117
  1242  181D  3400               	retlw	0
  1243  181E  346D               	retlw	109
  1244  181F  3400               	retlw	0
  1245  1820  3462               	retlw	98
  1246  1821  3400               	retlw	0
  1247  1822  3465               	retlw	101
  1248  1823  3400               	retlw	0
  1249  1824  3472               	retlw	114
  1250  1825  3400               	retlw	0
  1251  1826  343A               	retlw	58
  1252  1827  3400               	retlw	0
  1253  1828  3420               	retlw	32
  1254  1829  3400               	retlw	0
  1255  182A  3444               	retlw	68
  1256  182B  3400               	retlw	0
  1257  182C  346F               	retlw	111
  1258  182D  3400               	retlw	0
  1259  182E  346E               	retlw	110
  1260  182F  3400               	retlw	0
  1261  1830  3427               	retlw	39
  1262  1831  3400               	retlw	0
  1263  1832  3474               	retlw	116
  1264  1833  3400               	retlw	0
  1265  1834  3420               	retlw	32
  1266  1835  3400               	retlw	0
  1267  1836  3473               	retlw	115
  1268  1837  3400               	retlw	0
  1269  1838  3468               	retlw	104
  1270  1839  3400               	retlw	0
  1271  183A  3469               	retlw	105
  1272  183B  3400               	retlw	0
  1273  183C  3470               	retlw	112
  1274  183D  3400               	retlw	0
  1275  183E  3420               	retlw	32
  1276  183F  3400               	retlw	0
  1277  1840  3461               	retlw	97
  1278  1841  3400               	retlw	0
  1279  1842  3420               	retlw	32
  1280  1843  3400               	retlw	0
  1281  1844  3470               	retlw	112
  1282  1845  3400               	retlw	0
  1283  1846  3472               	retlw	114
  1284  1847  3400               	retlw	0
  1285  1848  346F               	retlw	111
  1286  1849  3400               	retlw	0
  1287  184A  3464               	retlw	100
  1288  184B  3400               	retlw	0
  1289  184C  3475               	retlw	117
  1290  184D  3400               	retlw	0
  1291  184E  3463               	retlw	99
  1292  184F  3400               	retlw	0
  1293  1850  3474               	retlw	116
  1294  1851  3400               	retlw	0
  1295  1852  3420               	retlw	32
  1296  1853  3400               	retlw	0
  1297  1854  346C               	retlw	108
  1298  1855  3400               	retlw	0
  1299  1856  3469               	retlw	105
  1300  1857  3400               	retlw	0
  1301  1858  346B               	retlw	107
  1302  1859  3400               	retlw	0
  1303  185A  3465               	retlw	101
  1304  185B  3400               	retlw	0
  1305  185C  3420               	retlw	32
  1306  185D  3400               	retlw	0
  1307  185E  3474               	retlw	116
  1308  185F  3400               	retlw	0
  1309  1860  3468               	retlw	104
  1310  1861  3400               	retlw	0
  1311  1862  3469               	retlw	105
  1312  1863  3400               	retlw	0
  1313  1864  3473               	retlw	115
  1314  1865  3400               	retlw	0
  1315  1866  342E               	retlw	46
  1316  1867  3400               	retlw	0
  1317  1868  3420               	retlw	32
  1318  1869  3400               	retlw	0
  1319  186A  3450               	retlw	80
  1320  186B  3400               	retlw	0
  1321  186C  344C               	retlw	76
  1322  186D  3400               	retlw	0
  1323  186E  3445               	retlw	69
  1324  186F  3400               	retlw	0
  1325  1870  3441               	retlw	65
  1326  1871  3400               	retlw	0
  1327  1872  3453               	retlw	83
  1328  1873  3400               	retlw	0
  1329  1874  3445               	retlw	69
  1330  1875  3400               	retlw	0
  1331  1876  3421               	retlw	33
  1332  1877  3400               	retlw	0
  1333  1878                     __end_of_fake_serial_num:	
  1334  1878                     _configuration_1:	
  1335  1878  3409               	retlw	9
  1336  1879  3402               	retlw	2
  1337  187A  3446               	retlw	70
  1338  187B  3400               	retlw	0
  1339  187C  3402               	retlw	2
  1340  187D  3401               	retlw	1
  1341  187E  3402               	retlw	2
  1342  187F  3480               	retlw	128
  1343  1880  34FA               	retlw	250
  1344  1881  3408               	retlw	8
  1345  1882  340B               	retlw	11
  1346  1883  3400               	retlw	0
  1347  1884  3402               	retlw	2
  1348  1885  3402               	retlw	2
  1349  1886  3402               	retlw	2
  1350  1887  3400               	retlw	0
  1351  1888  3402               	retlw	2
  1352  1889  3409               	retlw	9
  1353  188A  3404               	retlw	4
  1354  188B  3400               	retlw	0
  1355  188C  3400               	retlw	0
  1356  188D  3401               	retlw	1
  1357  188E  3402               	retlw	2
  1358  188F  3402               	retlw	2
  1359  1890  3400               	retlw	0
  1360  1891  3403               	retlw	3
  1361  1892  3405               	retlw	5
  1362  1893  3424               	retlw	36
  1363  1894  3400               	retlw	0
  1364  1895  3410               	retlw	16
  1365  1896  3401               	retlw	1
  1366  1897  3404               	retlw	4
  1367  1898  3424               	retlw	36
  1368  1899  3402               	retlw	2
  1369  189A  3406               	retlw	6
  1370  189B  3405               	retlw	5
  1371  189C  3424               	retlw	36
  1372  189D  3406               	retlw	6
  1373  189E  3400               	retlw	0
  1374  189F  3401               	retlw	1
  1375  18A0  3407               	retlw	7
  1376  18A1  3405               	retlw	5
  1377  18A2  3481               	retlw	129
  1378  18A3  3403               	retlw	3
  1379  18A4  340A               	retlw	10
  1380  18A5  3400               	retlw	0
  1381  18A6  3401               	retlw	1
  1382  18A7  3409               	retlw	9
  1383  18A8  3404               	retlw	4
  1384  18A9  3401               	retlw	1
  1385  18AA  3400               	retlw	0
  1386  18AB  3402               	retlw	2
  1387  18AC  340A               	retlw	10
  1388  18AD  3400               	retlw	0
  1389  18AE  3400               	retlw	0
  1390  18AF  3404               	retlw	4
  1391  18B0  3407               	retlw	7
  1392  18B1  3405               	retlw	5
  1393  18B2  3482               	retlw	130
  1394  18B3  3402               	retlw	2
  1395  18B4  3440               	retlw	64
  1396  18B5  3400               	retlw	0
  1397  18B6  3401               	retlw	1
  1398  18B7  3407               	retlw	7
  1399  18B8  3405               	retlw	5
  1400  18B9  3402               	retlw	2
  1401  18BA  3402               	retlw	2
  1402  18BB  3440               	retlw	64
  1403  18BC  3400               	retlw	0
  1404  18BD  3401               	retlw	1
  1405  18BE                     __end_of_configuration_1:	
  1406  18BE                     _vendor_string:	
  1407  18BE  3430               	retlw	48
  1408  18BF  3403               	retlw	3
  1409  18C0  3453               	retlw	83
  1410  18C1  3400               	retlw	0
  1411  18C2  3469               	retlw	105
  1412  18C3  3400               	retlw	0
  1413  18C4  3467               	retlw	103
  1414  18C5  3400               	retlw	0
  1415  18C6  346E               	retlw	110
  1416  18C7  3400               	retlw	0
  1417  18C8  3461               	retlw	97
  1418  18C9  3400               	retlw	0
  1419  18CA  346C               	retlw	108
  1420  18CB  3400               	retlw	0
  1421  18CC  3420               	retlw	32
  1422  18CD  3400               	retlw	0
  1423  18CE  3431               	retlw	49
  1424  18CF  3400               	retlw	0
  1425  18D0  3431               	retlw	49
  1426  18D1  3400               	retlw	0
  1427  18D2  3420               	retlw	32
  1428  18D3  3400               	retlw	0
  1429  18D4  3453               	retlw	83
  1430  18D5  3400               	retlw	0
  1431  18D6  346F               	retlw	111
  1432  18D7  3400               	retlw	0
  1433  18D8  3466               	retlw	102
  1434  18D9  3400               	retlw	0
  1435  18DA  3474               	retlw	116
  1436  18DB  3400               	retlw	0
  1437  18DC  3477               	retlw	119
  1438  18DD  3400               	retlw	0
  1439  18DE  3461               	retlw	97
  1440  18DF  3400               	retlw	0
  1441  18E0  3472               	retlw	114
  1442  18E1  3400               	retlw	0
  1443  18E2  3465               	retlw	101
  1444  18E3  3400               	retlw	0
  1445  18E4  3420               	retlw	32
  1446  18E5  3400               	retlw	0
  1447  18E6  344C               	retlw	76
  1448  18E7  3400               	retlw	0
  1449  18E8  344C               	retlw	76
  1450  18E9  3400               	retlw	0
  1451  18EA  3443               	retlw	67
  1452  18EB  3400               	retlw	0
  1453  18EC  342E               	retlw	46
  1454  18ED  3400               	retlw	0
  1455  18EE                     __end_of_vendor_string:	
  1456  18EE                     _cdc_data_string:	
  1457  18EE  3426               	retlw	38
  1458  18EF  3403               	retlw	3
  1459  18F0  3443               	retlw	67
  1460  18F1  3400               	retlw	0
  1461  18F2  3444               	retlw	68
  1462  18F3  3400               	retlw	0
  1463  18F4  3443               	retlw	67
  1464  18F5  3400               	retlw	0
  1465  18F6  3420               	retlw	32
  1466  18F7  3400               	retlw	0
  1467  18F8  3444               	retlw	68
  1468  18F9  3400               	retlw	0
  1469  18FA  3461               	retlw	97
  1470  18FB  3400               	retlw	0
  1471  18FC  3474               	retlw	116
  1472  18FD  3400               	retlw	0
  1473  18FE  3461               	retlw	97
  1474  18FF  3400               	retlw	0
  1475  1900  3420               	retlw	32
  1476  1901  3400               	retlw	0
  1477  1902  3449               	retlw	73
  1478  1903  3400               	retlw	0
  1479  1904  346E               	retlw	110
  1480  1905  3400               	retlw	0
  1481  1906  3474               	retlw	116
  1482  1907  3400               	retlw	0
  1483  1908  3465               	retlw	101
  1484  1909  3400               	retlw	0
  1485  190A  3472               	retlw	114
  1486  190B  3400               	retlw	0
  1487  190C  3466               	retlw	102
  1488  190D  3400               	retlw	0
  1489  190E  3461               	retlw	97
  1490  190F  3400               	retlw	0
  1491  1910  3463               	retlw	99
  1492  1911  3400               	retlw	0
  1493  1912  3465               	retlw	101
  1494  1913  3400               	retlw	0
  1495  1914                     __end_of_cdc_data_string:	
  1496  1914                     _cdc_interface_string:	
  1497  1914  341C               	retlw	28
  1498  1915  3403               	retlw	3
  1499  1916  3443               	retlw	67
  1500  1917  3400               	retlw	0
  1501  1918  3444               	retlw	68
  1502  1919  3400               	retlw	0
  1503  191A  3443               	retlw	67
  1504  191B  3400               	retlw	0
  1505  191C  3420               	retlw	32
  1506  191D  3400               	retlw	0
  1507  191E  3449               	retlw	73
  1508  191F  3400               	retlw	0
  1509  1920  346E               	retlw	110
  1510  1921  3400               	retlw	0
  1511  1922  3474               	retlw	116
  1512  1923  3400               	retlw	0
  1513  1924  3465               	retlw	101
  1514  1925  3400               	retlw	0
  1515  1926  3472               	retlw	114
  1516  1927  3400               	retlw	0
  1517  1928  3466               	retlw	102
  1518  1929  3400               	retlw	0
  1519  192A  3461               	retlw	97
  1520  192B  3400               	retlw	0
  1521  192C  3463               	retlw	99
  1522  192D  3400               	retlw	0
  1523  192E  3465               	retlw	101
  1524  192F  3400               	retlw	0
  1525  1930                     __end_of_cdc_interface_string:	
  1526  1930                     _product_string:	
  1527  1930  341A               	retlw	26
  1528  1931  3403               	retlw	3
  1529  1932  3455               	retlw	85
  1530  1933  3400               	retlw	0
  1531  1934  3453               	retlw	83
  1532  1935  3400               	retlw	0
  1533  1936  3442               	retlw	66
  1534  1937  3400               	retlw	0
  1535  1938  3420               	retlw	32
  1536  1939  3400               	retlw	0
  1537  193A  3443               	retlw	67
  1538  193B  3400               	retlw	0
  1539  193C  3444               	retlw	68
  1540  193D  3400               	retlw	0
  1541  193E  3443               	retlw	67
  1542  193F  3400               	retlw	0
  1543  1940  3420               	retlw	32
  1544  1941  3400               	retlw	0
  1545  1942  3454               	retlw	84
  1546  1943  3400               	retlw	0
  1547  1944  3465               	retlw	101
  1548  1945  3400               	retlw	0
  1549  1946  3473               	retlw	115
  1550  1947  3400               	retlw	0
  1551  1948  3474               	retlw	116
  1552  1949  3400               	retlw	0
  1553  194A                     __end_of_product_string:	
  1554  194A                     _this_device_descriptor:	
  1555  194A  3412               	retlw	18
  1556  194B  3401               	retlw	1
  1557  194C  3400               	retlw	0
  1558  194D  3402               	retlw	2
  1559  194E  34EF               	retlw	239
  1560  194F  3402               	retlw	2
  1561  1950  3401               	retlw	1
  1562  1951  3408               	retlw	8
  1563  1952  34A0               	retlw	160
  1564  1953  34A0               	retlw	160
  1565  1954  3404               	retlw	4
  1566  1955  3400               	retlw	0
  1567  1956  3401               	retlw	1
  1568  1957  3400               	retlw	0
  1569  1958  3401               	retlw	1
  1570  1959  3402               	retlw	2
  1571  195A  3405               	retlw	5
  1572  195B  3401               	retlw	1
  1573  195C                     __end_of_this_device_descriptor:	
  1574  195C                     _str00:	
  1575  195C  3404               	retlw	4
  1576  195D  3403               	retlw	3
  1577  195E  3409               	retlw	9
  1578  195F  3404               	retlw	4
  1579  1960                     __end_of_str00:	
  1580  2080                     _ep_buffers	set	8320
  1581  000B                     _INTCONbits	set	11
  1582  0012                     _PIR2bits	set	18
  1583  000C                     _PORTAbits	set	12
  1584  0099                     _OSCCONbits	set	153
  1585  0092                     _PIE2bits	set	146
  1586  008C                     _TRISA	set	140
  1587  008D                     _TRISBbits	set	141
  1588  008E                     _TRISC	set	142
  1589  04CA                     _IRCF0	set	1226
  1590  04CB                     _IRCF1	set	1227
  1591  04CC                     _IRCF2	set	1228
  1592  04CD                     _IRCF3	set	1229
  1593  04C8                     _SCS0	set	1224
  1594  04C9                     _SCS1	set	1225
  1595  04CF                     _SPLLEN	set	1231
  1596  04CE                     _SPLLMULT	set	1230
  1597  010D                     _LATBbits	set	269
  1598  010E                     _LATCbits	set	270
  1599  039B                     _ACTCONbits	set	923
  1600  0E96                     _UADDR	set	3734
  1601  0E91                     _UCFGbits	set	3729
  1602  0E8E                     _UCONbits	set	3726
  1603  0E97                     _UEIE	set	3735
  1604  0E92                     _UIE	set	3730
  1605  0E92                     _UIEbits	set	3730
  1606  0E90                     _UIR	set	3728
  1607  0E90                     _UIRbits	set	3728
  1608  0E8F                     _USTATbits	set	3727
  1609  0E98                     _UEP0	set	3736
  1610  1960                     __stringdata:	
  1611  1960                     STR_3:	
  1612  1960  3450               	retlw	80	;'P'
  1613  1961  3461               	retlw	97	;'a'
  1614  1962  3463               	retlw	99	;'c'
  1615  1963  346B               	retlw	107	;'k'
  1616  1964  3465               	retlw	101	;'e'
  1617  1965  3453               	retlw	83	;'S'
  1618  1966  3469               	retlw	105	;'i'
  1619  1967  347A               	retlw	122	;'z'
  1620  1968  3465               	retlw	101	;'e'
  1621  1969  343D               	retlw	61	;'='
  1622  196A  3436               	retlw	54	;'6'
  1623  196B  3434               	retlw	52	;'4'
  1624  196C  343B               	retlw	59	;';'
  1625  196D  346D               	retlw	109	;'m'
  1626  196E  3475               	retlw	117	;'u'
  1627  196F  346C               	retlw	108	;'l'
  1628  1970  3474               	retlw	116	;'t'
  1629  1971  3469               	retlw	105	;'i'
  1630  1972  3470               	retlw	112	;'p'
  1631  1973  3472               	retlw	114	;'r'
  1632  1974  346F               	retlw	111	;'o'
  1633  1975  3463               	retlw	99	;'c'
  1634  1976  3465               	retlw	101	;'e'
  1635  1977  3473               	retlw	115	;'s'
  1636  1978  3473               	retlw	115	;'s'
  1637  1979  342D               	retlw	45	;'-'
  1638  197A  343B               	retlw	59	;';'
  1639  197B  3473               	retlw	115	;'s'
  1640  197C  3477               	retlw	119	;'w'
  1641  197D  3462               	retlw	98	;'b'
  1642  197E  3472               	retlw	114	;'r'
  1643  197F  3465               	retlw	101	;'e'
  1644  1980  3461               	retlw	97	;'a'
  1645  1981  346B               	retlw	107	;'k'
  1646  1982  342B               	retlw	43	;'+'
  1647  1983  343B               	retlw	59	;';'
  1648  1984  3468               	retlw	104	;'h'
  1649  1985  3477               	retlw	119	;'w'
  1650  1986  3462               	retlw	98	;'b'
  1651  1987  3472               	retlw	114	;'r'
  1652  1988  3465               	retlw	101	;'e'
  1653  1989  3461               	retlw	97	;'a'
  1654  198A  346B               	retlw	107	;'k'
  1655  198B  342B               	retlw	43	;'+'
  1656  198C  343B               	retlw	59	;';'
  1657  198D  3471               	retlw	113	;'q'
  1658  198E  3452               	retlw	82	;'R'
  1659  198F  3465               	retlw	101	;'e'
  1660  1990  346C               	retlw	108	;'l'
  1661  1991  346F               	retlw	111	;'o'
  1662  1992  3463               	retlw	99	;'c'
  1663  1993  3449               	retlw	73	;'I'
  1664  1994  346E               	retlw	110	;'n'
  1665  1995  3473               	retlw	115	;'s'
  1666  1996  346E               	retlw	110	;'n'
  1667  1997  342D               	retlw	45	;'-'
  1668  1998  343B               	retlw	59	;';'
  1669  1999  3476               	retlw	118	;'v'
  1670  199A  3443               	retlw	67	;'C'
  1671  199B  346F               	retlw	111	;'o'
  1672  199C  346E               	retlw	110	;'n'
  1673  199D  3474               	retlw	116	;'t'
  1674  199E  3453               	retlw	83	;'S'
  1675  199F  3475               	retlw	117	;'u'
  1676  19A0  3470               	retlw	112	;'p'
  1677  19A1  3470               	retlw	112	;'p'
  1678  19A2  346F               	retlw	111	;'o'
  1679  19A3  3472               	retlw	114	;'r'
  1680  19A4  3474               	retlw	116	;'t'
  1681  19A5  3465               	retlw	101	;'e'
  1682  19A6  3464               	retlw	100	;'d'
  1683  19A7  342D               	retlw	45	;'-'
  1684  19A8  3400               	retlw	0
  1685  19A9                     STR_2:	
  1686  19A9  3453               	retlw	83	;'S'
  1687  19AA  3430               	retlw	48	;'0'
  1688  19AB  3435               	retlw	53	;'5'
  1689  19AC  3400               	retlw	0
  1690  19AD                     STR_1:	
  1691  19AD  3454               	retlw	84	;'T'
  1692  19AE  3430               	retlw	48	;'0'
  1693  19AF  3435               	retlw	53	;'5'
  1694  19B0  3400               	retlw	0
  1695  19B1                     STR_5:	
  1696  19B1  344F               	retlw	79	;'O'
  1697  19B2  344B               	retlw	75	;'K'
  1698  19B3  3400               	retlw	0
  1699  19B4                     __end_of__stringdata:	
  1700                           
  1701                           ; #config settings
  1702  0000                     
  1703                           	psect	bssBANK0
  1704  0069                     __pbssBANK0:	
  1705  0069                     _ep0_data_stage_buf_remaining:	
  1706  0069                     	ds	2
  1707  006B                     _ep0_data_stage_callback:	
  1708  006B                     	ds	2
  1709  006D                     _ep0_data_stage_direc:	
  1710  006D                     	ds	1
  1711  006E                     _ep0_data_stage_out_buffer:	
  1712  006E                     	ds	1
  1713  006F                     _g_configuration:	
  1714  006F                     	ds	1
  1715                           
  1716                           	psect	bssBANK5
  1717  02ED                     __pbssBANK5:	
  1718  02ED                     _check_freeze:	
  1719  02ED                     	ds	1
  1720  02EE                     _gdb_buf_idx:	
  1721  02EE                     	ds	1
  1722  02EF                     _qchksum:	
  1723  02EF                     	ds	1
  1724                           
  1725                           	psect	dataBANK5
  1726  02E8                     __pdataBANK5:	
  1727  02E8                     _ep0_buf:	
  1728  02E8                     	ds	5
  1729                           
  1730                           	psect	bssBANK6
  1731  0360                     __pbssBANK6:	
  1732  0360                     _watch_points:	
  1733  0360                     	ds	10
  1734  036A                     _addr:	
  1735  036A                     	ds	1
  1736  036B                     _addr_pending:	
  1737  036B                     	ds	1
  1738  036C                     _control_need_zlp:	
  1739  036C                     	ds	1
  1740  036D                     _returning_short:	
  1741  036D                     	ds	1
  1742                           
  1743                           	psect	dataBANK6
  1744  036E                     __pdataBANK6:	
  1745  036E                     _usb_application_config_descs:	
  1746  036E                     	ds	2
  1747                           
  1748                           	psect	bssBANK7
  1749  03A0                     __pbssBANK7:	
  1750  03A0                     _break_points:	
  1751  03A0                     	ds	16
  1752  03B0                     mpc_bdm@save_regs:	
  1753  03B0                     	ds	8
  1754  03B8                     _ep0_data_stage_in_buffer:	
  1755  03B8                     	ds	2
  1756                           
  1757                           	psect	dataBANK7
  1758  03BA                     __pdataBANK7:	
  1759  03BA                     _ep_buf:	
  1760  03BA                     	ds	21
  1761                           
  1762                           	psect	clrtext
  1763  0815                     clear_ram0:	
  1764                           ;	Called with FSR0 containing the base address, and
  1765                           ;	btemp/btemp+1 has the size to clear
  1766                           
  1767  0815  0064               	clrwdt	;clear the watchdog before getting into this loop
  1768  0816                     clrloop0:	
  1769  0816  3001               	movlw	1
  1770  0817  0180               	clrf	0	;clear RAM location pointed to by FSR
  1771  0818  3101               	addfsr 0,1
  1772  0819  02FE               	subwf	126,f
  1773  081A  3000               	movlw	0
  1774  081B  3BFF               	subwfb	127,f
  1775  081C  087F               	movf	127,w
  1776  081D  047E               	iorwf	126,w
  1777  081E  1903               	btfsc	3,2
  1778  081F  3400               	retlw	0	;all done for this memory range, return
  1779  0820  2816               	goto	clrloop0	;have we reached the end yet?
  1780                           
  1781                           	psect	cstackBANK6
  1782  0320                     __pcstackBANK6:	
  1783  0320                     main@msg:	
  1784                           
  1785                           ; 64 bytes @ 0x0
  1786  0320                     	ds	64
  1787                           
  1788                           	psect	cstackBANK5
  1789  02A0                     __pcstackBANK5:	
  1790  02A0                     gdb_process_command@msg_out:	
  1791                           
  1792                           ; 64 bytes @ 0x0
  1793  02A0                     	ds	64
  1794  02E0                     main@out_buf:	
  1795                           
  1796                           ; 2 bytes @ 0x40
  1797  02E0                     	ds	2
  1798  02E2                     main@e:	
  1799                           
  1800                           ; 1 bytes @ 0x42
  1801  02E2                     	ds	1
  1802  02E3                     main@buf_end_found:	
  1803                           
  1804                           ; 1 bytes @ 0x43
  1805  02E3                     	ds	1
  1806  02E4                     main@k:	
  1807                           
  1808                           ; 1 bytes @ 0x44
  1809  02E4                     	ds	1
  1810  02E5                     main@buf_end:	
  1811                           
  1812                           ; 1 bytes @ 0x45
  1813  02E5                     	ds	1
  1814  02E6                     main@buf_start:	
  1815                           
  1816                           ; 1 bytes @ 0x46
  1817  02E6                     	ds	1
  1818  02E7                     main@i:	
  1819                           
  1820                           ; 1 bytes @ 0x47
  1821  02E7                     	ds	1
  1822                           
  1823                           	psect	cstackBANK4
  1824  0220                     __pcstackBANK4:	
  1825  0220                     ??_gdb_hexstr:	
  1826  0220                     bdm_get_spr@spr:	
  1827                           ; 0 bytes @ 0x0
  1828                           
  1829  0220                     bdm_set_spr@out:	
  1830                           ; 4 bytes @ 0x0
  1831                           
  1832                           
  1833                           ; 5 bytes @ 0x0
  1834  0220                     	ds	4
  1835  0224                     bdm_get_spr@out:	
  1836                           
  1837                           ; 5 bytes @ 0x4
  1838  0224                     	ds	1
  1839  0225                     bdm_set_spr@in:	
  1840                           
  1841                           ; 5 bytes @ 0x5
  1842  0225                     	ds	4
  1843  0229                     bdm_get_spr@in:	
  1844                           
  1845                           ; 5 bytes @ 0x9
  1846  0229                     	ds	3
  1847  022C                     gdb_hexstr@m:	
  1848                           
  1849                           ; 4 bytes @ 0xC
  1850  022C                     	ds	2
  1851  022E                     bdm_update_breakpoints@reg_l1:	
  1852  022E                     bdm_resume@in:	
  1853                           ; 4 bytes @ 0xE
  1854                           
  1855                           
  1856                           ; 5 bytes @ 0xE
  1857  022E                     	ds	2
  1858  0230                     _gdb_hexstr$1711:	
  1859                           
  1860                           ; 2 bytes @ 0x10
  1861  0230                     	ds	2
  1862  0232                     gdb_hexstr@j:	
  1863  0232                     bdm_update_breakpoints@wc:	
  1864                           ; 1 bytes @ 0x12
  1865                           
  1866                           
  1867                           ; 4 bytes @ 0x12
  1868  0232                     	ds	1
  1869  0233                     gdb_hexstr@a:	
  1870  0233                     bdm_resume@out:	
  1871                           ; 1 bytes @ 0x13
  1872                           
  1873                           
  1874                           ; 5 bytes @ 0x13
  1875  0233                     	ds	1
  1876  0234                     gdb_hexstr@i:	
  1877                           
  1878                           ; 1 bytes @ 0x14
  1879  0234                     	ds	1
  1880  0235                     ?_gdb_send:	
  1881  0235                     gdb_send_end@qbuf:	
  1882                           ; 0 bytes @ 0x15
  1883                           
  1884  0235                     gdb_send@reply:	
  1885                           ; 2 bytes @ 0x15
  1886                           
  1887                           
  1888                           ; 2 bytes @ 0x15
  1889  0235                     	ds	1
  1890  0236                     bdm_update_breakpoints@reg:	
  1891                           
  1892                           ; 4 bytes @ 0x16
  1893  0236                     	ds	1
  1894  0237                     ??_gdb_send:	
  1895  0237                     gdb_send_end@chksum:	
  1896                           ; 0 bytes @ 0x17
  1897                           
  1898                           
  1899                           ; 1 bytes @ 0x17
  1900  0237                     	ds	1
  1901  0238                     bdm_continue@der:	
  1902  0238                     bdm_continue_single_step@der:	
  1903                           ; 4 bytes @ 0x18
  1904                           
  1905                           
  1906                           ; 4 bytes @ 0x18
  1907  0238                     	ds	2
  1908  023A                     bdm_update_breakpoints@i:	
  1909                           
  1910                           ; 1 bytes @ 0x1A
  1911  023A                     	ds	2
  1912  023C                     bdm_continue@srr1:	
  1913  023C                     bdm_continue_single_step@srr1:	
  1914                           ; 4 bytes @ 0x1C
  1915                           
  1916                           
  1917                           ; 4 bytes @ 0x1C
  1918  023C                     	ds	1
  1919  023D                     gdb_send@checksum:	
  1920                           
  1921                           ; 1 bytes @ 0x1D
  1922  023D                     	ds	1
  1923  023E                     gdb_send@reply_type:	
  1924                           
  1925                           ; 1 bytes @ 0x1E
  1926  023E                     	ds	1
  1927  023F                     gdb_send@qbuf:	
  1928                           
  1929                           ; 2 bytes @ 0x1F
  1930  023F                     	ds	2
  1931  0241                     gdb_send@k:	
  1932                           
  1933                           ; 1 bytes @ 0x21
  1934  0241                     	ds	1
  1935  0242                     ?_gdb_process_command:	
  1936  0242                     gdb_process_command@msg_len:	
  1937                           ; 0 bytes @ 0x22
  1938                           
  1939                           
  1940                           ; 1 bytes @ 0x22
  1941  0242                     	ds	1
  1942  0243                     ??_gdb_process_command:	
  1943                           
  1944                           ; 0 bytes @ 0x23
  1945  0243                     	ds	4
  1946  0247                     gdb_process_command@u:	
  1947                           
  1948                           ; 1 bytes @ 0x27
  1949  0247                     	ds	1
  1950  0248                     gdb_process_command@y:	
  1951                           
  1952                           ; 4 bytes @ 0x28
  1953  0248                     	ds	4
  1954  024C                     gdb_process_command@s:	
  1955                           
  1956                           ; 1 bytes @ 0x2C
  1957  024C                     	ds	1
  1958  024D                     gdb_process_command@reg_num:	
  1959                           
  1960                           ; 1 bytes @ 0x2D
  1961  024D                     	ds	1
  1962  024E                     gdb_process_command@reg_val:	
  1963                           
  1964                           ; 4 bytes @ 0x2E
  1965  024E                     	ds	4
  1966  0252                     gdb_process_command@k:	
  1967                           
  1968                           ; 1 bytes @ 0x32
  1969  0252                     	ds	1
  1970  0253                     gdb_process_command@j:	
  1971                           
  1972                           ; 1 bytes @ 0x33
  1973  0253                     	ds	1
  1974  0254                     gdb_process_command@x:	
  1975                           
  1976                           ; 4 bytes @ 0x34
  1977  0254                     	ds	4
  1978  0258                     gdb_process_command@msg:	
  1979                           
  1980                           ; 1 bytes @ 0x38
  1981  0258                     	ds	1
  1982  0259                     gdb_process_command@i:	
  1983                           
  1984                           ; 1 bytes @ 0x39
  1985  0259                     	ds	1
  1986  025A                     ??_main:	
  1987                           
  1988                           ; 0 bytes @ 0x3A
  1989  025A                     	ds	8
  1990  0262                     main@c:	
  1991                           
  1992                           ; 4 bytes @ 0x42
  1993  0262                     	ds	4
  1994  0266                     main@checksum:	
  1995                           
  1996                           ; 1 bytes @ 0x46
  1997  0266                     	ds	1
  1998  0267                     main@msg_checksum:	
  1999                           
  2000                           ; 4 bytes @ 0x47
  2001  0267                     	ds	4
  2002  026B                     main@out_buf_len:	
  2003                           
  2004                           ; 2 bytes @ 0x4B
  2005  026B                     	ds	2
  2006  026D                     main@msg_len:	
  2007                           
  2008                           ; 1 bytes @ 0x4D
  2009  026D                     	ds	1
  2010  026E                     main@buf_start_found:	
  2011                           
  2012                           ; 1 bytes @ 0x4E
  2013  026E                     	ds	1
  2014  026F                     main@s:	
  2015                           
  2016                           ; 1 bytes @ 0x4F
  2017  026F                     	ds	1
  2018                           
  2019                           	psect	cstackBANK3
  2020  01CB                     __pcstackBANK3:	
  2021  01CB                     bdm_nop@in:	
  2022  01CB                     bdm_get_gpr@in:	
  2023                           ; 5 bytes @ 0x0
  2024                           
  2025  01CB                     bdm_set_gpr@in:	
  2026                           ; 5 bytes @ 0x0
  2027                           
  2028                           
  2029                           ; 5 bytes @ 0x0
  2030  01CB                     	ds	5
  2031  01D0                     bdm_nop@out:	
  2032  01D0                     bdm_get_gpr@out:	
  2033                           ; 5 bytes @ 0x5
  2034                           
  2035  01D0                     bdm_set_gpr@out:	
  2036                           ; 5 bytes @ 0x5
  2037                           
  2038                           
  2039                           ; 5 bytes @ 0x5
  2040  01D0                     	ds	5
  2041  01D5                     ?_bdm_set_data:	
  2042  01D5                     ?_bdm_set_spr:	
  2043                           ; 0 bytes @ 0xA
  2044                           
  2045  01D5                     ?_bdm_get_spr:	
  2046                           ; 2 bytes @ 0xA
  2047                           
  2048  01D5                     ?_bdm_get_data:	
  2049                           ; 4 bytes @ 0xA
  2050                           
  2051  01D5                     bdm_get_spr@reg:	
  2052                           ; 4 bytes @ 0xA
  2053                           
  2054  01D5                     bdm_set_spr@reg:	
  2055                           ; 4 bytes @ 0xA
  2056                           
  2057  01D5                     bdm_get_data@addr:	
  2058                           ; 4 bytes @ 0xA
  2059                           
  2060  01D5                     bdm_set_data@addr:	
  2061                           ; 4 bytes @ 0xA
  2062                           
  2063  01D5                     bdm_interrupt@x:	
  2064                           ; 4 bytes @ 0xA
  2065                           
  2066                           
  2067                           ; 4 bytes @ 0xA
  2068  01D5                     	ds	4
  2069  01D9                     ??_bdm_get_spr:	
  2070  01D9                     bdm_get_data@size:	
  2071                           ; 0 bytes @ 0xE
  2072                           
  2073  01D9                     bdm_interrupt@c:	
  2074                           ; 1 bytes @ 0xE
  2075                           
  2076  01D9                     bdm_set_spr@value:	
  2077                           ; 2 bytes @ 0xE
  2078                           
  2079  01D9                     bdm_set_data@val:	
  2080                           ; 4 bytes @ 0xE
  2081                           
  2082                           
  2083                           ; 4 bytes @ 0xE
  2084  01D9                     	ds	1
  2085  01DA                     bdm_get_data@val:	
  2086                           
  2087                           ; 4 bytes @ 0xF
  2088  01DA                     	ds	1
  2089  01DB                     bdm_interrupt@in:	
  2090                           
  2091                           ; 5 bytes @ 0x10
  2092  01DB                     	ds	2
  2093  01DD                     ??_bdm_set_spr:	
  2094  01DD                     bdm_set_data@size:	
  2095                           ; 0 bytes @ 0x12
  2096                           
  2097                           
  2098                           ; 1 bytes @ 0x12
  2099  01DD                     	ds	1
  2100  01DE                     bdm_get_data@out:	
  2101  01DE                     bdm_set_data@out:	
  2102                           ; 5 bytes @ 0x13
  2103                           
  2104                           
  2105                           ; 5 bytes @ 0x13
  2106  01DE                     	ds	2
  2107  01E0                     bdm_interrupt@out:	
  2108                           
  2109                           ; 5 bytes @ 0x15
  2110  01E0                     	ds	3
  2111  01E3                     bdm_get_data@in:	
  2112  01E3                     bdm_set_data@in:	
  2113                           ; 5 bytes @ 0x18
  2114                           
  2115                           
  2116                           ; 5 bytes @ 0x18
  2117  01E3                     	ds	2
  2118  01E5                     ?_bdm_resume:	
  2119                           
  2120                           ; 2 bytes @ 0x1A
  2121  01E5                     	ds	3
  2122  01E8                     ?_gdb_hexstr:	
  2123  01E8                     gdb_hexstr@buf:	
  2124                           ; 0 bytes @ 0x1D
  2125                           
  2126                           
  2127                           ; 2 bytes @ 0x1D
  2128  01E8                     	ds	1
  2129  01E9                     ??_bdm_update_breakpoints:	
  2130                           
  2131                           ; 0 bytes @ 0x1E
  2132  01E9                     	ds	1
  2133  01EA                     gdb_hexstr@val:	
  2134                           
  2135                           ; 4 bytes @ 0x1F
  2136  01EA                     	ds	4
  2137  01EE                     gdb_hexstr@len:	
  2138                           
  2139                           ; 1 bytes @ 0x23
  2140  01EE                     	ds	1
  2141  01EF                     gdb_hexstr@offset:	
  2142                           
  2143                           ; 1 bytes @ 0x24
  2144  01EF                     	ds	1
  2145                           
  2146                           	psect	cstackBANK1
  2147  00A0                     __pcstackBANK1:	
  2148  00A0                     ??_bdm_init:	
  2149  00A0                     ??_reset_ep0_data_stage:	
  2150                           ; 0 bytes @ 0x0
  2151                           
  2152  00A0                     ??_usb_get_configuration:	
  2153                           ; 0 bytes @ 0x0
  2154                           
  2155  00A0                     ??_usb_in_endpoint_busy:	
  2156                           ; 0 bytes @ 0x0
  2157                           
  2158  00A0                     ??_usb_out_endpoint_has_data:	
  2159                           ; 0 bytes @ 0x0
  2160                           
  2161  00A0                     ??_ConfigureOscillator:	
  2162                           ; 0 bytes @ 0x0
  2163                           
  2164  00A0                     ??_InitApp:	
  2165                           ; 0 bytes @ 0x0
  2166                           
  2167  00A0                     ?_led_flash:	
  2168                           ; 0 bytes @ 0x0
  2169                           
  2170  00A0                     ?_gdb_ahex2bin:	
  2171                           ; 0 bytes @ 0x0
  2172                           
  2173  00A0                     ?___bmul:	
  2174                           ; 1 bytes @ 0x0
  2175                           
  2176  00A0                     ?_memset:	
  2177                           ; 1 bytes @ 0x0
  2178                           
  2179  00A0                     ?_memcpy:	
  2180                           ; 2 bytes @ 0x0
  2181                           
  2182  00A0                     ?_bdm_wait_ready:	
  2183                           ; 2 bytes @ 0x0
  2184                           
  2185  00A0                     ?_bdm_clk_bit:	
  2186                           ; 2 bytes @ 0x0
  2187                           
  2188  00A0                     ?___wmul:	
  2189                           ; 2 bytes @ 0x0
  2190                           
  2191  00A0                     ?_gdb_extract_bytes:	
  2192                           ; 2 bytes @ 0x0
  2193                           
  2194  00A0                     usb_in_endpoint_busy@endpoint:	
  2195                           ; 4 bytes @ 0x0
  2196                           
  2197  00A0                     usb_out_endpoint_has_data@endpoint:	
  2198                           ; 1 bytes @ 0x0
  2199                           
  2200  00A0                     gdb_extract_bytes@e:	
  2201                           ; 1 bytes @ 0x0
  2202                           
  2203  00A0                     gdb_ahex2bin@LSB:	
  2204                           ; 1 bytes @ 0x0
  2205                           
  2206  00A0                     ___bmul@multiplicand:	
  2207                           ; 1 bytes @ 0x0
  2208                           
  2209  00A0                     led_flash@c:	
  2210                           ; 1 bytes @ 0x0
  2211                           
  2212  00A0                     bdm_wait_ready@timeout:	
  2213                           ; 2 bytes @ 0x0
  2214                           
  2215  00A0                     ___wmul@multiplier:	
  2216                           ; 2 bytes @ 0x0
  2217                           
  2218  00A0                     memcpy@d1:	
  2219                           ; 2 bytes @ 0x0
  2220                           
  2221  00A0                     memset@p1:	
  2222                           ; 2 bytes @ 0x0
  2223                           
  2224  00A0                     bdm_clk_bit@b:	
  2225                           ; 2 bytes @ 0x0
  2226                           
  2227                           
  2228                           ; 4 bytes @ 0x0
  2229  00A0                     	ds	1
  2230  00A1                     ??_gdb_ahex2bin:	
  2231  00A1                     ??___bmul:	
  2232                           ; 0 bytes @ 0x1
  2233                           
  2234  00A1                     gdb_extract_bytes@msg:	
  2235                           ; 0 bytes @ 0x1
  2236                           
  2237  00A1                     ___bmul@product:	
  2238                           ; 1 bytes @ 0x1
  2239                           
  2240                           
  2241                           ; 1 bytes @ 0x1
  2242  00A1                     	ds	1
  2243  00A2                     ??_bdm_wait_ready:	
  2244  00A2                     ??_led_flash:	
  2245                           ; 0 bytes @ 0x2
  2246                           
  2247  00A2                     ??_bdm_reset:	
  2248                           ; 0 bytes @ 0x2
  2249                           
  2250  00A2                     gdb_ahex2bin@MSB:	
  2251                           ; 0 bytes @ 0x2
  2252                           
  2253  00A2                     ___bmul@multiplier:	
  2254                           ; 1 bytes @ 0x2
  2255                           
  2256  00A2                     ___wmul@multiplicand:	
  2257                           ; 1 bytes @ 0x2
  2258                           
  2259  00A2                     memcpy@s1:	
  2260                           ; 2 bytes @ 0x2
  2261                           
  2262  00A2                     memset@c:	
  2263                           ; 2 bytes @ 0x2
  2264                           
  2265                           
  2266                           ; 2 bytes @ 0x2
  2267  00A2                     	ds	1
  2268  00A3                     ??_usb_in_endpoint_halted:	
  2269  00A3                     ??_usb_arm_out_endpoint:	
  2270                           ; 0 bytes @ 0x3
  2271                           
  2272  00A3                     ??_usb_out_endpoint_halted:	
  2273                           ; 0 bytes @ 0x3
  2274                           
  2275  00A3                     ?_usb_get_out_buffer:	
  2276                           ; 0 bytes @ 0x3
  2277                           
  2278  00A3                     ?_usb_get_in_buffer:	
  2279                           ; 1 bytes @ 0x3
  2280                           
  2281  00A3                     usb_in_endpoint_halted@endpoint:	
  2282                           ; 2 bytes @ 0x3
  2283                           
  2284  00A3                     usb_get_out_buffer@buf:	
  2285                           ; 1 bytes @ 0x3
  2286                           
  2287  00A3                     usb_arm_out_endpoint@pid:	
  2288                           ; 1 bytes @ 0x3
  2289                           
  2290  00A3                     usb_out_endpoint_halted@endpoint:	
  2291                           ; 1 bytes @ 0x3
  2292                           
  2293                           
  2294                           ; 1 bytes @ 0x3
  2295  00A3                     	ds	1
  2296  00A4                     ??_gdb_extract_bytes:	
  2297  00A4                     ?_usb_send_in_buffer:	
  2298                           ; 0 bytes @ 0x4
  2299                           
  2300  00A4                     ??_usb_get_out_buffer:	
  2301                           ; 0 bytes @ 0x4
  2302                           
  2303  00A4                     ??_bdm_clk_bit:	
  2304                           ; 0 bytes @ 0x4
  2305                           
  2306  00A4                     ??___wmul:	
  2307                           ; 0 bytes @ 0x4
  2308                           
  2309  00A4                     usb_get_out_buffer@endpoint:	
  2310                           ; 0 bytes @ 0x4
  2311                           
  2312  00A4                     usb_arm_out_endpoint@endpoint:	
  2313                           ; 1 bytes @ 0x4
  2314                           
  2315  00A4                     usb_send_in_buffer@len:	
  2316                           ; 1 bytes @ 0x4
  2317                           
  2318  00A4                     led_flash@j:	
  2319                           ; 2 bytes @ 0x4
  2320                           
  2321  00A4                     bdm_clk_bit@res:	
  2322                           ; 2 bytes @ 0x4
  2323                           
  2324  00A4                     ___wmul@product:	
  2325                           ; 2 bytes @ 0x4
  2326                           
  2327  00A4                     memcpy@n:	
  2328                           ; 2 bytes @ 0x4
  2329                           
  2330  00A4                     memset@n:	
  2331                           ; 2 bytes @ 0x4
  2332                           
  2333                           
  2334                           ; 2 bytes @ 0x4
  2335  00A4                     	ds	2
  2336  00A6                     ??_memset:	
  2337  00A6                     ??_memcpy:	
  2338                           ; 0 bytes @ 0x6
  2339                           
  2340  00A6                     ??_usb_get_in_buffer:	
  2341                           ; 0 bytes @ 0x6
  2342                           
  2343  00A6                     ??_usb_send_in_buffer:	
  2344                           ; 0 bytes @ 0x6
  2345                           
  2346  00A6                     ?_pic16_linear_addr:	
  2347                           ; 0 bytes @ 0x6
  2348                           
  2349  00A6                     usb_get_in_buffer@endpoint:	
  2350                           ; 2 bytes @ 0x6
  2351                           
  2352  00A6                     usb_send_in_buffer@pid:	
  2353                           ; 1 bytes @ 0x6
  2354                           
  2355  00A6                     pic16_linear_addr@ptr:	
  2356                           ; 1 bytes @ 0x6
  2357                           
  2358  00A6                     led_flash@i:	
  2359                           ; 2 bytes @ 0x6
  2360                           
  2361  00A6                     memset@p:	
  2362                           ; 2 bytes @ 0x6
  2363                           
  2364                           
  2365                           ; 2 bytes @ 0x6
  2366  00A6                     	ds	1
  2367  00A7                     usb_send_in_buffer@endpoint:	
  2368  00A7                     memcpy@d:	
  2369                           ; 1 bytes @ 0x7
  2370                           
  2371                           
  2372                           ; 2 bytes @ 0x7
  2373  00A7                     	ds	1
  2374  00A8                     ??_pic16_linear_addr:	
  2375  00A8                     ?_bdm_clk_serial:	
  2376                           ; 0 bytes @ 0x8
  2377                           
  2378  00A8                     usb_send_in_buffer@bd:	
  2379                           ; 4 bytes @ 0x8
  2380                           
  2381  00A8                     gdb_extract_bytes@s:	
  2382                           ; 1 bytes @ 0x8
  2383                           
  2384  00A8                     bdm_clk_serial@in:	
  2385                           ; 1 bytes @ 0x8
  2386                           
  2387                           
  2388                           ; 2 bytes @ 0x8
  2389  00A8                     	ds	1
  2390  00A9                     ?_gdb_send_start:	
  2391  00A9                     gdb_send_start@chksum:	
  2392                           ; 0 bytes @ 0x9
  2393                           
  2394  00A9                     memcpy@s:	
  2395                           ; 1 bytes @ 0x9
  2396                           
  2397  00A9                     gdb_extract_bytes@x:	
  2398                           ; 2 bytes @ 0x9
  2399                           
  2400                           
  2401                           ; 4 bytes @ 0x9
  2402  00A9                     	ds	1
  2403  00AA                     ??_gdb_send_start:	
  2404  00AA                     bdm_clk_serial@out:	
  2405                           ; 0 bytes @ 0xA
  2406                           
  2407                           
  2408                           ; 2 bytes @ 0xA
  2409  00AA                     	ds	1
  2410  00AB                     ?_gdb_send_data:	
  2411  00AB                     gdb_send_data@chksum:	
  2412                           ; 0 bytes @ 0xB
  2413                           
  2414                           
  2415                           ; 1 bytes @ 0xB
  2416  00AB                     	ds	1
  2417  00AC                     ??_gdb_send_data:	
  2418  00AC                     ??_bdm_clk_serial:	
  2419                           ; 0 bytes @ 0xC
  2420                           
  2421  00AC                     gdb_send_start@reply_type:	
  2422                           ; 0 bytes @ 0xC
  2423                           
  2424                           
  2425                           ; 1 bytes @ 0xC
  2426  00AC                     	ds	1
  2427  00AD                     gdb_extract_bytes@j:	
  2428  00AD                     gdb_send_start@qbuf:	
  2429                           ; 1 bytes @ 0xD
  2430                           
  2431  00AD                     gdb_send_data@qbuf:	
  2432                           ; 2 bytes @ 0xD
  2433                           
  2434                           
  2435                           ; 2 bytes @ 0xD
  2436  00AD                     	ds	1
  2437  00AE                     pic16_linear_addr@high:	
  2438  00AE                     gdb_extract_bytes@i:	
  2439                           ; 1 bytes @ 0xE
  2440                           
  2441                           
  2442                           ; 1 bytes @ 0xE
  2443  00AE                     	ds	1
  2444  00AF                     pic16_linear_addr@low:	
  2445  00AF                     gdb_send_data@reply:	
  2446                           ; 1 bytes @ 0xF
  2447                           
  2448  00AF                     gdb_extract_bytes@k:	
  2449                           ; 1 bytes @ 0xF
  2450                           
  2451                           
  2452                           ; 1 bytes @ 0xF
  2453  00AF                     	ds	1
  2454  00B0                     gdb_send_data@k:	
  2455  00B0                     pic16_linear_addr@addr:	
  2456                           ; 1 bytes @ 0x10
  2457                           
  2458  00B0                     bdm_clk_serial@word:	
  2459                           ; 2 bytes @ 0x10
  2460                           
  2461                           
  2462                           ; 4 bytes @ 0x10
  2463  00B0                     	ds	2
  2464  00B2                     ??_init_endpoints:	
  2465  00B2                     init_endpoints@i:	
  2466                           ; 0 bytes @ 0x12
  2467                           
  2468                           
  2469                           ; 1 bytes @ 0x12
  2470  00B2                     	ds	1
  2471  00B3                     ??_usb_init:	
  2472                           
  2473                           ; 0 bytes @ 0x13
  2474  00B3                     	ds	1
  2475  00B4                     bdm_clk_serial@x:	
  2476                           
  2477                           ; 4 bytes @ 0x14
  2478  00B4                     	ds	1
  2479  00B5                     usb_init@i:	
  2480                           
  2481                           ; 1 bytes @ 0x15
  2482  00B5                     	ds	1
  2483  00B6                     usb_init@ep:	
  2484                           
  2485                           ; 2 bytes @ 0x16
  2486  00B6                     	ds	2
  2487  00B8                     bdm_clk_serial@len:	
  2488                           
  2489                           ; 2 bytes @ 0x18
  2490  00B8                     	ds	2
  2491  00BA                     bdm_clk_serial@mask:	
  2492                           
  2493                           ; 4 bytes @ 0x1A
  2494  00BA                     	ds	4
  2495  00BE                     bdm_clk_serial@res:	
  2496                           
  2497                           ; 2 bytes @ 0x1E
  2498  00BE                     	ds	2
  2499  00C0                     bdm_clk_serial@reslen:	
  2500                           
  2501                           ; 2 bytes @ 0x20
  2502  00C0                     	ds	2
  2503  00C2                     bdm_clk_serial@n:	
  2504                           
  2505                           ; 2 bytes @ 0x22
  2506  00C2                     	ds	2
  2507  00C4                     ?_bdm_set_gpr:	
  2508  00C4                     ?_bdm_nop:	
  2509                           ; 2 bytes @ 0x24
  2510                           
  2511  00C4                     ?_bdm_get_gpr:	
  2512                           ; 4 bytes @ 0x24
  2513                           
  2514  00C4                     bdm_get_gpr@reg_nr:	
  2515                           ; 4 bytes @ 0x24
  2516                           
  2517  00C4                     bdm_set_gpr@reg_nr:	
  2518                           ; 4 bytes @ 0x24
  2519                           
  2520                           
  2521                           ; 4 bytes @ 0x24
  2522  00C4                     	ds	4
  2523  00C8                     ??_bdm_nop:	
  2524  00C8                     ??_bdm_interrupt:	
  2525                           ; 0 bytes @ 0x28
  2526                           
  2527  00C8                     ??_bdm_get_gpr:	
  2528                           ; 0 bytes @ 0x28
  2529                           
  2530  00C8                     bdm_set_gpr@value:	
  2531                           ; 0 bytes @ 0x28
  2532                           
  2533                           
  2534                           ; 4 bytes @ 0x28
  2535  00C8                     	ds	4
  2536  00CC                     ??_bdm_set_gpr:	
  2537  00CC                     ??_bdm_save_regs:	
  2538                           ; 0 bytes @ 0x2C
  2539                           
  2540                           
  2541                           ; 0 bytes @ 0x2C
  2542  00CC                     	ds	4
  2543  00D0                     ??_bdm_resume:	
  2544  00D0                     ??_gdb_send_end:	
  2545                           ; 0 bytes @ 0x30
  2546                           
  2547  00D0                     ??_bdm_restore_regs:	
  2548                           ; 0 bytes @ 0x30
  2549                           
  2550  00D0                     ??_bdm_get_data:	
  2551                           ; 0 bytes @ 0x30
  2552                           
  2553  00D0                     ??_bdm_set_data:	
  2554                           ; 0 bytes @ 0x30
  2555                           
  2556  00D0                     ??_bdm_continue:	
  2557                           ; 0 bytes @ 0x30
  2558                           
  2559  00D0                     ??_bdm_continue_single_step:	
  2560                           ; 0 bytes @ 0x30
  2561                           
  2562                           
  2563                           	psect	cstackCOMMON
  2564  0070                     __pcstackCOMMON:	
  2565                           ; 0 bytes @ 0x30
  2566                           
  2567  0070                     ?_bdm_init:	
  2568  0070                     ?_gdb_send_end:	
  2569                           ; 0 bytes @ 0x0
  2570                           
  2571  0070                     ?_reset_ep0_data_stage:	
  2572                           ; 0 bytes @ 0x0
  2573                           
  2574  0070                     ?_init_endpoints:	
  2575                           ; 0 bytes @ 0x0
  2576                           
  2577  0070                     ?_usb_init:	
  2578                           ; 0 bytes @ 0x0
  2579                           
  2580  0070                     ?_reset_bd0_out:	
  2581                           ; 0 bytes @ 0x0
  2582                           
  2583  0070                     ??_reset_bd0_out:	
  2584                           ; 0 bytes @ 0x0
  2585                           
  2586  0070                     ?_stall_ep0:	
  2587                           ; 0 bytes @ 0x0
  2588                           
  2589  0070                     ??_stall_ep0:	
  2590                           ; 0 bytes @ 0x0
  2591                           
  2592  0070                     ?_clear_ep0_stall:	
  2593                           ; 0 bytes @ 0x0
  2594                           
  2595  0070                     ??_clear_ep0_stall:	
  2596                           ; 0 bytes @ 0x0
  2597                           
  2598  0070                     ?_stall_ep_in:	
  2599                           ; 0 bytes @ 0x0
  2600                           
  2601  0070                     ?_stall_ep_out:	
  2602                           ; 0 bytes @ 0x0
  2603                           
  2604  0070                     ??_stall_ep_out:	
  2605                           ; 0 bytes @ 0x0
  2606                           
  2607  0070                     ?_send_zero_length_packet_ep0:	
  2608                           ; 0 bytes @ 0x0
  2609                           
  2610  0070                     ??_send_zero_length_packet_ep0:	
  2611                           ; 0 bytes @ 0x0
  2612                           
  2613  0070                     ?_handle_ep0_setup:	
  2614                           ; 0 bytes @ 0x0
  2615                           
  2616  0070                     ?_handle_ep0_out:	
  2617                           ; 0 bytes @ 0x0
  2618                           
  2619  0070                     ?_handle_ep0_in:	
  2620                           ; 0 bytes @ 0x0
  2621                           
  2622  0070                     ?_usb_service:	
  2623                           ; 0 bytes @ 0x0
  2624                           
  2625  0070                     ?_usb_arm_out_endpoint:	
  2626                           ; 0 bytes @ 0x0
  2627                           
  2628  0070                     ?_ConfigureOscillator:	
  2629                           ; 0 bytes @ 0x0
  2630                           
  2631  0070                     ?_InitApp:	
  2632                           ; 0 bytes @ 0x0
  2633                           
  2634  0070                     ?_isr:	
  2635                           ; 0 bytes @ 0x0
  2636                           
  2637  0070                     ?_main:	
  2638                           ; 0 bytes @ 0x0
  2639                           
  2640  0070                     ?_bdm_save_regs:	
  2641                           ; 0 bytes @ 0x0
  2642                           
  2643  0070                     ?_bdm_restore_regs:	
  2644                           ; 0 bytes @ 0x0
  2645                           
  2646  0070                     ?_bdm_reset:	
  2647                           ; 0 bytes @ 0x0
  2648                           
  2649  0070                     ?_bdm_update_breakpoints:	
  2650                           ; 0 bytes @ 0x0
  2651                           
  2652  0070                     ?i1_reset_ep0_data_stage:	
  2653                           ; 0 bytes @ 0x0
  2654                           
  2655  0070                     ??i1_reset_ep0_data_stage:	
  2656                           ; 0 bytes @ 0x0
  2657                           
  2658  0070                     ?i1_init_endpoints:	
  2659                           ; 0 bytes @ 0x0
  2660                           
  2661  0070                     ?i1_usb_init:	
  2662                           ; 0 bytes @ 0x0
  2663                           
  2664  0070                     ?_usb_in_endpoint_halted:	
  2665                           ; 0 bytes @ 0x0
  2666                           
  2667  0070                     ?_usb_halt_ep_in:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670  0070                     ?_usb_halt_ep_out:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673  0070                     ?_handle_standard_control_request:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676  0070                     ?_usb_get_configuration:	
  2677                           ; 1 bytes @ 0x0
  2678                           
  2679  0070                     ?_usb_in_endpoint_busy:	
  2680                           ; 1 bytes @ 0x0
  2681                           
  2682  0070                     ?_usb_out_endpoint_has_data:	
  2683                           ; 1 bytes @ 0x0
  2684                           
  2685  0070                     ?_usb_out_endpoint_halted:	
  2686                           ; 1 bytes @ 0x0
  2687                           
  2688  0070                     ?i1_usb_in_endpoint_halted:	
  2689                           ; 1 bytes @ 0x0
  2690                           
  2691  0070                     ?i1___bmul:	
  2692                           ; 1 bytes @ 0x0
  2693                           
  2694  0070                     ?_usb_application_get_string:	
  2695                           ; 1 bytes @ 0x0
  2696                           
  2697  0070                     ?_bdm_interrupt:	
  2698                           ; 2 bytes @ 0x0
  2699                           
  2700  0070                     ?_bdm_continue:	
  2701                           ; 2 bytes @ 0x0
  2702                           
  2703  0070                     ?_bdm_continue_single_step:	
  2704                           ; 2 bytes @ 0x0
  2705                           
  2706  0070                     ?i1___wmul:	
  2707                           ; 2 bytes @ 0x0
  2708                           
  2709  0070                     ?i1_memcpy:	
  2710                           ; 2 bytes @ 0x0
  2711                           
  2712  0070                     ?i1_memset:	
  2713                           ; 2 bytes @ 0x0
  2714                           
  2715  0070                     stall_ep_out@ep:	
  2716                           ; 2 bytes @ 0x0
  2717                           
  2718  0070                     usb_application_get_string@ptr:	
  2719                           ; 1 bytes @ 0x0
  2720                           
  2721  0070                     i1___bmul@multiplicand:	
  2722                           ; 1 bytes @ 0x0
  2723                           
  2724  0070                     i1___wmul@multiplier:	
  2725                           ; 1 bytes @ 0x0
  2726                           
  2727  0070                     i1memcpy@d1:	
  2728                           ; 2 bytes @ 0x0
  2729                           
  2730  0070                     i1memset@p1:	
  2731                           ; 2 bytes @ 0x0
  2732                           
  2733                           
  2734                           ; 2 bytes @ 0x0
  2735  0070                     	ds	1
  2736  0071                     ??i1___bmul:	
  2737  0071                     i1___bmul@multiplier:	
  2738                           ; 0 bytes @ 0x1
  2739                           
  2740                           
  2741                           ; 1 bytes @ 0x1
  2742  0071                     	ds	1
  2743  0072                     i1___bmul@product:	
  2744  0072                     i1___wmul@multiplicand:	
  2745                           ; 1 bytes @ 0x2
  2746                           
  2747  0072                     i1memcpy@s1:	
  2748                           ; 2 bytes @ 0x2
  2749                           
  2750  0072                     i1memset@c:	
  2751                           ; 2 bytes @ 0x2
  2752                           
  2753                           
  2754                           ; 2 bytes @ 0x2
  2755  0072                     	ds	1
  2756  0073                     ??_usb_application_get_string:	
  2757  0073                     ??_usb_halt_ep_out:	
  2758                           ; 0 bytes @ 0x3
  2759                           
  2760  0073                     ??_stall_ep_in:	
  2761                           ; 0 bytes @ 0x3
  2762                           
  2763  0073                     ??i1_usb_in_endpoint_halted:	
  2764                           ; 0 bytes @ 0x3
  2765                           
  2766  0073                     stall_ep_in@ep:	
  2767                           ; 0 bytes @ 0x3
  2768                           
  2769  0073                     usb_halt_ep_out@ep:	
  2770                           ; 1 bytes @ 0x3
  2771                           
  2772  0073                     usb_application_get_string@string_number:	
  2773                           ; 1 bytes @ 0x3
  2774                           
  2775  0073                     i1usb_in_endpoint_halted@endpoint:	
  2776                           ; 1 bytes @ 0x3
  2777                           
  2778                           
  2779                           ; 1 bytes @ 0x3
  2780  0073                     	ds	1
  2781  0074                     ??_usb_halt_ep_in:	
  2782  0074                     ?_usb_send_in_buffer_0:	
  2783                           ; 0 bytes @ 0x4
  2784                           
  2785  0074                     ??i1___wmul:	
  2786                           ; 0 bytes @ 0x4
  2787                           
  2788  0074                     usb_halt_ep_in@ep:	
  2789                           ; 0 bytes @ 0x4
  2790                           
  2791  0074                     usb_send_in_buffer_0@len:	
  2792                           ; 1 bytes @ 0x4
  2793                           
  2794  0074                     i1___wmul@product:	
  2795                           ; 2 bytes @ 0x4
  2796                           
  2797  0074                     i1memcpy@n:	
  2798                           ; 2 bytes @ 0x4
  2799                           
  2800  0074                     i1memset@n:	
  2801                           ; 2 bytes @ 0x4
  2802                           
  2803                           
  2804                           ; 2 bytes @ 0x4
  2805  0074                     	ds	2
  2806  0076                     ??_usb_send_in_buffer_0:	
  2807  0076                     ??i1_memcpy:	
  2808                           ; 0 bytes @ 0x6
  2809                           
  2810  0076                     ??i1_memset:	
  2811                           ; 0 bytes @ 0x6
  2812                           
  2813  0076                     ?i1_pic16_linear_addr:	
  2814                           ; 0 bytes @ 0x6
  2815                           
  2816  0076                     usb_send_in_buffer_0@pid:	
  2817                           ; 2 bytes @ 0x6
  2818                           
  2819  0076                     i1pic16_linear_addr@ptr:	
  2820                           ; 1 bytes @ 0x6
  2821                           
  2822  0076                     i1memset@p:	
  2823                           ; 2 bytes @ 0x6
  2824                           
  2825                           
  2826                           ; 2 bytes @ 0x6
  2827  0076                     	ds	1
  2828  0077                     i1memcpy@d:	
  2829                           
  2830                           ; 2 bytes @ 0x7
  2831  0077                     	ds	1
  2832  0078                     ??i1_pic16_linear_addr:	
  2833                           
  2834                           ; 0 bytes @ 0x8
  2835  0078                     	ds	1
  2836  0079                     i1memcpy@s:	
  2837                           
  2838                           ; 2 bytes @ 0x9
  2839  0079                     	ds	2
  2840  007B                     ??_start_control_return:	
  2841  007B                     ??_handle_ep0_out:	
  2842                           ; 0 bytes @ 0xB
  2843                           
  2844  007B                     ??_handle_ep0_in:	
  2845                           ; 0 bytes @ 0xB
  2846                           
  2847  007B                     _handle_ep0_in$680:	
  2848                           ; 0 bytes @ 0xB
  2849                           
  2850                           
  2851                           ; 2 bytes @ 0xB
  2852  007B                     	ds	2
  2853  007D                     handle_ep0_in@bytes_to_send:	
  2854                           
  2855                           ; 1 bytes @ 0xD
  2856  007D                     	ds	1
  2857  007E                     ??_handle_ep0_setup:	
  2858  007E                     ??_isr:	
  2859                           ; 0 bytes @ 0xE
  2860                           
  2861  007E                     ??i1_init_endpoints:	
  2862                           ; 0 bytes @ 0xE
  2863                           
  2864                           
  2865                           	psect	cstackBANK0
  2866  0038                     __pcstackBANK0:	
  2867                           ; 0 bytes @ 0xE
  2868                           
  2869  0038                     ?_start_control_return:	
  2870  0038                     i1pic16_linear_addr@high:	
  2871                           ; 0 bytes @ 0x0
  2872                           
  2873  0038                     start_control_return@ptr:	
  2874                           ; 1 bytes @ 0x0
  2875                           
  2876  0038                     _handle_ep0_out$676:	
  2877                           ; 2 bytes @ 0x0
  2878                           
  2879                           
  2880                           ; 2 bytes @ 0x0
  2881  0038                     	ds	1
  2882  0039                     i1pic16_linear_addr@low:	
  2883                           
  2884                           ; 1 bytes @ 0x1
  2885  0039                     	ds	1
  2886  003A                     handle_ep0_out@pkt_len:	
  2887  003A                     start_control_return@len:	
  2888                           ; 1 bytes @ 0x2
  2889                           
  2890  003A                     i1pic16_linear_addr@addr:	
  2891                           ; 2 bytes @ 0x2
  2892                           
  2893                           
  2894                           ; 2 bytes @ 0x2
  2895  003A                     	ds	1
  2896  003B                     handle_ep0_out@bytes_to_copy:	
  2897                           
  2898                           ; 1 bytes @ 0x3
  2899  003B                     	ds	1
  2900  003C                     i1init_endpoints@i:	
  2901  003C                     start_control_return@bytes_asked_for:	
  2902                           ; 1 bytes @ 0x4
  2903                           
  2904                           
  2905                           ; 2 bytes @ 0x4
  2906  003C                     	ds	1
  2907  003D                     ??i1_usb_init:	
  2908                           
  2909                           ; 0 bytes @ 0x5
  2910  003D                     	ds	1
  2911  003E                     _start_control_return$602:	
  2912                           
  2913                           ; 2 bytes @ 0x6
  2914  003E                     	ds	1
  2915  003F                     i1usb_init@i:	
  2916                           
  2917                           ; 1 bytes @ 0x7
  2918  003F                     	ds	1
  2919  0040                     _start_control_return$603:	
  2920  0040                     i1usb_init@ep:	
  2921                           ; 2 bytes @ 0x8
  2922                           
  2923                           
  2924                           ; 2 bytes @ 0x8
  2925  0040                     	ds	2
  2926  0042                     start_control_return@bytes_to_send:	
  2927                           
  2928                           ; 1 bytes @ 0xA
  2929  0042                     	ds	1
  2930  0043                     ??_handle_standard_control_request:	
  2931                           
  2932                           ; 0 bytes @ 0xB
  2933  0043                     	ds	2
  2934  0045                     _handle_standard_control_request$643:	
  2935                           
  2936                           ; 2 bytes @ 0xD
  2937  0045                     	ds	2
  2938  0047                     handle_standard_control_request@req:	
  2939                           
  2940                           ; 1 bytes @ 0xF
  2941  0047                     	ds	1
  2942  0048                     handle_standard_control_request@ret_642:	
  2943                           
  2944                           ; 2 bytes @ 0x10
  2945  0048                     	ds	2
  2946  004A                     handle_standard_control_request@ret:	
  2947                           
  2948                           ; 2 bytes @ 0x12
  2949  004A                     	ds	2
  2950  004C                     handle_standard_control_request@res:	
  2951                           
  2952                           ; 1 bytes @ 0x14
  2953  004C                     	ds	1
  2954  004D                     handle_standard_control_request@stall:	
  2955                           
  2956                           ; 1 bytes @ 0x15
  2957  004D                     	ds	1
  2958  004E                     handle_standard_control_request@ret_644:	
  2959                           
  2960                           ; 1 bytes @ 0x16
  2961  004E                     	ds	1
  2962  004F                     handle_standard_control_request@desc:	
  2963                           
  2964                           ; 2 bytes @ 0x17
  2965  004F                     	ds	2
  2966  0051                     handle_standard_control_request@len:	
  2967                           
  2968                           ; 2 bytes @ 0x19
  2969  0051                     	ds	2
  2970  0053                     handle_standard_control_request@flags:	
  2971                           
  2972                           ; 1 bytes @ 0x1B
  2973  0053                     	ds	1
  2974  0054                     handle_standard_control_request@ep_num:	
  2975                           
  2976                           ; 1 bytes @ 0x1C
  2977  0054                     	ds	1
  2978  0055                     handle_standard_control_request@ep_dir:	
  2979                           
  2980                           ; 1 bytes @ 0x1D
  2981  0055                     	ds	1
  2982  0056                     handle_standard_control_request@descriptor:	
  2983                           
  2984                           ; 1 bytes @ 0x1E
  2985  0056                     	ds	1
  2986  0057                     handle_standard_control_request@descriptor_index:	
  2987                           
  2988                           ; 1 bytes @ 0x1F
  2989  0057                     	ds	1
  2990  0058                     handle_standard_control_request@desc_632:	
  2991                           
  2992                           ; 2 bytes @ 0x20
  2993  0058                     	ds	2
  2994  005A                     handle_standard_control_request@ep_num_646:	
  2995                           
  2996                           ; 1 bytes @ 0x22
  2997  005A                     	ds	1
  2998  005B                     handle_standard_control_request@setup:	
  2999                           
  3000                           ; 2 bytes @ 0x23
  3001  005B                     	ds	2
  3002  005D                     handle_ep0_setup@res:	
  3003                           
  3004                           ; 1 bytes @ 0x25
  3005  005D                     	ds	1
  3006  005E                     handle_ep0_setup@setup:	
  3007                           
  3008                           ; 2 bytes @ 0x26
  3009  005E                     	ds	2
  3010  0060                     ??_usb_service:	
  3011                           
  3012                           ; 0 bytes @ 0x28
  3013  0060                     	ds	4
  3014  0064                     usb_service@ep:	
  3015                           
  3016                           ; 2 bytes @ 0x2C
  3017  0064                     	ds	2
  3018  0066                     usb_service@i:	
  3019                           
  3020                           ; 2 bytes @ 0x2E
  3021  0066                     	ds	2
  3022  0068                     usb_service@pid:	
  3023                           
  3024                           ; 1 bytes @ 0x30
  3025  0068                     	ds	1
  3026                           
  3027                           	psect	text1
  3028  08A6                     __ptext1:	
  3029 ;; *************** function _usb_out_endpoint_has_data *****************
  3030 ;; Defined at:
  3031 ;;		line 1588 in file "usb/src/usb.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  endpoint        1    wreg     unsigned char 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  endpoint        1    0[BANK1 ] unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      unsigned char 
  3038 ;; Registers used:
  3039 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3040 ;; Tracked objects:
  3041 ;;		On entry : 1F/1
  3042 ;;		On exit  : 1F/1
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3046 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3048 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3049 ;;Total ram usage:        1 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    8
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_main
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           
  3060                           ;psect for function _usb_out_endpoint_has_data
  3061  08A6                     _usb_out_endpoint_has_data:	
  3062                           
  3063                           ;incstack = 0
  3064                           ; Regs used in _usb_out_endpoint_has_data: [wreg+fsr1l+fsr1h+status,2+status,0]
  3065                           ;usb_out_endpoint_has_data@endpoint stored from wreg
  3066  08A6  00A0               	movwf	usb_out_endpoint_has_data@endpoint^(0+128)
  3067                           
  3068                           ;usb.c: 1594: return !bds[(endpoint) * 2].STAT.UOWN;
  3069  08A7  279B               	fcall	PL377	;call to abstracted procedure
  3070  08A8  0187               	clrf	7
  3071  08A9  1003               	clrc
  3072  08AA  1F81               	btfss	1,7
  3073  08AB  1403               	setc
  3074  08AC  3000               	movlw	0
  3075  08AD  3D09               	addwfc	9,w
  3076  08AE  0008               	return
  3077  08AF                     __end_of_usb_out_endpoint_has_data:	
  3078  08AF                     __ptext7:	
  3079 ;; *************** function _usb_get_out_buffer *****************
  3080 ;; Defined at:
  3081 ;;		line 1571 in file "usb/src/usb.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;  endpoint        1    wreg     unsigned char 
  3084 ;;  buf             1    3[BANK1 ] PTR PTR const unsigned c
  3085 ;;		 -> main@out_buf(2), 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  endpoint        1    4[BANK1 ] unsigned char 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      unsigned char 
  3090 ;; Registers used:
  3091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 1F/1
  3094 ;;		On exit  : 1F/1
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3097 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3098 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3100 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3101 ;;Total ram usage:        2 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:    9
  3104 ;; This function calls:
  3105 ;;		___bmul
  3106 ;; This function is called by:
  3107 ;;		_main
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           
  3112                           ;psect for function _usb_get_out_buffer
  3113  08AF                     _usb_get_out_buffer:	
  3114                           
  3115                           ;incstack = 0
  3116                           ; Regs used in _usb_get_out_buffer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3117                           ;usb_get_out_buffer@endpoint stored from wreg
  3118  08AF  00A4               	movwf	usb_get_out_buffer@endpoint^(0+128)
  3119                           
  3120                           ;usb.c: 1583: *buf = ep_buf[endpoint].out;
  3121  08B0  3007               	movlw	7
  3122  08B1  00A0               	movwf	___bmul@multiplicand^(0+128)
  3123  08B2  0824               	movf	usb_get_out_buffer@endpoint^(0+128),w
  3124  08B3  3187  2783  3188   	fcall	___bmul
  3125  08B6  3EBA               	addlw	_ep_buf& (0+255)
  3126  08B7  0086               	movwf	6
  3127  08B8  3003               	movlw	3	; select bank7/8
  3128  08B9  0087               	movwf	7
  3129  08BA  0823               	movf	usb_get_out_buffer@buf^(0+128),w
  3130  08BB  0084               	movwf	4
  3131  08BC  3002               	movlw	2	; select bank4/5
  3132  08BD  0085               	movwf	5
  3133  08BE  3F40               	moviw [0]fsr1
  3134  08BF  3F80               	movwi [0]fsr0
  3135  08C0  3F41               	moviw [1]fsr1
  3136  08C1  3F81               	movwi [1]fsr0
  3137                           
  3138                           ;usb.c: 1584: return (bds[(endpoint) * 2].BDnCNT);
  3139  08C2  0824               	movf	usb_get_out_buffer@endpoint^(0+128),w
  3140  08C3  27F5               	fcall	PL373	;call to abstracted procedure
  3141  08C4  0187               	clrf	7
  3142  08C5  0801               	movf	1,w
  3143  08C6  0008               	return
  3144  08C7                     __end_of_usb_get_out_buffer:	
  3145  08C7                     __ptext50:	
  3146 ;; *************** function i1_usb_init *****************
  3147 ;; Defined at:
  3148 ;;		line 561 in file "usb/src/usb.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  usb_init        2    8[BANK0 ] PTR volatile struct .
  3153 ;;		 -> UEP0(1), 
  3154 ;;  usb_init        1    7[BANK0 ] unsigned char 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;		None               void
  3157 ;; Registers used:
  3158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 1F/1D
  3161 ;;		On exit  : 1F/1
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3165 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3166 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3167 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3168 ;;Total ram usage:        5 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    3
  3171 ;; This function calls:
  3172 ;;		i1_init_endpoints
  3173 ;;		i1_memset
  3174 ;;		i1_reset_ep0_data_stage
  3175 ;; This function is called by:
  3176 ;;		_usb_service
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           
  3181                           ;psect for function i1_usb_init
  3182  08C7                     i1_usb_init:	
  3183                           
  3184                           ;incstack = 0
  3185                           ; Regs used in i1_usb_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3186                           ;usb.c: 563: uint8_t i;
  3187                           ;usb.c: 567: do { UCFGbits.PPB0 = 0 & 1; UCFGbits.PPB1 = (0 & 2)? 1: 0; } while (0);
  3188  08C7  1011               	bcf	17,0	;volatile
  3189  08C8  1091               	bcf	17,1	;volatile
  3190                           
  3191                           ;usb.c: 573: UIE = 0x0;
  3192  08C9  0192               	clrf	18	;volatile
  3193                           
  3194                           ;usb.c: 574: UEIE = 0x0;
  3195  08CA  0197               	clrf	23	;volatile
  3196                           
  3197                           ;usb.c: 576: UCONbits.USBEN = 1;
  3198  08CB  158E               	bsf	14,3	;volatile
  3199                           
  3200                           ;usb.c: 584: UCFGbits.UPUEN = 1;
  3201  08CC  1611               	bsf	17,4	;volatile
  3202                           
  3203                           ;usb.c: 592: UCFGbits.FSEN = 1;
  3204  08CD  1511               	bsf	17,2	;volatile
  3205                           
  3206                           ;usb.c: 595: UIRbits.TRNIF = 0;
  3207  08CE  1190               	bcf	16,3	;volatile
  3208                           
  3209                           ;usb.c: 596: UIRbits.TRNIF = 0;
  3210  08CF  1190               	bcf	16,3	;volatile
  3211                           
  3212                           ;usb.c: 597: UIRbits.TRNIF = 0;
  3213  08D0  1190               	bcf	16,3	;volatile
  3214                           
  3215                           ;usb.c: 598: UIRbits.TRNIF = 0;
  3216  08D1  1190               	bcf	16,3	;volatile
  3217                           
  3218                           ;usb.c: 600: UIR = 0;
  3219  08D2  0190               	clrf	16	;volatile
  3220                           
  3221                           ;usb.c: 603: UIEbits.TRNIE = 1;
  3222  08D3  1592               	bsf	18,3	;volatile
  3223                           
  3224                           ;usb.c: 604: UIEbits.STALLIE = 1;
  3225  08D4  1692               	bsf	18,5	;volatile
  3226                           
  3227                           ;usb.c: 605: UIEbits.URSTIE = 1;
  3228  08D5  1412               	bsf	18,0	;volatile
  3229                           
  3230                           ;usb.c: 650: memset(((UEP1bits_t*) (&UEP0 + 1 * (0))), 0x0, sizeof(*((UEP1bits_t*) (&UEP
      +                          0 + 1 * (0)))) * 16);
  3231  08D6  3098               	movlw	152
  3232  08D7  00F0               	movwf	i1memset@p1
  3233  08D8  300E               	movlw	14
  3234  08D9  00F1               	movwf	i1memset@p1+1
  3235  08DA  3010               	movlw	16
  3236  08DB  27B1  3188         	fcall	PL421	;call to abstracted procedure
  3237  08DD  26B8  3188         	fcall	i1_memset
  3238                           
  3239                           ;usb.c: 653: ((UEP1bits_t*) (&UEP0 + 1 * (0)))->EPHSHK = 1;
  3240  08DF  003D               	movlb	29	; select bank29
  3241  08E0  1618               	bsf	24,4
  3242                           
  3243                           ;usb.c: 654: ((UEP1bits_t*) (&UEP0 + 1 * (0)))->EPCONDIS = 0;
  3244  08E1  1198               	bcf	24,3
  3245                           
  3246                           ;usb.c: 655: ((UEP1bits_t*) (&UEP0 + 1 * (0)))->EPOUTEN = 1;
  3247  08E2  1518               	bsf	24,2
  3248                           
  3249                           ;usb.c: 656: ((UEP1bits_t*) (&UEP0 + 1 * (0)))->EPINEN = 1;
  3250  08E3  1498               	bsf	24,1
  3251                           
  3252                           ;usb.c: 657: ((UEP1bits_t*) (&UEP0 + 1 * (0)))->EPSTALL = 0;
  3253  08E4  1018               	bcf	24,0
  3254                           
  3255                           ;usb.c: 659: for (i = 1; i <= 2; i++) {
  3256  08E5  0020               	movlb	0	; select bank0
  3257  08E6  01BF               	clrf	i1usb_init@i
  3258  08E7  0ABF               	incf	i1usb_init@i,f
  3259  08E8                     i1l4815:	
  3260                           
  3261                           ;usb.c: 660: volatile UEP1bits_t *ep = ((UEP1bits_t*) (&UEP0 + 1 * (i)));
  3262  08E8  083F               	movf	i1usb_init@i,w
  3263  08E9  3E98               	addlw	152
  3264  08EA  00BD               	movwf	??i1_usb_init
  3265  08EB  300E               	movlw	14
  3266  08EC  01BE               	clrf	??i1_usb_init+1
  3267  08ED  3DBE               	addwfc	??i1_usb_init+1,f
  3268  08EE  083D               	movf	??i1_usb_init,w
  3269  08EF  00C0               	movwf	i1usb_init@ep
  3270  08F0  083E               	movf	??i1_usb_init+1,w
  3271  08F1  00C1               	movwf	i1usb_init@ep+1
  3272                           
  3273                           ;usb.c: 661: ep->EPHSHK = 1;
  3274  08F2  0840               	movf	i1usb_init@ep,w
  3275  08F3  0086               	movwf	6
  3276  08F4  0841               	movf	i1usb_init@ep+1,w
  3277  08F5  0087               	movwf	7
  3278  08F6  1601               	bsf	1,4
  3279                           
  3280                           ;usb.c: 662: ep->EPCONDIS = 1;
  3281  08F7  0840               	movf	i1usb_init@ep,w
  3282  08F8  0086               	movwf	6
  3283  08F9  0841               	movf	i1usb_init@ep+1,w
  3284  08FA  0087               	movwf	7
  3285  08FB  1581               	bsf	1,3
  3286                           
  3287                           ;usb.c: 663: ep->EPOUTEN = 1;
  3288  08FC  0840               	movf	i1usb_init@ep,w
  3289  08FD  0086               	movwf	6
  3290  08FE  0841               	movf	i1usb_init@ep+1,w
  3291  08FF  0087               	movwf	7
  3292  0900  1501               	bsf	1,2
  3293                           
  3294                           ;usb.c: 664: ep->EPINEN = 1;
  3295  0901  0840               	movf	i1usb_init@ep,w
  3296  0902  0086               	movwf	6
  3297  0903  0841               	movf	i1usb_init@ep+1,w
  3298  0904  0087               	movwf	7
  3299  0905  1481               	bsf	1,1
  3300                           
  3301                           ;usb.c: 665: ep->EPSTALL = 0;
  3302  0906  0840               	movf	i1usb_init@ep,w
  3303  0907  0086               	movwf	6
  3304  0908  0841               	movf	i1usb_init@ep+1,w
  3305  0909  0087               	movwf	7
  3306  090A  3003               	movlw	3
  3307  090B  1001               	bcf	1,0
  3308  090C  0ABF               	incf	i1usb_init@i,f
  3309  090D  023F               	subwf	i1usb_init@i,w
  3310  090E  1C03               	skipc
  3311  090F  28E8               	goto	i1l4815
  3312                           
  3313                           ;usb.c: 666: }
  3314                           ;usb.c: 669: UADDR = 0x0;
  3315  0910  003D               	movlb	29	; select bank29
  3316  0911  0196               	clrf	22	;volatile
  3317                           
  3318                           ;usb.c: 670: addr_pending = 0;
  3319  0912  0026               	movlb	6	; select bank6
  3320  0913  01EB               	clrf	_addr_pending^(0+768)
  3321                           
  3322                           ;usb.c: 671: g_configuration = 0;
  3323  0914  0020               	movlb	0	; select bank0
  3324  0915  01EF               	clrf	_g_configuration
  3325                           
  3326                           ;usb.c: 673: init_endpoints();
  3327  0916  211C  3188         	fcall	i1_init_endpoints
  3328                           
  3329                           ;usb.c: 683: reset_ep0_data_stage();
  3330  0918  268C               	fcall	i1_reset_ep0_data_stage
  3331                           
  3332                           ;usb.c: 686: PIE2bits.USBIE = 1;
  3333  0919  0021               	movlb	1	; select bank1
  3334  091A  1512               	bsf	18,2	;volatile
  3335  091B  0008               	return
  3336  091C                     __end_ofi1_usb_init:	
  3337  091C                     __ptext54:	
  3338 ;; *************** function i1_init_endpoints *****************
  3339 ;; Defined at:
  3340 ;;		line 495 in file "usb/src/usb.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;		None
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  init_endpoin    1    4[BANK0 ] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;		None               void
  3347 ;; Registers used:
  3348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 1F/0
  3351 ;;		On exit  : 1F/1D
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3357 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3358 ;;Total ram usage:        1 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    2
  3361 ;; This function calls:
  3362 ;;		i1___bmul
  3363 ;;		i1_memset
  3364 ;;		i1_pic16_linear_addr
  3365 ;; This function is called by:
  3366 ;;		_handle_standard_control_request
  3367 ;;		i1_usb_init
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           
  3372                           ;psect for function i1_init_endpoints
  3373  091C                     i1_init_endpoints:	
  3374                           
  3375                           ;usb.c: 497: uint8_t i;
  3376                           ;usb.c: 501: UCONbits.PPBRST = 1;
  3377                           
  3378                           ;incstack = 0
  3379                           ; Regs used in i1_init_endpoints: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3380  091C  003D               	movlb	29	; select bank29
  3381  091D  170E               	bsf	14,6	;volatile
  3382                           
  3383                           ;usb.c: 503: ep0_buf.flags = 0;
  3384  091E  0025               	movlb	5	; select bank5
  3385  091F  01EC               	clrf	(_ep0_buf^(0+640)+4)
  3386                           
  3387                           ;usb.c: 504: for (i = 0; i <= 2; i++) {
  3388  0920  0020               	movlb	0	; select bank0
  3389  0921  01BC               	clrf	i1init_endpoints@i
  3390  0922                     i1l3997:	
  3391                           
  3392                           ;usb.c: 508: ep_buf[i].flags = 0x4;
  3393  0922  3007               	movlw	7
  3394  0923  00F0               	movwf	i1___bmul@multiplicand
  3395  0924  083C               	movf	i1init_endpoints@i,w
  3396  0925  25B4  3188         	fcall	i1___bmul
  3397  0927  3EC0               	addlw	(_ep_buf+6)& (0+255)
  3398  0928  0086               	movwf	6
  3399  0929  3003               	movlw	3	; select bank7/8
  3400  092A  0087               	movwf	7
  3401  092B  3004               	movlw	4
  3402  092C  0081               	movwf	1
  3403  092D  0020               	movlb	0	; select bank0
  3404  092E  3003               	movlw	3
  3405  092F  0ABC               	incf	i1init_endpoints@i,f
  3406  0930  023C               	subwf	i1init_endpoints@i,w
  3407  0931  1C03               	skipc
  3408  0932  2922               	goto	i1l3997
  3409                           
  3410                           ;usb.c: 510: }
  3411                           ;usb.c: 513: memset(bds, 0x0, sizeof(bds));
  3412  0933  3020               	movlw	32
  3413  0934  00F0               	movwf	i1memset@p1
  3414  0935  3018               	movlw	24
  3415  0936  01F1               	clrf	i1memset@p1+1
  3416  0937  27B1  3188         	fcall	PL421	;call to abstracted procedure
  3417  0939  26B8  3188         	fcall	i1_memset
  3418                           
  3419                           ;usb.c: 517: bds[0].BDnADR = (uint16_t) pic16_linear_addr(ep0_buf.out);
  3420  093B  0025               	movlb	5	; select bank5
  3421  093C  0869               	movf	(_ep0_buf+1)^(0+640),w
  3422  093D  00F7               	movwf	i1pic16_linear_addr@ptr+1
  3423  093E  0868               	movf	_ep0_buf^(0+640),w
  3424  093F  00F6               	movwf	i1pic16_linear_addr@ptr
  3425  0940  262E  3188         	fcall	i1_pic16_linear_addr
  3426  0942  0877               	movf	?i1_pic16_linear_addr+1,w
  3427  0943  00A3               	movwf	35
  3428  0944  0876               	movf	?i1_pic16_linear_addr,w
  3429  0945  00A2               	movwf	34
  3430  0946  3008               	movlw	8
  3431  0947  00A1               	movwf	33
  3432  0948  3080               	movlw	128
  3433  0949  00A0               	movwf	32
  3434                           
  3435                           ;usb.c: 527: bds[1].BDnADR = (uint16_t) pic16_linear_addr(ep0_buf.in);
  3436  094A  0025               	movlb	5	; select bank5
  3437  094B  086B               	movf	(_ep0_buf+3)^(0+640),w
  3438  094C  00F7               	movwf	i1pic16_linear_addr@ptr+1
  3439  094D  086A               	movf	(_ep0_buf+2)^(0+640),w
  3440  094E  00F6               	movwf	i1pic16_linear_addr@ptr
  3441  094F  262E  3188         	fcall	i1_pic16_linear_addr
  3442  0951  0877               	movf	?i1_pic16_linear_addr+1,w
  3443  0952  00A7               	movwf	39
  3444  0953  0876               	movf	?i1_pic16_linear_addr,w
  3445  0954  00A6               	movwf	38
  3446  0955  3008               	movlw	8
  3447  0956  00A5               	movwf	37
  3448  0957  01A4               	clrf	36
  3449                           
  3450                           ;usb.c: 534: for (i = 1; i <= 2; i++) {
  3451  0958  01BC               	clrf	i1init_endpoints@i
  3452  0959  0ABC               	incf	i1init_endpoints@i,f
  3453  095A                     i1l4023:	
  3454                           
  3455                           ;usb.c: 537: bds[(i) * 2].BDnADR = (uint16_t) pic16_linear_addr(ep_buf[i].out);
  3456  095A  3007               	movlw	7
  3457  095B  00F0               	movwf	i1___bmul@multiplicand
  3458  095C  083C               	movf	i1init_endpoints@i,w
  3459  095D  25B4  3188         	fcall	i1___bmul
  3460  095F  3EBA               	addlw	_ep_buf& (0+255)
  3461  0960  27A9  3188         	fcall	PL403	;call to abstracted procedure
  3462  0962  262E  3188         	fcall	i1_pic16_linear_addr
  3463  0964  083C               	movf	i1init_endpoints@i,w
  3464  0965  0709               	addwf	9,w
  3465  0966  0709               	addwf	9,w
  3466  0967  0709               	addwf	9,w
  3467  0968  3E22               	addlw	34
  3468  0969  27A1  3188         	fcall	PL383	;call to abstracted procedure
  3469  096B  27F5  3188         	fcall	PL373	;call to abstracted procedure
  3470  096D  3007               	movlw	7
  3471  096E  00F0               	movwf	i1___bmul@multiplicand
  3472  096F  083C               	movf	i1init_endpoints@i,w
  3473  0970  25B4               	fcall	i1___bmul
  3474  0971  3EBE               	addlw	(_ep_buf+4)& (0+255)
  3475  0972  319C  24E2  3188   	fcall	PL365	;call to abstracted procedure
  3476  0975  0020               	movlb	0	; select bank0
  3477  0976  083C               	movf	i1init_endpoints@i,w
  3478  0977  279B  3188         	fcall	PL377	;call to abstracted procedure
  3479  0979  3088               	movlw	136
  3480  097A  0187               	clrf	7
  3481  097B  0081               	movwf	1
  3482                           
  3483                           ;usb.c: 546: bds[(i) * 2 + 1].BDnADR = (uint16_t) pic16_linear_addr(ep_buf[i].in);
  3484  097C  3007               	movlw	7
  3485  097D  00F0               	movwf	i1___bmul@multiplicand
  3486  097E  083C               	movf	i1init_endpoints@i,w
  3487  097F  25B4  3188         	fcall	i1___bmul
  3488  0981  3EBC               	addlw	(_ep_buf+2)& (0+255)
  3489  0982  27A9  3188         	fcall	PL403	;call to abstracted procedure
  3490  0984  262E  3188         	fcall	i1_pic16_linear_addr
  3491  0986  083C               	movf	i1init_endpoints@i,w
  3492  0987  0709               	addwf	9,w
  3493  0988  0709               	addwf	9,w
  3494  0989  0709               	addwf	9,w
  3495  098A  3E26               	addlw	38
  3496  098B  27A1               	fcall	PL383	;call to abstracted procedure
  3497  098C  319C  24F0  3188   	fcall	PL395	;call to abstracted procedure
  3498  098F  00F0               	movwf	i1___bmul@multiplicand
  3499  0990  083C               	movf	i1init_endpoints@i,w
  3500  0991  25B4               	fcall	i1___bmul
  3501  0992  3EBF               	addlw	(_ep_buf+5)& (0+255)
  3502  0993  319C  24E2  3188   	fcall	PL365	;call to abstracted procedure
  3503  0996  0020               	movlb	0	; select bank0
  3504  0997  083C               	movf	i1init_endpoints@i,w
  3505  0998  319C  24F6  3188   	fcall	PL399	;call to abstracted procedure
  3506  099B  3003               	movlw	3
  3507  099C  0187               	clrf	7
  3508  099D  0181               	clrf	1
  3509  099E  0ABC               	incf	i1init_endpoints@i,f
  3510  099F  023C               	subwf	i1init_endpoints@i,w
  3511  09A0  1C03               	skipc
  3512  09A1  295A               	goto	i1l4023
  3513                           
  3514                           ;usb.c: 553: }
  3515                           ;usb.c: 555: UCONbits.PPBRST = 0;
  3516  09A2  003D               	movlb	29	; select bank29
  3517  09A3  130E               	bcf	14,6	;volatile
  3518  09A4  0008               	return
  3519  09A5                     __end_ofi1_init_endpoints:	
  3520  09A5                     __ptext49:	
  3521 ;; *************** function _usb_service *****************
  3522 ;; Defined at:
  3523 ;;		line 1369 in file "usb/src/usb.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  ep              2   44[BANK0 ] PTR volatile struct .
  3528 ;;		 -> UEP0(1), 
  3529 ;;  pid             1   48[BANK0 ] unsigned char 
  3530 ;;  i               2   46[BANK0 ] int 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;		None               void
  3533 ;; Registers used:
  3534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 1F/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3541 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3542 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3543 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3544 ;;Total ram usage:        9 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    6
  3547 ;; This function calls:
  3548 ;;		_handle_ep0_in
  3549 ;;		_handle_ep0_out
  3550 ;;		_handle_ep0_setup
  3551 ;;		_reset_bd0_out
  3552 ;;		_stall_ep0
  3553 ;;		_stall_ep_in
  3554 ;;		_stall_ep_out
  3555 ;;		i1___bmul
  3556 ;;		i1_usb_init
  3557 ;; This function is called by:
  3558 ;;		_isr
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           
  3563                           ;psect for function _usb_service
  3564  09A5                     _usb_service:	
  3565                           
  3566                           ;usb.c: 1371: if (UIRbits.URSTIF) {
  3567                           
  3568                           ;incstack = 0
  3569                           ; Regs used in _usb_service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3570  09A5  003D               	movlb	29	; select bank29
  3571  09A6  1C10               	btfss	16,0	;volatile
  3572  09A7  29AC               	goto	i1l4909
  3573                           
  3574                           ;usb.c: 1376: usb_init();
  3575  09A8  20C7  3188         	fcall	i1_usb_init
  3576                           
  3577                           ;usb.c: 1377: UIRbits.URSTIF = 0;
  3578  09AA  003D               	movlb	29	; select bank29
  3579  09AB  1010               	bcf	16,0	;volatile
  3580  09AC                     i1l4909:	
  3581                           
  3582                           ;usb.c: 1379: }
  3583                           ;usb.c: 1381: if (UIRbits.STALLIF) {
  3584  09AC  1E90               	btfss	16,5	;volatile
  3585  09AD  29D6               	goto	i1l285
  3586                           
  3587                           ;usb.c: 1387: int i;
  3588                           ;usb.c: 1388: for (i = 1; i <= 2; i++) {
  3589  09AE  0020               	movlb	0	; select bank0
  3590  09AF  01E6               	clrf	usb_service@i
  3591  09B0  0AE6               	incf	usb_service@i,f
  3592  09B1  01E7               	clrf	usb_service@i+1
  3593  09B2                     i1l4917:	
  3594                           
  3595                           ;usb.c: 1389: volatile UEP1bits_t *ep = ((UEP1bits_t*) (&UEP0 + 1 * (i)));
  3596  09B2  3098               	movlw	152
  3597  09B3  0020               	movlb	0	; select bank0
  3598  09B4  00E0               	movwf	??_usb_service
  3599  09B5  300E               	movlw	14
  3600  09B6  00E1               	movwf	??_usb_service+1
  3601  09B7  0866               	movf	usb_service@i,w
  3602  09B8  0760               	addwf	??_usb_service,w
  3603  09B9  00E2               	movwf	??_usb_service+2
  3604  09BA  0867               	movf	usb_service@i+1,w
  3605  09BB  3D61               	addwfc	??_usb_service+1,w
  3606  09BC  00E3               	movwf	??_usb_service+3
  3607  09BD  0862               	movf	??_usb_service+2,w
  3608  09BE  00E4               	movwf	usb_service@ep
  3609  09BF  0863               	movf	??_usb_service+3,w
  3610  09C0  00E5               	movwf	usb_service@ep+1
  3611                           
  3612                           ;usb.c: 1390: ep->EPSTALL = 0;
  3613  09C1  0864               	movf	usb_service@ep,w
  3614  09C2  0086               	movwf	6
  3615  09C3  0865               	movf	usb_service@ep+1,w
  3616  09C4  0087               	movwf	7
  3617  09C5  1001               	bcf	1,0
  3618  09C6  0AE6               	incf	usb_service@i,f
  3619  09C7  1903               	skipnz
  3620  09C8  0AE7               	incf	usb_service@i+1,f
  3621  09C9  0867               	movf	usb_service@i+1,w
  3622  09CA  3A80               	xorlw	128
  3623  09CB  00E0               	movwf	??_usb_service
  3624  09CC  3080               	movlw	128
  3625  09CD  0260               	subwf	??_usb_service,w
  3626  09CE  1D03               	skipz
  3627  09CF  29D2               	goto	u410_25
  3628  09D0  3003               	movlw	3
  3629  09D1  0266               	subwf	usb_service@i,w
  3630  09D2                     u410_25:	
  3631  09D2  1C03               	skipc
  3632  09D3  29B2               	goto	i1l4917
  3633                           
  3634                           ;usb.c: 1391: }
  3635                           ;usb.c: 1393: UIRbits.STALLIF = 0;
  3636  09D4  003D               	movlb	29	; select bank29
  3637  09D5  1290               	bcf	16,5	;volatile
  3638  09D6                     i1l285:	
  3639                           
  3640                           ;usb.c: 1394: }
  3641                           ;usb.c: 1398: if (UIRbits.TRNIF && UIEbits.TRNIE) {
  3642  09D6  1990               	btfsc	16,3	;volatile
  3643  09D7  1D92               	btfss	18,3	;volatile
  3644  09D8  2DAE               	goto	i1l288
  3645                           
  3646                           ;usb.c: 1405: if (USTATbits.ENDP == 0 && USTATbits.DIR == 0 ) {
  3647  09D9  0C0F               	rrf	15,w	;volatile
  3648  09DA  0020               	movlb	0	; select bank0
  3649  09DB  00E0               	movwf	??_usb_service
  3650  09DC  0CE0               	rrf	??_usb_service,f
  3651  09DD  0C60               	rrf	??_usb_service,w
  3652  09DE  390F               	andlw	15
  3653  09DF  1D03               	skipz
  3654  09E0  2CE9               	goto	i1l4947
  3655  09E1  003D               	movlb	29	; select bank29
  3656  09E2  190F               	btfsc	15,2	;volatile
  3657  09E3  2CE9               	goto	i1l4947
  3658                           
  3659                           ;usb.c: 1412: uint8_t pid = bds[0].STAT.PID;
  3660  09E4  0020               	movlb	0	; select bank0
  3661  09E5  0C20               	rrf	32,w
  3662  09E6  0C89               	rrf	9,f
  3663  09E7  390F               	andlw	15
  3664  09E8  00E8               	movwf	usb_service@pid
  3665                           
  3666                           ;usb.c: 1414: if (pid == PID_SETUP) {
  3667  09E9  3A0D               	xorlw	13
  3668  09EA  1D03               	skipz
  3669  09EB  2C8D               	goto	i1l4937
  3670                           
  3671                           ;psect for function _handle_ep0_setup
  3672                           
  3673                           ;usb.c: 1415: handle_ep0_setup();
  3674  09EC                     i1L_handle_ep0_setup:	
  3675  09EC                     i1Li1l4373:	
  3676                           
  3677                           ;usb.c: 1150: struct setup_packet *setup;
  3678                           ;usb.c: 1157: setup = (struct setup_packet*) ep0_buf.out;
  3679  09EC  0025               	movlb	5	; select bank5
  3680  09ED  0869               	movf	(_ep0_buf+1)^(0+640),w
  3681  09EE  0020               	movlb	0	; select bank0
  3682  09EF  00DF               	movwf	handle_ep0_setup@setup+1
  3683  09F0  0025               	movlb	5	; select bank5
  3684  09F1  0868               	movf	_ep0_buf^(0+640),w
  3685  09F2  0020               	movlb	0	; select bank0
  3686  09F3  00DE               	movwf	handle_ep0_setup@setup
  3687  09F4                     i1Li1l4375:	
  3688                           
  3689                           ;usb.c: 1160: ep0_data_stage_direc = setup->REQUEST.direction;
  3690  09F4  085E               	movf	handle_ep0_setup@setup,w
  3691  09F5  0086               	movwf	6
  3692  09F6  085F               	movf	handle_ep0_setup@setup+1,w
  3693  09F7  0087               	movwf	7
  3694  09F8  3000               	movlw	0
  3695  09F9  1B81               	btfsc	1,7
  3696  09FA  3001               	movlw	1
  3697  09FB  00ED               	movwf	_ep0_data_stage_direc
  3698  09FC                     i1Li1l4377:	
  3699                           
  3700                           ;usb.c: 1161: int8_t res;
  3701                           ;usb.c: 1167: clear_ep0_stall();
  3702  09FC  26DB  3188         	fcall	_clear_ep0_stall
  3703  09FE                     i1Li1l4379:	
  3704                           
  3705                           ;usb.c: 1188: if (bds[1].STAT.UOWN) {
  3706  09FE  1FA4               	btfss	36,7
  3707  09FF  2A05               	ljmp	i1Li1l4385
  3708  0A00  2A02               	ljmp	i1Li1l4381
  3709  0A01                     i1Lu354_21:	
  3710  0A01  2A05               	ljmp	i1Li1l4385
  3711  0A02                     i1Lu354_20:	
  3712  0A02                     i1Li1l4381:	
  3713  0A02  3008               	movlw	8
  3714  0A03  00A5               	movwf	37
  3715  0A04                     i1Li1l4383:	
  3716  0A04  01A4               	clrf	36
  3717  0A05                     i1Li1l4385:	
  3718                           
  3719                           ;usb.c: 1190: }
  3720                           ;usb.c: 1193: if (ep0_data_stage_buf_remaining) {
  3721  0A05  086A               	movf	_ep0_data_stage_buf_remaining+1,w
  3722  0A06  0469               	iorwf	_ep0_data_stage_buf_remaining,w
  3723  0A07  1903               	btfsc	3,2
  3724  0A08  2A0D               	ljmp	i1Li1l4391
  3725  0A09  2A0B               	ljmp	i1Li1l4389
  3726  0A0A                     i1Lu355_21:	
  3727  0A0A  2A0D               	ljmp	i1Li1l4391
  3728  0A0B                     i1Lu355_20:	
  3729  0A0B                     i1Li1l4389:	
  3730                           
  3731                           ;usb.c: 1201: reset_ep0_data_stage();
  3732  0A0B  268C  3188         	fcall	i1_reset_ep0_data_stage
  3733  0A0D                     i1Li1l4391:	
  3734                           
  3735                           ;usb.c: 1202: }
  3736                           ;usb.c: 1204: if (setup->REQUEST.type == REQUEST_TYPE_STANDARD) {
  3737  0A0D  085E               	movf	handle_ep0_setup@setup,w
  3738  0A0E  0086               	movwf	6
  3739  0A0F  085F               	movf	handle_ep0_setup@setup+1,w
  3740  0A10  0087               	movwf	7
  3741  0A11  0E01               	swapf	1,w
  3742  0A12  0C89               	rrf	9,f
  3743  0A13  3903               	andlw	3
  3744  0A14  1D03               	btfss	3,2
  3745  0A15  2C88               	ljmp	i1Li1l4399
  3746  0A16  2A18               	ljmp	i4L__ptext53
  3747  0A17                     i1Lu356_21:	
  3748  0A17  2C88               	ljmp	i1Li1l4399
  3749  0A18                     i1Lu356_20:	
  3750  0A18                     i1Li1l4393:	
  3751  0A18                     i4L__ptext53:	
  3752                           ;usb.c: 1205: res = handle_standard_control_request();
  3753                           
  3754                           
  3755                           ;psect for function _handle_standard_control_request
  3756  0A18                     i4L_handle_standard_control_request:	
  3757  0A18                     i4Li1l4067:	
  3758                           
  3759                           ;usb.c: 853: struct setup_packet *setup;
  3760                           ;usb.c: 854: int8_t res = 0;
  3761  0A18  01CC               	clrf	handle_standard_control_request@res
  3762  0A19                     i4Li1l4069:	
  3763                           
  3764                           ;usb.c: 862: setup = (struct setup_packet*) ep0_buf.out;
  3765  0A19  0025               	movlb	5	; select bank5
  3766  0A1A  0869               	movf	(_ep0_buf+1)^(0+640),w
  3767  0A1B  0020               	movlb	0	; select bank0
  3768  0A1C  00DC               	movwf	handle_standard_control_request@setup+1
  3769  0A1D  0025               	movlb	5	; select bank5
  3770  0A1E  0868               	movf	_ep0_buf^(0+640),w
  3771  0A1F  0020               	movlb	0	; select bank0
  3772  0A20  00DB               	movwf	handle_standard_control_request@setup
  3773  0A21                     i4Li1l4071:	
  3774                           
  3775                           ;usb.c: 865: if (setup->bRequest == GET_DESCRIPTOR &&
  3776                           ;usb.c: 866: setup->REQUEST.bmRequestType == 0x80 ) {
  3777  0A21  085B               	movf	handle_standard_control_request@setup,w
  3778  0A22  0086               	movwf	6
  3779  0A23  085C               	movf	handle_standard_control_request@setup+1,w
  3780  0A24  0087               	movwf	7
  3781  0A25  3141               	addfsr 1,1
  3782  0A26  0801               	movf	1,w
  3783  0A27  3A06               	xorlw	6
  3784  0A28  1D03               	btfss	3,2
  3785  0A29  2ABE               	ljmp	i4Li1l4103
  3786  0A2A  2A2C               	ljmp	i4Li1l4073
  3787  0A2B                     i4Lu313_21:	
  3788  0A2B  2ABE               	ljmp	i4Li1l4103
  3789  0A2C                     i4Lu313_20:	
  3790  0A2C                     i4Li1l4073:	
  3791  0A2C  085B               	movf	handle_standard_control_request@setup,w
  3792  0A2D  0086               	movwf	6
  3793  0A2E  085C               	movf	handle_standard_control_request@setup+1,w
  3794  0A2F  0087               	movwf	7
  3795  0A30  0801               	movf	1,w
  3796  0A31  3A80               	xorlw	128
  3797  0A32  1D03               	btfss	3,2
  3798  0A33  2ABE               	ljmp	i4Li1l4103
  3799  0A34  2A36               	ljmp	i4Li1l4075
  3800  0A35                     i4Lu314_21:	
  3801  0A35  2ABE               	ljmp	i4Li1l4103
  3802  0A36                     i4Lu314_20:	
  3803  0A36                     i4Li1l4075:	
  3804                           
  3805                           ;usb.c: 867: char descriptor = ((setup->wValue >> 8) & 0x00ff);
  3806  0A36  085B               	movf	handle_standard_control_request@setup,w
  3807  0A37  0086               	movwf	6
  3808  0A38  085C               	movf	handle_standard_control_request@setup+1,w
  3809  0A39  0087               	movwf	7
  3810  0A3A  3142               	addfsr 1,2
  3811  0A3B  3F40               	moviw [0]fsr1
  3812  0A3C  00C3               	movwf	??_handle_standard_control_request
  3813  0A3D  3F41               	moviw [1]fsr1
  3814  0A3E  00C4               	movwf	??_handle_standard_control_request+1
  3815  0A3F  00D6               	movwf	handle_standard_control_request@descriptor
  3816                           
  3817                           ;usb.c: 868: uint8_t descriptor_index = setup->wValue & 0x00ff;
  3818  0A40  085B               	movf	handle_standard_control_request@setup,w
  3819  0A41  0086               	movwf	6
  3820  0A42  085C               	movf	handle_standard_control_request@setup+1,w
  3821  0A43  0087               	movwf	7
  3822  0A44  3142               	addfsr 1,2
  3823  0A45  0801               	movf	1,w
  3824  0A46  00D7               	movwf	handle_standard_control_request@descriptor_index
  3825  0A47                     i4Li1l4077:	
  3826                           
  3827                           ;usb.c: 870: if (descriptor == DESC_DEVICE) {
  3828  0A47  0B56               	decfsz	handle_standard_control_request@descriptor,w
  3829  0A48  2A62               	ljmp	i4Li1l4081
  3830  0A49  2A4B               	ljmp	i4Li1l4079
  3831  0A4A                     i4Lu315_21:	
  3832  0A4A  2A62               	ljmp	i4Li1l4081
  3833  0A4B                     i4Lu315_20:	
  3834  0A4B                     i4Li1l4079:	
  3835                           
  3836                           ;usb.c: 871: ;
  3837                           ;usb.c: 874: start_control_return(&this_device_descriptor, this_device_descriptor.bLengt
      +                          h, setup->wLength);
  3838  0A4B  304A               	movlw	low (_this_device_descriptor| (0+32768))
  3839  0A4C  00B8               	movwf	start_control_return@ptr
  3840  0A4D  3099               	movlw	high (_this_device_descriptor| (0+32768))
  3841  0A4E  00B9               	movwf	start_control_return@ptr+1
  3842  0A4F  304A               	movlw	low (_this_device_descriptor| (0+32768))
  3843  0A50  0084               	movwf	4
  3844  0A51  3099               	movlw	high (_this_device_descriptor| (0+32768))
  3845  0A52  0085               	movwf	5
  3846  0A53  0800               	movf	0,w	;code access
  3847  0A54  00BA               	movwf	start_control_return@len
  3848  0A55  01BB               	clrf	start_control_return@len+1
  3849  0A56  085B               	movf	handle_standard_control_request@setup,w
  3850  0A57  0086               	movwf	6
  3851  0A58  085C               	movf	handle_standard_control_request@setup+1,w
  3852  0A59  0087               	movwf	7
  3853  0A5A  3146               	addfsr 1,6
  3854  0A5B  3F40               	moviw [0]fsr1
  3855  0A5C  00BC               	movwf	start_control_return@bytes_asked_for
  3856  0A5D  3F41               	moviw [1]fsr1
  3857  0A5E  00BD               	movwf	start_control_return@bytes_asked_for+1
  3858  0A5F  25C0  3188         	fcall	_start_control_return
  3859  0A61  2C81               	ljmp	i4Li1l4221
  3860  0A62                     i4Li1l4081:	
  3861                           
  3862                           ;usb.c: 876: else if (descriptor == DESC_CONFIGURATION) {
  3863  0A62  0856               	movf	handle_standard_control_request@descriptor,w
  3864  0A63  3A02               	xorlw	2
  3865  0A64  1D03               	btfss	3,2
  3866  0A65  2A96               	ljmp	i4Li1l4091
  3867  0A66  2A68               	ljmp	i4Li1l4083
  3868  0A67                     i4Lu316_21:	
  3869  0A67  2A96               	ljmp	i4Li1l4091
  3870  0A68                     i4Lu316_20:	
  3871  0A68                     i4Li1l4083:	
  3872                           
  3873                           ;usb.c: 877: const struct configuration_descriptor *desc;
  3874                           ;usb.c: 878: if (descriptor_index >= 1)
  3875  0A68  0857               	movf	handle_standard_control_request@descriptor_index,w
  3876  0A69  1D03               	btfss	3,2
  3877  0A6A  2A6C               	ljmp	i4Li1l4085
  3878  0A6B  2A6F               	ljmp	i4Li1l4087
  3879  0A6C                     i4Lu317_20:	
  3880  0A6C                     i4Li1l4085:	
  3881                           
  3882                           ;usb.c: 879: stall_ep0();
  3883  0A6C  2629  3188         	fcall	_stall_ep0
  3884  0A6E  2C81               	ljmp	i4Li1l4221
  3885  0A6F                     i4Li1l4087:	
  3886                           
  3887                           ;usb.c: 880: else {
  3888                           ;usb.c: 881: desc = usb_application_config_descs[descriptor_index];
  3889  0A6F  3557               	lslf	handle_standard_control_request@descriptor_index,w
  3890  0A70  3E6E               	addlw	_usb_application_config_descs& (0+255)
  3891  0A71  0086               	movwf	6
  3892  0A72  3003               	movlw	3	; select bank6/7
  3893  0A73  0087               	movwf	7
  3894  0A74  3F40               	moviw [0]fsr1
  3895  0A75  00CF               	movwf	handle_standard_control_request@desc
  3896  0A76  3F41               	moviw [1]fsr1
  3897  0A77  00D0               	movwf	handle_standard_control_request@desc+1
  3898  0A78                     i4Li1l4089:	
  3899                           
  3900                           ;usb.c: 882: start_control_return(desc, desc->wTotalLength, setup->wLength);
  3901  0A78  0850               	movf	handle_standard_control_request@desc+1,w
  3902  0A79  00B9               	movwf	start_control_return@ptr+1
  3903  0A7A  084F               	movf	handle_standard_control_request@desc,w
  3904  0A7B  00B8               	movwf	start_control_return@ptr
  3905  0A7C  0850               	movf	handle_standard_control_request@desc+1,w
  3906  0A7D  00C4               	movwf	??_handle_standard_control_request+1
  3907  0A7E  084F               	movf	handle_standard_control_request@desc,w
  3908  0A7F  00C3               	movwf	??_handle_standard_control_request
  3909  0A80  3E02               	addlw	2
  3910  0A81  0084               	movwf	4
  3911  0A82  0844               	movf	??_handle_standard_control_request+1,w
  3912  0A83  1803               	btfsc	3,0
  3913  0A84  0A44               	incf	??_handle_standard_control_request+1,w
  3914  0A85  0085               	movwf	5
  3915  0A86  3F00               	moviw [0]fsr0
  3916  0A87  00BA               	movwf	start_control_return@len
  3917  0A88  3F01               	moviw [1]fsr0
  3918  0A89  00BB               	movwf	start_control_return@len+1
  3919  0A8A  085B               	movf	handle_standard_control_request@setup,w
  3920  0A8B  0086               	movwf	6
  3921  0A8C  085C               	movf	handle_standard_control_request@setup+1,w
  3922  0A8D  0087               	movwf	7
  3923  0A8E  3146               	addfsr 1,6
  3924  0A8F  3F40               	moviw [0]fsr1
  3925  0A90  00BC               	movwf	start_control_return@bytes_asked_for
  3926  0A91  3F41               	moviw [1]fsr1
  3927  0A92  00BD               	movwf	start_control_return@bytes_asked_for+1
  3928  0A93  25C0  3188         	fcall	_start_control_return
  3929  0A95  2C81               	ljmp	i4Li1l4221
  3930  0A96                     i4Li1l4091:	
  3931                           
  3932                           ;usb.c: 885: else if (descriptor == DESC_STRING) {
  3933  0A96  0856               	movf	handle_standard_control_request@descriptor,w
  3934  0A97  3A03               	xorlw	3
  3935  0A98  1D03               	btfss	3,2
  3936  0A99  2A6C               	ljmp	i4Li1l4085
  3937  0A9A  2A9C               	ljmp	i4Li1l4093
  3938  0A9B                     i4Lu318_21:	
  3939  0A9B  2A6C               	ljmp	i4Li1l4085
  3940  0A9C                     i4Lu318_20:	
  3941  0A9C                     i4Li1l4093:	
  3942                           
  3943                           ;usb.c: 907: {
  3944                           ;usb.c: 909: const void *desc;
  3945                           ;usb.c: 910: int16_t len;
  3946                           ;usb.c: 911: {
  3947                           ;usb.c: 912: len = usb_application_get_string(descriptor_index, &desc);
  3948  0A9C  3058               	movlw	handle_standard_control_request@desc_632& (0+255)
  3949  0A9D  00F0               	movwf	usb_application_get_string@ptr
  3950  0A9E  0857               	movf	handle_standard_control_request@descriptor_index,w
  3951  0A9F  26DF  3188         	fcall	_usb_application_get_string
  3952  0AA1  0871               	movf	?_usb_application_get_string+1,w
  3953  0AA2  00D2               	movwf	handle_standard_control_request@len+1
  3954  0AA3  0870               	movf	?_usb_application_get_string,w
  3955  0AA4  00D1               	movwf	handle_standard_control_request@len
  3956  0AA5                     i4Li1l4095:	
  3957                           
  3958                           ;usb.c: 913: if (len < 0) {
  3959  0AA5  1FD2               	btfss	handle_standard_control_request@len+1,7
  3960  0AA6  2AAA               	ljmp	i4Li1l4099
  3961  0AA7  2A6C               	ljmp	i4Li1l4085
  3962  0AA8                     i4Lu319_21:	
  3963  0AA8  2AAA               	ljmp	i4Li1l4099
  3964  0AA9                     i4Lu319_20:	
  3965  0AA9  2A6C               	ljmp	i4Li1l4085
  3966  0AAA                     i4Li1l4099:	
  3967                           
  3968                           ;usb.c: 917: else
  3969                           ;usb.c: 918: start_control_return(desc, len, setup->wLength);
  3970  0AAA  0859               	movf	handle_standard_control_request@desc_632+1,w
  3971  0AAB  00B9               	movwf	start_control_return@ptr+1
  3972  0AAC  0858               	movf	handle_standard_control_request@desc_632,w
  3973  0AAD  00B8               	movwf	start_control_return@ptr
  3974  0AAE  0852               	movf	handle_standard_control_request@len+1,w
  3975  0AAF  00BB               	movwf	start_control_return@len+1
  3976  0AB0  0851               	movf	handle_standard_control_request@len,w
  3977  0AB1  00BA               	movwf	start_control_return@len
  3978  0AB2  085B               	movf	handle_standard_control_request@setup,w
  3979  0AB3  0086               	movwf	6
  3980  0AB4  085C               	movf	handle_standard_control_request@setup+1,w
  3981  0AB5  0087               	movwf	7
  3982  0AB6  3146               	addfsr 1,6
  3983  0AB7  3F40               	moviw [0]fsr1
  3984  0AB8  00BC               	movwf	start_control_return@bytes_asked_for
  3985  0AB9  3F41               	moviw [1]fsr1
  3986  0ABA  00BD               	movwf	start_control_return@bytes_asked_for+1
  3987  0ABB  25C0  3188         	fcall	_start_control_return
  3988  0ABD  2C81               	ljmp	i4Li1l4221
  3989  0ABE                     i4Li1l4103:	
  3990                           
  3991                           ;usb.c: 945: else if (setup->bRequest == SET_ADDRESS) {
  3992  0ABE  085B               	movf	handle_standard_control_request@setup,w
  3993  0ABF  0086               	movwf	6
  3994  0AC0  085C               	movf	handle_standard_control_request@setup+1,w
  3995  0AC1  0087               	movwf	7
  3996  0AC2  3141               	addfsr 1,1
  3997  0AC3  0801               	movf	1,w
  3998  0AC4  3A05               	xorlw	5
  3999  0AC5  1D03               	btfss	3,2
  4000  0AC6  2AD8               	ljmp	i4Li1l4111
  4001  0AC7  2AC9               	ljmp	i4Li1l4105
  4002  0AC8                     i4Lu320_21:	
  4003  0AC8  2AD8               	ljmp	i4Li1l4111
  4004  0AC9                     i4Lu320_20:	
  4005  0AC9                     i4Li1l4105:	
  4006                           
  4007                           ;usb.c: 948: addr_pending = 1;
  4008  0AC9  0026               	movlb	6	; select bank6
  4009  0ACA  01EB               	clrf	_addr_pending^(0+768)
  4010  0ACB  0AEB               	incf	_addr_pending^(0+768),f
  4011  0ACC                     i4Li1l4107:	
  4012                           
  4013                           ;usb.c: 949: addr = setup->wValue;
  4014  0ACC  0020               	movlb	0	; select bank0
  4015  0ACD  085B               	movf	handle_standard_control_request@setup,w
  4016  0ACE  0086               	movwf	6
  4017  0ACF  085C               	movf	handle_standard_control_request@setup+1,w
  4018  0AD0  0087               	movwf	7
  4019  0AD1  3142               	addfsr 1,2
  4020  0AD2  0801               	movf	1,w
  4021  0AD3  0026               	movlb	6	; select bank6
  4022  0AD4  00EA               	movwf	_addr^(0+768)
  4023  0AD5                     i4Li1l4109:	
  4024                           
  4025                           ;usb.c: 951: send_zero_length_packet_ep0();
  4026  0AD5  2696  3188         	fcall	_send_zero_length_packet_ep0
  4027  0AD7  2C81               	ljmp	i4Li1l4221
  4028  0AD8                     i4Li1l4111:	
  4029                           
  4030                           ;usb.c: 953: else if (setup->bRequest == SET_CONFIGURATION) {
  4031  0AD8  085B               	movf	handle_standard_control_request@setup,w
  4032  0AD9  0086               	movwf	6
  4033  0ADA  085C               	movf	handle_standard_control_request@setup+1,w
  4034  0ADB  0087               	movwf	7
  4035  0ADC  3141               	addfsr 1,1
  4036  0ADD  0801               	movf	1,w
  4037  0ADE  3A09               	xorlw	9
  4038  0ADF  1D03               	btfss	3,2
  4039  0AE0  2AF1               	ljmp	i4Li1l4121
  4040  0AE1  2AE3               	ljmp	i4Li1l4113
  4041  0AE2                     i4Lu321_21:	
  4042  0AE2  2AF1               	ljmp	i4Li1l4121
  4043  0AE3                     i4Lu321_20:	
  4044  0AE3                     i4Li1l4113:	
  4045                           
  4046                           ;usb.c: 957: uint8_t req = setup->wValue & 0x00ff;
  4047  0AE3  085B               	movf	handle_standard_control_request@setup,w
  4048  0AE4  0086               	movwf	6
  4049  0AE5  085C               	movf	handle_standard_control_request@setup+1,w
  4050  0AE6  0087               	movwf	7
  4051  0AE7  3142               	addfsr 1,2
  4052  0AE8  0801               	movf	1,w
  4053  0AE9  00C7               	movwf	handle_standard_control_request@req
  4054  0AEA                     i4Li1l4115:	
  4055                           
  4056                           ;usb.c: 966: init_endpoints();
  4057  0AEA  211C  3188         	fcall	i1_init_endpoints
  4058  0AEC                     i4Li1l4117:	
  4059                           
  4060                           ;usb.c: 968: send_zero_length_packet_ep0();
  4061  0AEC  2696  3188         	fcall	_send_zero_length_packet_ep0
  4062  0AEE                     i4Li1l4119:	
  4063                           
  4064                           ;usb.c: 969: g_configuration = req;
  4065  0AEE  0847               	movf	handle_standard_control_request@req,w
  4066  0AEF  00EF               	movwf	_g_configuration
  4067  0AF0  2C81               	ljmp	i4Li1l4221
  4068  0AF1                     i4Li1l4121:	
  4069                           
  4070                           ;usb.c: 974: else if (setup->bRequest == GET_CONFIGURATION) {
  4071  0AF1  085B               	movf	handle_standard_control_request@setup,w
  4072  0AF2  0086               	movwf	6
  4073  0AF3  085C               	movf	handle_standard_control_request@setup+1,w
  4074  0AF4  0087               	movwf	7
  4075  0AF5  3141               	addfsr 1,1
  4076  0AF6  0801               	movf	1,w
  4077  0AF7  3A08               	xorlw	8
  4078  0AF8  1D03               	btfss	3,2
  4079  0AF9  2B0F               	ljmp	i4Li1l4125
  4080  0AFA  2AFC               	ljmp	i4Li1l4123
  4081  0AFB                     i4Lu322_21:	
  4082  0AFB  2B0F               	ljmp	i4Li1l4125
  4083  0AFC                     i4Lu322_20:	
  4084  0AFC                     i4Li1l4123:	
  4085                           
  4086                           ;usb.c: 976: ;
  4087                           ;usb.c: 977: ;
  4088                           ;usb.c: 979: start_control_return(&g_configuration, 1, setup->wLength);
  4089  0AFC  306F               	movlw	low _g_configuration
  4090  0AFD  00B8               	movwf	start_control_return@ptr
  4091  0AFE  3000               	movlw	high _g_configuration
  4092  0AFF  00B9               	movwf	start_control_return@ptr+1
  4093  0B00  01BA               	clrf	start_control_return@len
  4094  0B01  0ABA               	incf	start_control_return@len,f
  4095  0B02  01BB               	clrf	start_control_return@len+1
  4096  0B03  085B               	movf	handle_standard_control_request@setup,w
  4097  0B04  0086               	movwf	6
  4098  0B05  085C               	movf	handle_standard_control_request@setup+1,w
  4099  0B06  0087               	movwf	7
  4100  0B07  3146               	addfsr 1,6
  4101  0B08  3F40               	moviw [0]fsr1
  4102  0B09  00BC               	movwf	start_control_return@bytes_asked_for
  4103  0B0A  3F41               	moviw [1]fsr1
  4104  0B0B  00BD               	movwf	start_control_return@bytes_asked_for+1
  4105  0B0C  25C0  3188         	fcall	_start_control_return
  4106  0B0E  2C81               	ljmp	i4Li1l4221
  4107  0B0F                     i4Li1l4125:	
  4108                           
  4109                           ;usb.c: 981: else if (setup->bRequest == GET_STATUS) {
  4110  0B0F  085B               	movf	handle_standard_control_request@setup,w
  4111  0B10  0086               	movwf	6
  4112  0B11  085C               	movf	handle_standard_control_request@setup+1,w
  4113  0B12  0087               	movwf	7
  4114  0B13  3141               	addfsr 1,1
  4115  0B14  0881               	movf	1,f
  4116  0B15  1D03               	btfss	3,2
  4117  0B16  2B8A               	ljmp	i4Li1l4159
  4118  0B17  2B19               	ljmp	i4Li1l4127
  4119  0B18                     i4Lu323_21:	
  4120  0B18  2B8A               	ljmp	i4Li1l4159
  4121  0B19                     i4Lu323_20:	
  4122  0B19                     i4Li1l4127:	
  4123                           
  4124                           ;usb.c: 983: ;
  4125                           ;usb.c: 984: ;
  4126                           ;usb.c: 985: ;
  4127                           ;usb.c: 987: if (setup->REQUEST.destination == 0 ) {
  4128  0B19  085B               	movf	handle_standard_control_request@setup,w
  4129  0B1A  0086               	movwf	6
  4130  0B1B  085C               	movf	handle_standard_control_request@setup+1,w
  4131  0B1C  0087               	movwf	7
  4132  0B1D  0801               	movf	1,w
  4133  0B1E  391F               	andlw	31
  4134  0B1F  1D03               	btfss	3,2
  4135  0B20  2B38               	ljmp	i4Li1l4133
  4136  0B21  2B23               	ljmp	i4Li1l4129
  4137  0B22                     i4Lu324_21:	
  4138  0B22  2B38               	ljmp	i4Li1l4133
  4139  0B23                     i4Lu324_20:	
  4140  0B23                     i4Li1l4129:	
  4141                           
  4142                           ;usb.c: 990: uint16_t ret;
  4143                           ;usb.c: 994: ret = 0x0000;
  4144  0B23  01CA               	clrf	handle_standard_control_request@ret
  4145  0B24  01CB               	clrf	handle_standard_control_request@ret+1
  4146  0B25                     i4Li1l4131:	
  4147                           
  4148                           ;usb.c: 996: start_control_return(&ret, 2, setup->wLength);
  4149  0B25  304A               	movlw	low handle_standard_control_request@ret
  4150  0B26  00B8               	movwf	start_control_return@ptr
  4151  0B27  3000               	movlw	high handle_standard_control_request@ret
  4152  0B28  00B9               	movwf	start_control_return@ptr+1
  4153  0B29  3002               	movlw	2
  4154  0B2A  00BA               	movwf	start_control_return@len
  4155  0B2B  01BB               	clrf	start_control_return@len+1
  4156  0B2C  085B               	movf	handle_standard_control_request@setup,w
  4157  0B2D  0086               	movwf	6
  4158  0B2E  085C               	movf	handle_standard_control_request@setup+1,w
  4159  0B2F  0087               	movwf	7
  4160  0B30  3146               	addfsr 1,6
  4161  0B31  3F40               	moviw [0]fsr1
  4162  0B32  00BC               	movwf	start_control_return@bytes_asked_for
  4163  0B33  3F41               	moviw [1]fsr1
  4164  0B34  00BD               	movwf	start_control_return@bytes_asked_for+1
  4165  0B35  25C0  3188         	fcall	_start_control_return
  4166  0B37  2C81               	ljmp	i4Li1l4221
  4167  0B38                     i4Li1l4133:	
  4168                           
  4169                           ;usb.c: 998: else if (setup->REQUEST.destination == 2 ) {
  4170  0B38  085B               	movf	handle_standard_control_request@setup,w
  4171  0B39  0086               	movwf	6
  4172  0B3A  085C               	movf	handle_standard_control_request@setup+1,w
  4173  0B3B  0087               	movwf	7
  4174  0B3C  0801               	movf	1,w
  4175  0B3D  391F               	andlw	31
  4176  0B3E  3A02               	xorlw	2
  4177  0B3F  1D03               	btfss	3,2
  4178  0B40  2A6C               	ljmp	i4Li1l4085
  4179  0B41  2B43               	ljmp	i4Li1l4135
  4180  0B42                     i4Lu325_21:	
  4181  0B42  2A6C               	ljmp	i4Li1l4085
  4182  0B43                     i4Lu325_20:	
  4183  0B43                     i4Li1l4135:	
  4184                           
  4185                           ;usb.c: 1000: uint8_t ep_num = setup->wIndex & 0x0f;
  4186  0B43  085B               	movf	handle_standard_control_request@setup,w
  4187  0B44  0086               	movwf	6
  4188  0B45  085C               	movf	handle_standard_control_request@setup+1,w
  4189  0B46  0087               	movwf	7
  4190  0B47  3144               	addfsr 1,4
  4191  0B48  0801               	movf	1,w
  4192  0B49  00D4               	movwf	handle_standard_control_request@ep_num
  4193  0B4A                     i4Li1l4137:	
  4194  0B4A  300F               	movlw	15
  4195  0B4B  05D4               	andwf	handle_standard_control_request@ep_num,f
  4196  0B4C                     i4Li1l4139:	
  4197                           
  4198                           ;usb.c: 1001: if (ep_num <= 2) {
  4199  0B4C  3003               	movlw	3
  4200  0B4D  0254               	subwf	handle_standard_control_request@ep_num,w
  4201  0B4E  1803               	btfsc	3,0
  4202  0B4F  2A6C               	ljmp	i4Li1l4085
  4203  0B50  2B52               	ljmp	i4Li1l4141
  4204  0B51                     i4Lu326_21:	
  4205  0B51  2A6C               	ljmp	i4Li1l4085
  4206  0B52                     i4Lu326_20:	
  4207  0B52                     i4Li1l4141:	
  4208                           
  4209                           ;usb.c: 1002: uint8_t flags = ep_buf[ep_num].flags;
  4210  0B52  3007               	movlw	7
  4211  0B53  00F0               	movwf	i1___bmul@multiplicand
  4212  0B54  0854               	movf	handle_standard_control_request@ep_num,w
  4213  0B55  25B4  3188         	fcall	i1___bmul
  4214  0B57  3EC0               	addlw	(_ep_buf+6)& (0+255)
  4215  0B58  0086               	movwf	6
  4216  0B59  3003               	movlw	3	; select bank7/8
  4217  0B5A  0087               	movwf	7
  4218  0B5B  0801               	movf	1,w
  4219  0B5C  0020               	movlb	0	; select bank0
  4220  0B5D  00D3               	movwf	handle_standard_control_request@flags
  4221  0B5E                     i4Li1l4143:	
  4222                           
  4223                           ;usb.c: 1003: uint8_t ret[2];
  4224                           ;usb.c: 1004: ret[0] = ((setup->wIndex & 0x80) ?
  4225                           ;usb.c: 1005: flags & 0x2 :
  4226                           ;usb.c: 1006: flags & 0x1) != 0;
  4227  0B5E  085B               	movf	handle_standard_control_request@setup,w
  4228  0B5F  0086               	movwf	6
  4229  0B60  085C               	movf	handle_standard_control_request@setup+1,w
  4230  0B61  0087               	movwf	7
  4231  0B62  3144               	addfsr 1,4
  4232  0B63  1B81               	btfsc	1,7
  4233  0B64  2B6C               	ljmp	i4Li1l4147
  4234  0B65  2B67               	ljmp	i4Li1l4145
  4235  0B66                     i4Lu327_21:	
  4236  0B66  2B6C               	ljmp	i4Li1l4147
  4237  0B67                     i4Lu327_20:	
  4238  0B67                     i4Li1l4145:	
  4239  0B67  0853               	movf	handle_standard_control_request@flags,w
  4240  0B68  3901               	andlw	1
  4241  0B69  00C5               	movwf	_handle_standard_control_request$643
  4242  0B6A  01C6               	clrf	_handle_standard_control_request$643+1
  4243  0B6B  2B70               	ljmp	i4Li1l4149
  4244  0B6C                     i4Li1l4147:	
  4245  0B6C  0853               	movf	handle_standard_control_request@flags,w
  4246  0B6D  3902               	andlw	2
  4247  0B6E  00C5               	movwf	_handle_standard_control_request$643
  4248  0B6F  01C6               	clrf	_handle_standard_control_request$643+1
  4249  0B70                     i4Li1l4149:	
  4250  0B70  0846               	movf	_handle_standard_control_request$643+1,w
  4251  0B71  0445               	iorwf	_handle_standard_control_request$643,w
  4252  0B72  3000               	movlw	0
  4253  0B73  1D03               	btfss	3,2
  4254  0B74  3001               	movlw	1
  4255  0B75  00C8               	movwf	handle_standard_control_request@ret_642
  4256  0B76                     i4Li1l4151:	
  4257                           
  4258                           ;usb.c: 1007: ret[1] = 0;
  4259  0B76  01C9               	clrf	handle_standard_control_request@ret_642+1
  4260  0B77                     i4Li1l4153:	
  4261                           
  4262                           ;usb.c: 1008: start_control_return(ret, 2, setup->wLength);
  4263  0B77  3048               	movlw	low handle_standard_control_request@ret_642
  4264  0B78  00B8               	movwf	start_control_return@ptr
  4265  0B79  3000               	movlw	high handle_standard_control_request@ret_642
  4266  0B7A  00B9               	movwf	start_control_return@ptr+1
  4267  0B7B  3002               	movlw	2
  4268  0B7C  00BA               	movwf	start_control_return@len
  4269  0B7D  01BB               	clrf	start_control_return@len+1
  4270  0B7E  085B               	movf	handle_standard_control_request@setup,w
  4271  0B7F  0086               	movwf	6
  4272  0B80  085C               	movf	handle_standard_control_request@setup+1,w
  4273  0B81  0087               	movwf	7
  4274  0B82  3146               	addfsr 1,6
  4275  0B83  3F40               	moviw [0]fsr1
  4276  0B84  00BC               	movwf	start_control_return@bytes_asked_for
  4277  0B85  3F41               	moviw [1]fsr1
  4278  0B86  00BD               	movwf	start_control_return@bytes_asked_for+1
  4279  0B87  25C0  3188         	fcall	_start_control_return
  4280  0B89  2C81               	ljmp	i4Li1l4221
  4281  0B8A                     i4Li1l4159:	
  4282                           
  4283                           ;usb.c: 1022: else if (setup->bRequest == SET_INTERFACE) {
  4284  0B8A  085B               	movf	handle_standard_control_request@setup,w
  4285  0B8B  0086               	movwf	6
  4286  0B8C  085C               	movf	handle_standard_control_request@setup+1,w
  4287  0B8D  0087               	movwf	7
  4288  0B8E  3141               	addfsr 1,1
  4289  0B8F  0801               	movf	1,w
  4290  0B90  3A0B               	xorlw	11
  4291  0B91  1D03               	btfss	3,2
  4292  0B92  2B96               	ljmp	i4Li1l4163
  4293  0B93  2AD5               	ljmp	i4Li1l4109
  4294  0B94                     i4Lu328_21:	
  4295  0B94  2B96               	ljmp	i4Li1l4163
  4296  0B95                     i4Lu328_20:	
  4297  0B95  2AD5               	ljmp	i4Li1l4109
  4298  0B96                     i4Li1l4163:	
  4299                           
  4300                           ;usb.c: 1041: else if (setup->bRequest == GET_INTERFACE) {
  4301  0B96  085B               	movf	handle_standard_control_request@setup,w
  4302  0B97  0086               	movwf	6
  4303  0B98  085C               	movf	handle_standard_control_request@setup+1,w
  4304  0B99  0087               	movwf	7
  4305  0B9A  3141               	addfsr 1,1
  4306  0B9B  0801               	movf	1,w
  4307  0B9C  3A0A               	xorlw	10
  4308  0B9D  1D03               	btfss	3,2
  4309  0B9E  2BB5               	ljmp	i4Li1l4169
  4310  0B9F  2BA1               	ljmp	i4Li1l4165
  4311  0BA0                     i4Lu329_21:	
  4312  0BA0  2BB5               	ljmp	i4Li1l4169
  4313  0BA1                     i4Lu329_20:	
  4314  0BA1                     i4Li1l4165:	
  4315                           
  4316                           ;usb.c: 1042: int8_t ret;
  4317                           ;usb.c: 1043: ;
  4318                           ;usb.c: 1044: ;
  4319                           ;usb.c: 1045: ;
  4320                           ;usb.c: 1046: ;
  4321                           ;usb.c: 1047: ;
  4322                           ;usb.c: 1062: ret = 0;
  4323  0BA1  01CE               	clrf	handle_standard_control_request@ret_644
  4324  0BA2                     i4Li1l4167:	
  4325                           
  4326                           ;usb.c: 1063: start_control_return(&ret, 1, setup->wLength);
  4327  0BA2  304E               	movlw	low handle_standard_control_request@ret_644
  4328  0BA3  00B8               	movwf	start_control_return@ptr
  4329  0BA4  3000               	movlw	high handle_standard_control_request@ret_644
  4330  0BA5  00B9               	movwf	start_control_return@ptr+1
  4331  0BA6  01BA               	clrf	start_control_return@len
  4332  0BA7  0ABA               	incf	start_control_return@len,f
  4333  0BA8  01BB               	clrf	start_control_return@len+1
  4334  0BA9  085B               	movf	handle_standard_control_request@setup,w
  4335  0BAA  0086               	movwf	6
  4336  0BAB  085C               	movf	handle_standard_control_request@setup+1,w
  4337  0BAC  0087               	movwf	7
  4338  0BAD  3146               	addfsr 1,6
  4339  0BAE  3F40               	moviw [0]fsr1
  4340  0BAF  00BC               	movwf	start_control_return@bytes_asked_for
  4341  0BB0  3F41               	moviw [1]fsr1
  4342  0BB1  00BD               	movwf	start_control_return@bytes_asked_for+1
  4343  0BB2  25C0  3188         	fcall	_start_control_return
  4344  0BB4  2C81               	ljmp	i4Li1l4221
  4345  0BB5                     i4Li1l4169:	
  4346                           
  4347                           ;usb.c: 1066: else if (setup->bRequest == CLEAR_FEATURE || setup->bRequest == SET_FEATUR
      +                          E) {
  4348  0BB5  085B               	movf	handle_standard_control_request@setup,w
  4349  0BB6  0086               	movwf	6
  4350  0BB7  085C               	movf	handle_standard_control_request@setup+1,w
  4351  0BB8  0087               	movwf	7
  4352  0BB9  3141               	addfsr 1,1
  4353  0BBA  0301               	decf	1,w
  4354  0BBB  1903               	btfsc	3,2
  4355  0BBC  2BCA               	ljmp	i4Li1l218
  4356  0BBD  2BBF               	ljmp	i4Li1l4171
  4357  0BBE                     i4Lu330_21:	
  4358  0BBE  2BCA               	ljmp	i4Li1l218
  4359  0BBF                     i4Lu330_20:	
  4360  0BBF                     i4Li1l4171:	
  4361  0BBF  085B               	movf	handle_standard_control_request@setup,w
  4362  0BC0  0086               	movwf	6
  4363  0BC1  085C               	movf	handle_standard_control_request@setup+1,w
  4364  0BC2  0087               	movwf	7
  4365  0BC3  3141               	addfsr 1,1
  4366  0BC4  0801               	movf	1,w
  4367  0BC5  3A03               	xorlw	3
  4368  0BC6  1D03               	btfss	3,2
  4369  0BC7  2C7F               	ljmp	i4Li1l216
  4370  0BC8  2BCA               	ljmp	i4Li1l218
  4371  0BC9                     i4Lu331_21:	
  4372  0BC9  2C7F               	ljmp	i4Li1l216
  4373  0BCA                     i4Lu331_20:	
  4374  0BCA                     i4Li1l218:	
  4375                           
  4376                           ;usb.c: 1067: uint8_t stall = 1;
  4377  0BCA  01CD               	clrf	handle_standard_control_request@stall
  4378  0BCB  0ACD               	incf	handle_standard_control_request@stall,f
  4379  0BCC                     i4Li1l4175:	
  4380                           
  4381                           ;usb.c: 1071: }
  4382                           ;usb.c: 1073: if (setup->REQUEST.destination == 2 ) {
  4383  0BCC  085B               	movf	handle_standard_control_request@setup,w
  4384  0BCD  0086               	movwf	6
  4385  0BCE  085C               	movf	handle_standard_control_request@setup+1,w
  4386  0BCF  0087               	movwf	7
  4387  0BD0  0801               	movf	1,w
  4388  0BD1  391F               	andlw	31
  4389  0BD2  3A02               	xorlw	2
  4390  0BD3  1D03               	btfss	3,2
  4391  0BD4  2C79               	ljmp	i4Li1l4215
  4392  0BD5  2BD7               	ljmp	i4Li1l4177
  4393  0BD6                     i4Lu332_21:	
  4394  0BD6  2C79               	ljmp	i4Li1l4215
  4395  0BD7                     i4Lu332_20:	
  4396  0BD7                     i4Li1l4177:	
  4397                           
  4398                           ;usb.c: 1074: if (setup->wValue == 0 ) {
  4399  0BD7  085B               	movf	handle_standard_control_request@setup,w
  4400  0BD8  0086               	movwf	6
  4401  0BD9  085C               	movf	handle_standard_control_request@setup+1,w
  4402  0BDA  0087               	movwf	7
  4403  0BDB  3142               	addfsr 1,2
  4404  0BDC  0016               	moviw fsr1++
  4405  0BDD  0401               	iorwf	1,w
  4406  0BDE  1D03               	btfss	3,2
  4407  0BDF  2C79               	ljmp	i4Li1l4215
  4408  0BE0  2BE2               	ljmp	i4Li1l4179
  4409  0BE1                     i4Lu333_21:	
  4410  0BE1  2C79               	ljmp	i4Li1l4215
  4411  0BE2                     i4Lu333_20:	
  4412  0BE2                     i4Li1l4179:	
  4413                           
  4414                           ;usb.c: 1075: uint8_t ep_num = setup->wIndex & 0x0f;
  4415  0BE2  085B               	movf	handle_standard_control_request@setup,w
  4416  0BE3  0086               	movwf	6
  4417  0BE4  085C               	movf	handle_standard_control_request@setup+1,w
  4418  0BE5  0087               	movwf	7
  4419  0BE6  3144               	addfsr 1,4
  4420  0BE7  0801               	movf	1,w
  4421  0BE8  00DA               	movwf	handle_standard_control_request@ep_num_646
  4422  0BE9                     i4Li1l4181:	
  4423  0BE9  300F               	movlw	15
  4424  0BEA  05DA               	andwf	handle_standard_control_request@ep_num_646,f
  4425  0BEB                     i4Li1l4183:	
  4426                           
  4427                           ;usb.c: 1076: uint8_t ep_dir = setup->wIndex & 0x80;
  4428  0BEB  085B               	movf	handle_standard_control_request@setup,w
  4429  0BEC  0086               	movwf	6
  4430  0BED  085C               	movf	handle_standard_control_request@setup+1,w
  4431  0BEE  0087               	movwf	7
  4432  0BEF  3144               	addfsr 1,4
  4433  0BF0  0801               	movf	1,w
  4434  0BF1  00D5               	movwf	handle_standard_control_request@ep_dir
  4435  0BF2  3080               	movlw	128
  4436  0BF3  05D5               	andwf	handle_standard_control_request@ep_dir,f
  4437  0BF4                     i4Li1l4185:	
  4438                           
  4439                           ;usb.c: 1077: if (ep_num <= 2) {
  4440  0BF4  3003               	movlw	3
  4441  0BF5  025A               	subwf	handle_standard_control_request@ep_num_646,w
  4442  0BF6  1803               	btfsc	3,0
  4443  0BF7  2C79               	ljmp	i4Li1l4215
  4444  0BF8  2BFA               	ljmp	i4Li1l4187
  4445  0BF9                     i4Lu334_21:	
  4446  0BF9  2C79               	ljmp	i4Li1l4215
  4447  0BFA                     i4Lu334_20:	
  4448  0BFA                     i4Li1l4187:	
  4449                           
  4450                           ;usb.c: 1078: if (setup->bRequest == SET_FEATURE) {
  4451  0BFA  085B               	movf	handle_standard_control_request@setup,w
  4452  0BFB  0086               	movwf	6
  4453  0BFC  085C               	movf	handle_standard_control_request@setup+1,w
  4454  0BFD  0087               	movwf	7
  4455  0BFE  3141               	addfsr 1,1
  4456  0BFF  0801               	movf	1,w
  4457  0C00  3A03               	xorlw	3
  4458  0C01  1D03               	btfss	3,2
  4459  0C02  2C11               	ljmp	i4Li1l4195
  4460  0C03  2C05               	ljmp	i4Li1l4189
  4461  0C04                     i4Lu335_21:	
  4462  0C04  2C11               	ljmp	i4Li1l4195
  4463  0C05                     i4Lu335_20:	
  4464  0C05                     i4Li1l4189:	
  4465                           
  4466                           ;usb.c: 1081: if (ep_dir) {
  4467  0C05  0855               	movf	handle_standard_control_request@ep_dir,w
  4468  0C06  1D03               	btfss	3,2
  4469  0C07  2C09               	ljmp	i4Li1l4191
  4470  0C08  2C0D               	ljmp	i4Li1l4193
  4471  0C09                     i4Lu336_20:	
  4472  0C09                     i4Li1l4191:	
  4473                           
  4474                           ;usb.c: 1082: usb_halt_ep_in(ep_num);
  4475  0C09  085A               	movf	handle_standard_control_request@ep_num_646,w
  4476  0C0A  274E  3188         	fcall	_usb_halt_ep_in
  4477  0C0C  2C77               	ljmp	i4Li1l4213
  4478  0C0D                     i4Li1l4193:	
  4479                           
  4480                           ;usb.c: 1084: else {
  4481                           ;usb.c: 1085: usb_halt_ep_out(ep_num);
  4482  0C0D  085A               	movf	handle_standard_control_request@ep_num_646,w
  4483  0C0E  2762  3188         	fcall	_usb_halt_ep_out
  4484  0C10  2C77               	ljmp	i4Li1l4213
  4485  0C11                     i4Li1l4195:	
  4486                           
  4487                           ;usb.c: 1088: else {
  4488                           ;usb.c: 1091: if (ep_dir) {
  4489  0C11  0855               	movf	handle_standard_control_request@ep_dir,w
  4490  0C12  1D03               	btfss	3,2
  4491  0C13  2C15               	ljmp	i4Li1l4197
  4492  0C14  2C46               	ljmp	i4Li1l4205
  4493  0C15                     i4Lu337_20:	
  4494  0C15                     i4Li1l4197:	
  4495  0C15  085A               	movf	handle_standard_control_request@ep_num_646,w
  4496  0C16  0709               	addwf	9,w
  4497  0C17  0709               	addwf	9,w
  4498  0C18  0709               	addwf	9,w
  4499  0C19  3E25               	addlw	37
  4500  0C1A  0086               	movwf	6
  4501  0C1B  3007               	movlw	7
  4502  0C1C  0187               	clrf	7
  4503  0C1D  00F0               	movwf	i1___bmul@multiplicand
  4504  0C1E  085A               	movf	handle_standard_control_request@ep_num_646,w
  4505  0C1F  25B4  3188         	fcall	i1___bmul
  4506  0C21  3EBF               	addlw	(_ep_buf+5)& (0+255)
  4507  0C22  0084               	movwf	4
  4508  0C23  3003               	movlw	3	; select bank7/8
  4509  0C24  0085               	movwf	5
  4510  0C25  0800               	movf	0,w
  4511  0C26  0081               	movwf	1
  4512  0C27                     i4Li1l4199:	
  4513  0C27  0020               	movlb	0	; select bank0
  4514  0C28  085A               	movf	handle_standard_control_request@ep_num_646,w
  4515  0C29  0709               	addwf	9,w
  4516  0C2A  0709               	addwf	9,w
  4517  0C2B  0709               	addwf	9,w
  4518  0C2C  3E24               	addlw	36
  4519  0C2D  0086               	movwf	6
  4520  0C2E  0187               	clrf	7
  4521  0C2F  0181               	clrf	1
  4522  0C30                     i4Li1l4201:	
  4523                           
  4524                           ;usb.c: 1099: ep_buf[ep_num].flags &= ~0x8;
  4525  0C30  3007               	movlw	7
  4526  0C31  00F0               	movwf	i1___bmul@multiplicand
  4527  0C32  085A               	movf	handle_standard_control_request@ep_num_646,w
  4528  0C33  25B4  3188         	fcall	i1___bmul
  4529  0C35  3EC0               	addlw	(_ep_buf+6)& (0+255)
  4530  0C36  0086               	movwf	6
  4531  0C37  3003               	movlw	3	; select bank7/8
  4532  0C38  0087               	movwf	7
  4533  0C39  1181               	bcf	1,3
  4534  0C3A                     i4Li1l4203:	
  4535                           
  4536                           ;usb.c: 1101: ep_buf[ep_num].flags &= ~(0x2);
  4537  0C3A  3007               	movlw	7
  4538  0C3B  00F0               	movwf	i1___bmul@multiplicand
  4539  0C3C  0020               	movlb	0	; select bank0
  4540  0C3D  085A               	movf	handle_standard_control_request@ep_num_646,w
  4541  0C3E  25B4  3188         	fcall	i1___bmul
  4542  0C40  3EC0               	addlw	(_ep_buf+6)& (0+255)
  4543  0C41  0086               	movwf	6
  4544  0C42  3003               	movlw	3	; select bank7/8
  4545  0C43  0087               	movwf	7
  4546  0C44  1081               	bcf	1,1
  4547  0C45  2C77               	ljmp	i4Li1l4213
  4548  0C46                     i4Li1l4205:	
  4549  0C46  085A               	movf	handle_standard_control_request@ep_num_646,w
  4550  0C47  0709               	addwf	9,w
  4551  0C48  0709               	addwf	9,w
  4552  0C49  0709               	addwf	9,w
  4553  0C4A  3E21               	addlw	33
  4554  0C4B  0086               	movwf	6
  4555  0C4C  3007               	movlw	7
  4556  0C4D  0187               	clrf	7
  4557  0C4E  00F0               	movwf	i1___bmul@multiplicand
  4558  0C4F  085A               	movf	handle_standard_control_request@ep_num_646,w
  4559  0C50  25B4  3188         	fcall	i1___bmul
  4560  0C52  3EBE               	addlw	(_ep_buf+4)& (0+255)
  4561  0C53  0084               	movwf	4
  4562  0C54  3003               	movlw	3	; select bank7/8
  4563  0C55  0085               	movwf	5
  4564  0C56  0800               	movf	0,w
  4565  0C57  0081               	movwf	1
  4566  0C58                     i4Li1l4207:	
  4567  0C58  0020               	movlb	0	; select bank0
  4568  0C59  085A               	movf	handle_standard_control_request@ep_num_646,w
  4569  0C5A  0709               	addwf	9,w
  4570  0C5B  0709               	addwf	9,w
  4571  0C5C  0709               	addwf	9,w
  4572  0C5D  3E20               	addlw	32
  4573  0C5E  0086               	movwf	6
  4574  0C5F  3088               	movlw	136
  4575  0C60  0187               	clrf	7
  4576  0C61  0081               	movwf	1
  4577  0C62                     i4Li1l4209:	
  4578                           
  4579                           ;usb.c: 1116: ep_buf[ep_num].flags |= 0x4;
  4580  0C62  3007               	movlw	7
  4581  0C63  00F0               	movwf	i1___bmul@multiplicand
  4582  0C64  085A               	movf	handle_standard_control_request@ep_num_646,w
  4583  0C65  25B4  3188         	fcall	i1___bmul
  4584  0C67  3EC0               	addlw	(_ep_buf+6)& (0+255)
  4585  0C68  0086               	movwf	6
  4586  0C69  3003               	movlw	3	; select bank7/8
  4587  0C6A  0087               	movwf	7
  4588  0C6B  1501               	bsf	1,2
  4589  0C6C                     i4Li1l4211:	
  4590                           
  4591                           ;usb.c: 1118: ep_buf[ep_num].flags &= ~(0x1);
  4592  0C6C  3007               	movlw	7
  4593  0C6D  00F0               	movwf	i1___bmul@multiplicand
  4594  0C6E  0020               	movlb	0	; select bank0
  4595  0C6F  085A               	movf	handle_standard_control_request@ep_num_646,w
  4596  0C70  25B4  3188         	fcall	i1___bmul
  4597  0C72  3EC0               	addlw	(_ep_buf+6)& (0+255)
  4598  0C73  0086               	movwf	6
  4599  0C74  3003               	movlw	3	; select bank7/8
  4600  0C75  0087               	movwf	7
  4601  0C76  1001               	bcf	1,0
  4602  0C77                     i4Li1l4213:	
  4603                           
  4604                           ;usb.c: 1119: }
  4605                           ;usb.c: 1120: }
  4606                           ;usb.c: 1124: stall = 0;
  4607  0C77  0020               	movlb	0	; select bank0
  4608  0C78  01CD               	clrf	handle_standard_control_request@stall
  4609  0C79                     i4Li1l4215:	
  4610                           
  4611                           ;usb.c: 1125: }
  4612                           ;usb.c: 1126: }
  4613                           ;usb.c: 1127: }
  4614                           ;usb.c: 1129: if (!stall) {
  4615  0C79  08CD               	movf	handle_standard_control_request@stall,f
  4616  0C7A  1D03               	btfss	3,2
  4617  0C7B  2A6C               	ljmp	i4Li1l4085
  4618  0C7C  2AD5               	ljmp	i4Li1l4109
  4619  0C7D                     i4Lu338_21:	
  4620  0C7D  2A6C               	ljmp	i4Li1l4085
  4621  0C7E                     i4Lu338_20:	
  4622  0C7E  2AD5               	ljmp	i4Li1l4109
  4623  0C7F                     i4Li1l216:	
  4624                           
  4625                           ;usb.c: 1135: else {
  4626                           ;usb.c: 1136: res = -1;
  4627  0C7F  01CC               	clrf	handle_standard_control_request@res
  4628  0C80  03CC               	decf	handle_standard_control_request@res,f
  4629  0C81                     i4Li1l4221:	
  4630                           
  4631                           ;usb.c: 1143: }
  4632                           ;usb.c: 1145: return res;
  4633  0C81  0020               	movlb	0	; select bank0
  4634  0C82  084C               	movf	handle_standard_control_request@res,w
  4635  0C83                     i4Li1l236:	
  4636  0C83  00DD               	movwf	handle_ep0_setup@res
  4637  0C84                     i1Li1l4395:	
  4638                           
  4639                           ;usb.c: 1206: if (res < 0)
  4640  0C84  1FDD               	btfss	handle_ep0_setup@res,7
  4641  0C85  2C8A               	ljmp	i1Li1l4401
  4642  0C86  2C88               	ljmp	i1Li1l4399
  4643  0C87                     i1Lu357_21:	
  4644  0C87  2C8A               	ljmp	i1Li1l4401
  4645  0C88                     i1Lu357_20:	
  4646  0C88                     i1Li1l4399:	
  4647                           
  4648                           ;usb.c: 1251: stall_ep0();
  4649  0C88  2629  3188         	fcall	_stall_ep0
  4650  0C8A                     i1Li1l4401:	
  4651                           
  4652                           ;usb.c: 1259: UCONbits.PKTDIS = 0;
  4653  0C8A  003D               	movlb	29	; select bank29
  4654  0C8B  120E               	bcf	14,4	;volatile
  4655  0C8C                     i1Li1l249:	
  4656                           
  4657                           ;usb.c: 1416: }
  4658  0C8C  2CE6               	goto	i1l291
  4659  0C8D                     i1l4937:	
  4660                           
  4661                           ;usb.c: 1417: else if (pid == PID_IN) {
  4662  0C8D  0868               	movf	usb_service@pid,w
  4663  0C8E  3A09               	xorlw	9
  4664  0C8F  1903               	btfsc	3,2
  4665  0C90  2CE6               	goto	i1l291
  4666                           
  4667                           ;usb.c: 1421: else if (pid == PID_OUT) {
  4668  0C91  0B68               	decfsz	usb_service@pid,w
  4669  0C92  2CE4               	goto	i1l4945
  4670                           
  4671                           ;psect for function _handle_ep0_out
  4672                           
  4673                           ;usb.c: 1422: handle_ep0_out();
  4674  0C93                     i2L_handle_ep0_out:	
  4675  0C93                     i2Li1l4403:	
  4676                           
  4677                           ;usb.c: 1267: uint8_t pkt_len = (bds[0].BDnCNT);
  4678  0C93  0821               	movf	33,w
  4679  0C94  00BA               	movwf	handle_ep0_out@pkt_len
  4680                           
  4681                           ;usb.c: 1269: if (ep0_data_stage_direc == 1 ) {
  4682  0C95  0B6D               	decfsz	_ep0_data_stage_direc,w
  4683  0C96  2C9C               	ljmp	i2Li1l4409
  4684  0C97  2C99               	ljmp	i2Li1l4407
  4685  0C98                     i2Lu358_21:	
  4686  0C98  2C9C               	ljmp	i2Li1l4409
  4687  0C99                     i2Lu358_20:	
  4688  0C99                     i2Li1l4407:	
  4689                           
  4690                           ;usb.c: 1277: reset_ep0_data_stage();
  4691  0C99  268C  3188         	fcall	i1_reset_ep0_data_stage
  4692  0C9B  2CE3               	ljmp	iL28
  4693  0C9C                     i2Li1l4409:	
  4694                           
  4695                           ;usb.c: 1279: else {
  4696                           ;usb.c: 1287: if (ep0_data_stage_out_buffer) {
  4697  0C9C  086E               	movf	_ep0_data_stage_out_buffer,w
  4698  0C9D  1D03               	btfss	3,2
  4699  0C9E  2CA0               	ljmp	i2Li1l4411
  4700  0C9F  2CE3               	ljmp	iL28
  4701  0CA0                     i2Lu359_20:	
  4702  0CA0                     i2Li1l4411:	
  4703                           
  4704                           ;usb.c: 1288: uint8_t bytes_to_copy = (((pkt_len)<(ep0_data_stage_buf_remaining))?(pkt_l
      +                          en):(ep0_data_stage_buf_remaining));
  4705  0CA0  083A               	movf	handle_ep0_out@pkt_len,w
  4706  0CA1  00FB               	movwf	??_handle_ep0_out
  4707  0CA2  01FC               	clrf	??_handle_ep0_out+1
  4708  0CA3  086A               	movf	_ep0_data_stage_buf_remaining+1,w
  4709  0CA4  027C               	subwf	??_handle_ep0_out+1,w
  4710  0CA5  1D03               	btfss	3,2
  4711  0CA6  2CA9               	ljmp	i2Lu360_25
  4712  0CA7  0869               	movf	_ep0_data_stage_buf_remaining,w
  4713  0CA8  027B               	subwf	??_handle_ep0_out,w
  4714  0CA9                     i2Lu360_25:	
  4715  0CA9  1C03               	btfss	3,0
  4716  0CAA  2CB2               	ljmp	i2Li1l4415
  4717  0CAB  2CAD               	ljmp	i2Li1l4413
  4718  0CAC                     i2Lu360_21:	
  4719  0CAC  2CB2               	ljmp	i2Li1l4415
  4720  0CAD                     i2Lu360_20:	
  4721  0CAD                     i2Li1l4413:	
  4722  0CAD  086A               	movf	_ep0_data_stage_buf_remaining+1,w
  4723  0CAE  00B9               	movwf	_handle_ep0_out$676+1
  4724  0CAF  0869               	movf	_ep0_data_stage_buf_remaining,w
  4725  0CB0  00B8               	movwf	_handle_ep0_out$676
  4726  0CB1  2CB5               	ljmp	i2Li1l259
  4727  0CB2                     i2Li1l4415:	
  4728  0CB2  083A               	movf	handle_ep0_out@pkt_len,w
  4729  0CB3  00B8               	movwf	_handle_ep0_out$676
  4730  0CB4  01B9               	clrf	_handle_ep0_out$676+1
  4731  0CB5                     i2Li1l259:	
  4732  0CB5  0838               	movf	_handle_ep0_out$676,w
  4733  0CB6  00BB               	movwf	handle_ep0_out@bytes_to_copy
  4734  0CB7                     i2Li1l4417:	
  4735                           
  4736                           ;usb.c: 1295: memcpy(ep0_data_stage_out_buffer, ep0_buf.out, bytes_to_copy);
  4737  0CB7  086E               	movf	_ep0_data_stage_out_buffer,w
  4738  0CB8  00F0               	movwf	i1memcpy@d1
  4739  0CB9  01F1               	clrf	i1memcpy@d1+1
  4740  0CBA  0025               	movlb	5	; select bank5
  4741  0CBB  0869               	movf	(_ep0_buf+1)^(0+640),w
  4742  0CBC  00F3               	movwf	i1memcpy@s1+1
  4743  0CBD  0868               	movf	_ep0_buf^(0+640),w
  4744  0CBE  00F2               	movwf	i1memcpy@s1
  4745  0CBF  0020               	movlb	0	; select bank0
  4746  0CC0  083B               	movf	handle_ep0_out@bytes_to_copy,w
  4747  0CC1  00F4               	movwf	i1memcpy@n
  4748  0CC2  01F5               	clrf	i1memcpy@n+1
  4749  0CC3  2668  3188         	fcall	i1_memcpy
  4750  0CC5                     i2Li1l4419:	
  4751                           
  4752                           ;usb.c: 1297: ep0_data_stage_out_buffer += bytes_to_copy;
  4753  0CC5  0020               	movlb	0	; select bank0
  4754  0CC6  083B               	movf	handle_ep0_out@bytes_to_copy,w
  4755  0CC7  07EE               	addwf	_ep0_data_stage_out_buffer,f
  4756  0CC8                     i2Li1l4421:	
  4757                           
  4758                           ;usb.c: 1298: ep0_data_stage_buf_remaining -= bytes_to_copy;
  4759  0CC8  083B               	movf	handle_ep0_out@bytes_to_copy,w
  4760  0CC9  02E9               	subwf	_ep0_data_stage_buf_remaining,f
  4761  0CCA  1C03               	btfss	3,0
  4762  0CCB  03EA               	decf	_ep0_data_stage_buf_remaining+1,f
  4763                           
  4764                           ;usb.c: 1303: if (pkt_len < 8 || ep0_data_stage_buf_remaining == 0) {
  4765  0CCC  3008               	movlw	8
  4766  0CCD  023A               	subwf	handle_ep0_out@pkt_len,w
  4767  0CCE  1C03               	btfss	3,0
  4768  0CCF  2CD8               	ljmp	i2Li1l4427
  4769  0CD0  2CD2               	ljmp	i2Li1l4425
  4770  0CD1                     i2Lu361_21:	
  4771  0CD1  2CD8               	ljmp	i2Li1l4427
  4772  0CD2                     i2Lu361_20:	
  4773  0CD2                     i2Li1l4425:	
  4774  0CD2  086A               	movf	_ep0_data_stage_buf_remaining+1,w
  4775  0CD3  0469               	iorwf	_ep0_data_stage_buf_remaining,w
  4776  0CD4  1D03               	btfss	3,2
  4777  0CD5  2CE3               	ljmp	iL28
  4778  0CD6  2CD8               	ljmp	i2Li1l4427
  4779  0CD7                     i2Lu362_21:	
  4780  0CD7  2CE3               	ljmp	iL28
  4781  0CD8                     i2Lu362_20:	
  4782  0CD8                     i2Li1l4427:	
  4783                           
  4784                           ;usb.c: 1308: if (bytes_to_copy < pkt_len) {
  4785  0CD8  083A               	movf	handle_ep0_out@pkt_len,w
  4786  0CD9  023B               	subwf	handle_ep0_out@bytes_to_copy,w
  4787  0CDA  1803               	btfsc	3,0
  4788  0CDB  2CE1               	ljmp	i2Li1l4435
  4789  0CDC  2CDE               	ljmp	i2Li1l4429
  4790  0CDD                     i2Lu363_21:	
  4791  0CDD  2CE1               	ljmp	i2Li1l4435
  4792  0CDE                     i2Lu363_20:	
  4793  0CDE                     i2Li1l4429:	
  4794                           
  4795                           ;usb.c: 1310: stall_ep0();
  4796  0CDE  2629  3188         	fcall	_stall_ep0
  4797  0CE0  2C99               	ljmp	i2Li1l4407
  4798  0CE1                     i2Li1l4435:	
  4799                           
  4800                           ;usb.c: 1315: else {
  4801                           ;usb.c: 1317: send_zero_length_packet_ep0();
  4802  0CE1  2696  3188         	fcall	_send_zero_length_packet_ep0
  4803  0CE3                     i2Li1l266:	
  4804  0CE3                     iL28:	
  4805                           
  4806                           ;usb.c: 1423: }
  4807  0CE3  2CE6               	goto	i1l291
  4808  0CE4                     i1l4945:	
  4809                           
  4810                           ;usb.c: 1424: else {
  4811                           ;usb.c: 1426: ;
  4812                           ;usb.c: 1427: stall_ep0();
  4813  0CE4  2629  3188         	fcall	_stall_ep0
  4814  0CE6                     i1l291:	
  4815                           
  4816                           ;usb.c: 1428: }
  4817                           ;usb.c: 1430: reset_bd0_out();
  4818  0CE6  2780  3188         	fcall	_reset_bd0_out
  4819                           
  4820                           ;usb.c: 1431: }
  4821  0CE8  2DAC               	goto	i1l296
  4822  0CE9                     i1l4947:	
  4823                           
  4824                           ;usb.c: 1432: else if (USTATbits.ENDP == 0 && USTATbits.DIR == 1 ) {
  4825  0CE9  003D               	movlb	29	; select bank29
  4826  0CEA  0C0F               	rrf	15,w	;volatile
  4827  0CEB  0020               	movlb	0	; select bank0
  4828  0CEC  00E0               	movwf	??_usb_service
  4829  0CED  0CE0               	rrf	??_usb_service,f
  4830  0CEE  0C60               	rrf	??_usb_service,w
  4831  0CEF  390F               	andlw	15
  4832  0CF0  1D03               	skipz
  4833  0CF1  2D62               	goto	i1l4953
  4834  0CF2  003D               	movlb	29	; select bank29
  4835  0CF3  1D0F               	btfss	15,2	;volatile
  4836  0CF4  2D62               	goto	i1l4953
  4837                           
  4838                           ;psect for function _handle_ep0_in
  4839                           
  4840                           ;usb.c: 1437: handle_ep0_in();
  4841  0CF5                     i3L_handle_ep0_in:	
  4842  0CF5                     i3Li1l4437:	
  4843                           
  4844                           ;usb.c: 1326: if (addr_pending) {
  4845  0CF5  0026               	movlb	6	; select bank6
  4846  0CF6  086B               	movf	_addr_pending^(0+768),w
  4847  0CF7  1D03               	btfss	3,2
  4848  0CF8  2CFA               	ljmp	i3Li1l4439
  4849  0CF9  2CFF               	ljmp	i3Li1l4443
  4850  0CFA                     i3Lu364_20:	
  4851  0CFA                     i3Li1l4439:	
  4852                           
  4853                           ;usb.c: 1327: UADDR = addr;
  4854  0CFA  086A               	movf	_addr^(0+768),w
  4855  0CFB  003D               	movlb	29	; select bank29
  4856  0CFC  0096               	movwf	22	;volatile
  4857  0CFD                     i3Li1l4441:	
  4858                           
  4859                           ;usb.c: 1328: addr_pending = 0;
  4860  0CFD  0026               	movlb	6	; select bank6
  4861  0CFE  01EB               	clrf	_addr_pending^(0+768)
  4862  0CFF                     i3Li1l4443:	
  4863                           
  4864                           ;usb.c: 1329: }
  4865                           ;usb.c: 1331: if (ep0_data_stage_buf_remaining) {
  4866  0CFF  0020               	movlb	0	; select bank0
  4867  0D00  086A               	movf	_ep0_data_stage_buf_remaining+1,w
  4868  0D01  0469               	iorwf	_ep0_data_stage_buf_remaining,w
  4869  0D02  1903               	btfsc	3,2
  4870  0D03  2D4C               	ljmp	i3Li1l4467
  4871  0D04  2D06               	ljmp	i3Li1l4445
  4872  0D05                     i3Lu365_21:	
  4873  0D05  2D4C               	ljmp	i3Li1l4467
  4874  0D06                     i3Lu365_20:	
  4875  0D06                     i3Li1l4445:	
  4876                           
  4877                           ;usb.c: 1333: uint8_t bytes_to_send = (((ep0_data_stage_buf_remaining)<(8))?(ep0_data_st
      +                          age_buf_remaining):(8));
  4878  0D06  3000               	movlw	0
  4879  0D07  026A               	subwf	_ep0_data_stage_buf_remaining+1,w
  4880  0D08  3008               	movlw	8
  4881  0D09  1903               	btfsc	3,2
  4882  0D0A  0269               	subwf	_ep0_data_stage_buf_remaining,w
  4883  0D0B  1C03               	btfss	3,0
  4884  0D0C  2D13               	ljmp	i3Li1l4449
  4885  0D0D  2D0F               	ljmp	i3Li1l4447
  4886  0D0E                     i3Lu366_21:	
  4887  0D0E  2D13               	ljmp	i3Li1l4449
  4888  0D0F                     i3Lu366_20:	
  4889  0D0F                     i3Li1l4447:	
  4890  0D0F  3008               	movlw	8
  4891  0D10  00FB               	movwf	_handle_ep0_in$680
  4892  0D11  01FC               	clrf	_handle_ep0_in$680+1
  4893  0D12  2D17               	ljmp	i3Li1l274
  4894  0D13                     i3Li1l4449:	
  4895  0D13  086A               	movf	_ep0_data_stage_buf_remaining+1,w
  4896  0D14  00FC               	movwf	_handle_ep0_in$680+1
  4897  0D15  0869               	movf	_ep0_data_stage_buf_remaining,w
  4898  0D16  00FB               	movwf	_handle_ep0_in$680
  4899  0D17                     i3Li1l274:	
  4900  0D17  087B               	movf	_handle_ep0_in$680,w
  4901  0D18  00FD               	movwf	handle_ep0_in@bytes_to_send
  4902  0D19                     i3Li1l4451:	
  4903                           
  4904                           ;usb.c: 1335: memcpy(ep0_buf.in,ep0_data_stage_in_buffer,bytes_to_send);;
  4905  0D19  0025               	movlb	5	; select bank5
  4906  0D1A  086B               	movf	(_ep0_buf+3)^(0+640),w
  4907  0D1B  00F1               	movwf	i1memcpy@d1+1
  4908  0D1C  086A               	movf	(_ep0_buf+2)^(0+640),w
  4909  0D1D  00F0               	movwf	i1memcpy@d1
  4910  0D1E  0027               	movlb	7	; select bank7
  4911  0D1F  0839               	movf	(_ep0_data_stage_in_buffer+1)^(0+896),w
  4912  0D20  00F3               	movwf	i1memcpy@s1+1
  4913  0D21  0838               	movf	_ep0_data_stage_in_buffer^(0+896),w
  4914  0D22  00F2               	movwf	i1memcpy@s1
  4915  0D23  087D               	movf	handle_ep0_in@bytes_to_send,w
  4916  0D24  00F4               	movwf	i1memcpy@n
  4917  0D25  01F5               	clrf	i1memcpy@n+1
  4918  0D26  2668  3188         	fcall	i1_memcpy
  4919  0D28                     i3Li1l4453:	
  4920                           
  4921                           ;usb.c: 1336: ep0_data_stage_buf_remaining -= bytes_to_send;
  4922  0D28  087D               	movf	handle_ep0_in@bytes_to_send,w
  4923  0D29  0020               	movlb	0	; select bank0
  4924  0D2A  02E9               	subwf	_ep0_data_stage_buf_remaining,f
  4925  0D2B  1C03               	btfss	3,0
  4926  0D2C  03EA               	decf	_ep0_data_stage_buf_remaining+1,f
  4927                           
  4928                           ;usb.c: 1337: ep0_data_stage_in_buffer += bytes_to_send;
  4929  0D2D  087D               	movf	handle_ep0_in@bytes_to_send,w
  4930  0D2E  0027               	movlb	7	; select bank7
  4931  0D2F  07B8               	addwf	_ep0_data_stage_in_buffer^(0+896),f
  4932  0D30  1803               	btfsc	3,0
  4933  0D31  0AB9               	incf	(_ep0_data_stage_in_buffer+1)^(0+896),f
  4934                           
  4935                           ;usb.c: 1342: if (ep0_data_stage_buf_remaining == 0 &&
  4936                           ;usb.c: 1343: bytes_to_send == 8 &&
  4937                           ;usb.c: 1344: returning_short)
  4938  0D32  0020               	movlb	0	; select bank0
  4939  0D33  086A               	movf	_ep0_data_stage_buf_remaining+1,w
  4940  0D34  0469               	iorwf	_ep0_data_stage_buf_remaining,w
  4941  0D35  1D03               	btfss	3,2
  4942  0D36  2D46               	ljmp	i3Li1l4465
  4943  0D37  2D39               	ljmp	i3Li1l4459
  4944  0D38                     i3Lu367_21:	
  4945  0D38  2D46               	ljmp	i3Li1l4465
  4946  0D39                     i3Lu367_20:	
  4947  0D39                     i3Li1l4459:	
  4948  0D39  087D               	movf	handle_ep0_in@bytes_to_send,w
  4949  0D3A  3A08               	xorlw	8
  4950  0D3B  1D03               	btfss	3,2
  4951  0D3C  2D46               	ljmp	i3Li1l4465
  4952  0D3D  2D3F               	ljmp	i3Li1l4461
  4953  0D3E                     i3Lu368_21:	
  4954  0D3E  2D46               	ljmp	i3Li1l4465
  4955  0D3F                     i3Lu368_20:	
  4956  0D3F                     i3Li1l4461:	
  4957  0D3F  0026               	movlb	6	; select bank6
  4958  0D40  086D               	movf	_returning_short^(0+768),w
  4959  0D41  1D03               	btfss	3,2
  4960  0D42  2D44               	ljmp	i3Li1l4463
  4961  0D43  2D46               	ljmp	i3Li1l4465
  4962  0D44                     i3Lu369_20:	
  4963  0D44                     i3Li1l4463:	
  4964                           
  4965                           ;usb.c: 1345: control_need_zlp = 1;
  4966  0D44  01EC               	clrf	_control_need_zlp^(0+768)
  4967  0D45  0AEC               	incf	_control_need_zlp^(0+768),f
  4968  0D46                     i3Li1l4465:	
  4969                           
  4970                           ;usb.c: 1347: usb_send_in_buffer_0(bytes_to_send);
  4971  0D46  087D               	movf	handle_ep0_in@bytes_to_send,w
  4972  0D47  00F4               	movwf	usb_send_in_buffer_0@len
  4973  0D48  01F5               	clrf	usb_send_in_buffer_0@len+1
  4974  0D49  269C  3188         	fcall	_usb_send_in_buffer_0
  4975  0D4B  2D61               	ljmp	iL60
  4976  0D4C                     i3Li1l4467:	
  4977                           
  4978                           ;usb.c: 1349: else if (control_need_zlp) {
  4979  0D4C  0026               	movlb	6	; select bank6
  4980  0D4D  086C               	movf	_control_need_zlp^(0+768),w
  4981  0D4E  1D03               	btfss	3,2
  4982  0D4F  2D51               	ljmp	i3Li1l4469
  4983  0D50  2D5A               	ljmp	i3Li1l4475
  4984  0D51                     i3Lu370_20:	
  4985  0D51                     i3Li1l4469:	
  4986                           
  4987                           ;usb.c: 1350: usb_send_in_buffer_0(0);
  4988  0D51  01F4               	clrf	usb_send_in_buffer_0@len
  4989  0D52  01F5               	clrf	usb_send_in_buffer_0@len+1
  4990  0D53  269C  3188         	fcall	_usb_send_in_buffer_0
  4991  0D55                     i3Li1l4471:	
  4992                           
  4993                           ;usb.c: 1351: control_need_zlp = 0;
  4994  0D55  0026               	movlb	6	; select bank6
  4995  0D56  01EC               	clrf	_control_need_zlp^(0+768)
  4996  0D57                     i3Li1l4473:	
  4997                           
  4998                           ;usb.c: 1352: reset_ep0_data_stage();
  4999  0D57  268C  3188         	fcall	i1_reset_ep0_data_stage
  5000  0D59  2D61               	ljmp	iL60
  5001  0D5A                     i3Li1l4475:	
  5002                           
  5003                           ;usb.c: 1354: else {
  5004                           ;usb.c: 1355: if (ep0_data_stage_direc == 0 ) {
  5005  0D5A  0020               	movlb	0	; select bank0
  5006  0D5B  08ED               	movf	_ep0_data_stage_direc,f
  5007  0D5C  1D03               	btfss	3,2
  5008  0D5D  2D61               	ljmp	iL60
  5009  0D5E  2D57               	ljmp	i3Li1l4473
  5010  0D5F                     i3Lu371_21:	
  5011  0D5F  2D61               	ljmp	iL60
  5012  0D60                     i3Lu371_20:	
  5013  0D60  2D57               	ljmp	i3Li1l4473
  5014  0D61                     i3Li1l281:	
  5015  0D61                     iL60:	
  5016                           
  5017                           ;usb.c: 1438: }
  5018  0D61  2DAC               	goto	i1l296
  5019  0D62                     i1l4953:	
  5020                           
  5021                           ;usb.c: 1439: else if (USTATbits.ENDP > 0 && USTATbits.ENDP <= 2) {
  5022  0D62  003D               	movlb	29	; select bank29
  5023  0D63  0C0F               	rrf	15,w	;volatile
  5024  0D64  0020               	movlb	0	; select bank0
  5025  0D65  00E0               	movwf	??_usb_service
  5026  0D66  0CE0               	rrf	??_usb_service,f
  5027  0D67  0C60               	rrf	??_usb_service,w
  5028  0D68  390F               	andlw	15
  5029  0D69  1903               	skipnz
  5030  0D6A  2DAC               	goto	i1l296
  5031  0D6B  003D               	movlb	29	; select bank29
  5032  0D6C  0C0F               	rrf	15,w	;volatile
  5033  0D6D  0020               	movlb	0	; select bank0
  5034  0D6E  00E0               	movwf	??_usb_service
  5035  0D6F  0CE0               	rrf	??_usb_service,f
  5036  0D70  0C60               	rrf	??_usb_service,w
  5037  0D71  390F               	andlw	15
  5038  0D72  00E1               	movwf	??_usb_service+1
  5039  0D73  3003               	movlw	3
  5040  0D74  0261               	subwf	??_usb_service+1,w
  5041  0D75  1803               	skipnc
  5042  0D76  2DAC               	goto	i1l296
  5043                           
  5044                           ;usb.c: 1440: if (USTATbits.DIR == 1 ) {
  5045  0D77  003D               	movlb	29	; select bank29
  5046  0D78  1D0F               	btfss	15,2	;volatile
  5047  0D79  2D94               	goto	i1l4963
  5048                           
  5049                           ;usb.c: 1442: ;
  5050                           ;usb.c: 1443: if (ep_buf[USTATbits.ENDP].flags & 0x2)
  5051  0D7A  3007               	movlw	7
  5052  0D7B  00F0               	movwf	i1___bmul@multiplicand
  5053  0D7C  0C0F               	rrf	15,w	;volatile
  5054  0D7D  0020               	movlb	0	; select bank0
  5055  0D7E  00E0               	movwf	??_usb_service
  5056  0D7F  0CE0               	rrf	??_usb_service,f
  5057  0D80  0C60               	rrf	??_usb_service,w
  5058  0D81  390F               	andlw	15
  5059  0D82  25B4  3188         	fcall	i1___bmul
  5060  0D84  3EC0               	addlw	(_ep_buf+6)& (0+255)
  5061  0D85  0086               	movwf	6
  5062  0D86  3003               	movlw	3	; select bank7/8
  5063  0D87  0087               	movwf	7
  5064  0D88  1C81               	btfss	1,1
  5065  0D89  2DAC               	goto	i1l296
  5066                           
  5067                           ;usb.c: 1444: stall_ep_in(USTATbits.ENDP);
  5068  0D8A  003D               	movlb	29	; select bank29
  5069  0D8B  0C0F               	rrf	15,w	;volatile
  5070  0D8C  0020               	movlb	0	; select bank0
  5071  0D8D  00E0               	movwf	??_usb_service
  5072  0D8E  0CE0               	rrf	??_usb_service,f
  5073  0D8F  0C60               	rrf	??_usb_service,w
  5074  0D90  390F               	andlw	15
  5075  0D91  273B  3188         	fcall	_stall_ep_in
  5076  0D93  2DAC               	goto	i1l296
  5077  0D94                     i1l4963:	
  5078                           
  5079                           ;usb.c: 1451: else {
  5080                           ;usb.c: 1453: ;
  5081                           ;usb.c: 1454: if (ep_buf[USTATbits.ENDP].flags & 0x1)
  5082  0D94  3007               	movlw	7
  5083  0D95  00F0               	movwf	i1___bmul@multiplicand
  5084  0D96  0C0F               	rrf	15,w	;volatile
  5085  0D97  0020               	movlb	0	; select bank0
  5086  0D98  00E0               	movwf	??_usb_service
  5087  0D99  0CE0               	rrf	??_usb_service,f
  5088  0D9A  0C60               	rrf	??_usb_service,w
  5089  0D9B  390F               	andlw	15
  5090  0D9C  25B4  3188         	fcall	i1___bmul
  5091  0D9E  3EC0               	addlw	(_ep_buf+6)& (0+255)
  5092  0D9F  0086               	movwf	6
  5093  0DA0  3003               	movlw	3	; select bank7/8
  5094  0DA1  0087               	movwf	7
  5095  0DA2  1C01               	btfss	1,0
  5096  0DA3  2DAC               	goto	i1l296
  5097                           
  5098                           ;usb.c: 1455: stall_ep_out(USTATbits.ENDP);
  5099  0DA4  003D               	movlb	29	; select bank29
  5100  0DA5  0C0F               	rrf	15,w	;volatile
  5101  0DA6  0020               	movlb	0	; select bank0
  5102  0DA7  00E0               	movwf	??_usb_service
  5103  0DA8  0CE0               	rrf	??_usb_service,f
  5104  0DA9  0C60               	rrf	??_usb_service,w
  5105  0DAA  390F               	andlw	15
  5106  0DAB  2776               	fcall	_stall_ep_out
  5107  0DAC                     i1l296:	
  5108                           ;usb.c: 1463: else {
  5109                           ;usb.c: 1466: ;
  5110                           
  5111                           
  5112                           ;usb.c: 1467: }
  5113                           ;usb.c: 1469: UIRbits.TRNIF = 0;
  5114  0DAC  003D               	movlb	29	; select bank29
  5115  0DAD  1190               	bcf	16,3	;volatile
  5116  0DAE                     i1l288:	
  5117                           
  5118                           ;usb.c: 1470: }
  5119                           ;usb.c: 1473: if (UIRbits.SOFIF) {
  5120  0DAE  1B10               	btfsc	16,6	;volatile
  5121                           
  5122                           ;usb.c: 1477: UIRbits.SOFIF = 0;
  5123  0DAF  1310               	bcf	16,6	;volatile
  5124                           
  5125                           ;usb.c: 1478: }
  5126                           ;usb.c: 1481: if (PIR2bits.USBIF) {
  5127  0DB0  0020               	movlb	0	; select bank0
  5128  0DB1  1912               	btfsc	18,2	;volatile
  5129                           
  5130                           ;usb.c: 1482: PIR2bits.USBIF = 0;
  5131  0DB2  1112               	bcf	18,2	;volatile
  5132  0DB3  0008               	return
  5133  0DB4                     __end_of_usb_service:	
  5134  0DB4                     __ptext73:	
  5135 ;; *************** function i1___bmul *****************
  5136 ;; Defined at:
  5137 ;;		line 4 in file "/Applications/microchip/xc8/v1.33old/sources/common/Umul8.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;  multiplier      1    wreg     unsigned char 
  5140 ;;  multiplicand    1    0[COMMON] unsigned char 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  multiplier      1    1[COMMON] unsigned char 
  5143 ;;  __bmul          1    2[COMMON] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      unsigned char 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, status,0
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5153 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5156 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5157 ;;Total ram usage:        3 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_stall_ep_in
  5163 ;;		_handle_standard_control_request
  5164 ;;		_usb_service
  5165 ;;		_usb_halt_ep_in
  5166 ;;		_usb_halt_ep_out
  5167 ;;		i1_init_endpoints
  5168 ;;		i1_usb_in_endpoint_halted
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           
  5173                           ;psect for function i1___bmul
  5174  0DB4                     i1___bmul:	
  5175                           
  5176                           ;incstack = 0
  5177                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  5178                           ;i1___bmul@multiplier stored from wreg
  5179  0DB4  00F1               	movwf	i1___bmul@multiplier
  5180  0DB5  01F2               	clrf	i1___bmul@product
  5181  0DB6                     i1l3683:	
  5182  0DB6  0870               	movf	i1___bmul@multiplicand,w
  5183  0DB7  1871               	btfsc	i1___bmul@multiplier,0
  5184  0DB8  07F2               	addwf	i1___bmul@product,f
  5185  0DB9  35F0               	lslf	i1___bmul@multiplicand,f
  5186  0DBA  36F1               	lsrf	i1___bmul@multiplier,f
  5187  0DBB  08F1               	movf	i1___bmul@multiplier,f
  5188  0DBC  1D03               	skipz
  5189  0DBD  2DB6               	goto	i1l3683
  5190  0DBE  0872               	movf	i1___bmul@product,w
  5191  0DBF  0008               	return
  5192  0DC0                     __end_ofi1___bmul:	
  5193  007E                     btemp	set	126	;btemp
  5194  007E                     pic14e$flags	set	126
  5195  007E                     wtemp	set	126
  5196  007E                     wtemp0	set	126
  5197  0080                     wtemp1	set	128
  5198  0082                     wtemp2	set	130
  5199  0084                     wtemp3	set	132
  5200  0086                     wtemp4	set	134
  5201  0088                     wtemp5	set	136
  5202  007F                     wtemp6	set	127
  5203  007E                     ttemp	set	126
  5204  007E                     ttemp0	set	126
  5205  0081                     ttemp1	set	129
  5206  0084                     ttemp2	set	132
  5207  0087                     ttemp3	set	135
  5208  007F                     ttemp4	set	127
  5209  007E                     ltemp	set	126
  5210  007E                     ltemp0	set	126
  5211  0082                     ltemp1	set	130
  5212  0086                     ltemp2	set	134
  5213  0080                     ltemp3	set	128
  5214  0DC0                     __ptext63:	
  5215 ;; *************** function _start_control_return *****************
  5216 ;; Defined at:
  5217 ;;		line 837 in file "usb/src/usb.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  ptr             2    0[BANK0 ] PTR const void 
  5220 ;;		 -> fake_serial_num(120), cdc_data_string(38), cdc_interface_string(28), product_string(26), 
  5221 ;;		 -> vendor_string(48), str00(4), configuration_1(70), handle_standard_control_request@ret_644(1), 
  5222 ;;		 -> handle_standard_control_request@ret_642(2), handle_standard_control_request@ret(2), this_device_descriptor(18), 
      +g_configuration(1), 
  5223 ;;  len             2    2[BANK0 ] unsigned int 
  5224 ;;  bytes_asked_    2    4[BANK0 ] unsigned int 
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;  bytes_to_sen    1   10[BANK0 ] unsigned char 
  5227 ;; Return value:  Size  Location     Type
  5228 ;;		None               void
  5229 ;; Registers used:
  5230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5231 ;; Tracked objects:
  5232 ;;		On entry : 1F/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5236 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5237 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5238 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5239 ;;      Totals:         2      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5240 ;;Total ram usage:       13 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:    3
  5243 ;; This function calls:
  5244 ;;		_usb_send_in_buffer_0
  5245 ;;		i1_memcpy
  5246 ;; This function is called by:
  5247 ;;		_handle_standard_control_request
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           
  5252                           ;psect for function _start_control_return
  5253  0DC0                     _start_control_return:	
  5254                           
  5255                           ;usb.c: 839: uint8_t bytes_to_send = (((len)<(8))?(len):(8));
  5256                           
  5257                           ;incstack = 0
  5258                           ; Regs used in _start_control_return: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5259  0DC0  3000               	movlw	0
  5260  0DC1  023B               	subwf	start_control_return@len+1,w
  5261  0DC2  3008               	movlw	8
  5262  0DC3  1903               	skipnz
  5263  0DC4  023A               	subwf	start_control_return@len,w
  5264  0DC5  1C03               	skipc
  5265  0DC6  2DCB               	goto	i1l3851
  5266  0DC7  3008               	movlw	8
  5267  0DC8  00BE               	movwf	_start_control_return$602
  5268  0DC9  01BF               	clrf	_start_control_return$602+1
  5269  0DCA  2DCF               	goto	i1l170
  5270  0DCB                     i1l3851:	
  5271  0DCB  083B               	movf	start_control_return@len+1,w
  5272  0DCC  00BF               	movwf	_start_control_return$602+1
  5273  0DCD  083A               	movf	start_control_return@len,w
  5274  0DCE  00BE               	movwf	_start_control_return$602
  5275  0DCF                     i1l170:	
  5276  0DCF  083E               	movf	_start_control_return$602,w
  5277  0DD0  00C2               	movwf	start_control_return@bytes_to_send
  5278                           
  5279                           ;usb.c: 840: bytes_to_send = (((bytes_to_send)<(bytes_asked_for))?(bytes_to_send):(bytes
      +                          _asked_for));
  5280  0DD1  00FB               	movwf	??_start_control_return
  5281  0DD2  01FC               	clrf	??_start_control_return+1
  5282  0DD3  083D               	movf	start_control_return@bytes_asked_for+1,w
  5283  0DD4  027C               	subwf	??_start_control_return+1,w
  5284  0DD5  1D03               	skipz
  5285  0DD6  2DD9               	goto	u290_25
  5286  0DD7  083C               	movf	start_control_return@bytes_asked_for,w
  5287  0DD8  027B               	subwf	??_start_control_return,w
  5288  0DD9                     u290_25:	
  5289  0DD9  1C03               	skipc
  5290  0DDA  2DE0               	goto	i1l3855
  5291  0DDB  083D               	movf	start_control_return@bytes_asked_for+1,w
  5292  0DDC  00C1               	movwf	_start_control_return$603+1
  5293  0DDD  083C               	movf	start_control_return@bytes_asked_for,w
  5294  0DDE  00C0               	movwf	_start_control_return$603
  5295  0DDF  2DE3               	goto	i1l174
  5296  0DE0                     i1l3855:	
  5297  0DE0  0842               	movf	start_control_return@bytes_to_send,w
  5298  0DE1  00C0               	movwf	_start_control_return$603
  5299  0DE2  01C1               	clrf	_start_control_return$603+1
  5300  0DE3                     i1l174:	
  5301  0DE3  0840               	movf	_start_control_return$603,w
  5302  0DE4  00C2               	movwf	start_control_return@bytes_to_send
  5303                           
  5304                           ;usb.c: 841: returning_short = len < bytes_asked_for;
  5305  0DE5  083D               	movf	start_control_return@bytes_asked_for+1,w
  5306  0DE6  023B               	subwf	start_control_return@len+1,w
  5307  0DE7  1D03               	skipz
  5308  0DE8  2DEB               	goto	u291_25
  5309  0DE9  083C               	movf	start_control_return@bytes_asked_for,w
  5310  0DEA  023A               	subwf	start_control_return@len,w
  5311  0DEB                     u291_25:	
  5312  0DEB  3000               	movlw	0
  5313  0DEC  1C03               	skipc
  5314  0DED  3001               	movlw	1
  5315  0DEE  0026               	movlb	6	; select bank6
  5316  0DEF  00ED               	movwf	_returning_short^(0+768)
  5317                           
  5318                           ;usb.c: 842: memcpy(ep0_buf.in,ptr,bytes_to_send);;
  5319  0DF0  0025               	movlb	5	; select bank5
  5320  0DF1  086B               	movf	(_ep0_buf+3)^(0+640),w
  5321  0DF2  00F1               	movwf	i1memcpy@d1+1
  5322  0DF3  086A               	movf	(_ep0_buf+2)^(0+640),w
  5323  0DF4  00F0               	movwf	i1memcpy@d1
  5324  0DF5  0020               	movlb	0	; select bank0
  5325  0DF6  0839               	movf	start_control_return@ptr+1,w
  5326  0DF7  00F3               	movwf	i1memcpy@s1+1
  5327  0DF8  0838               	movf	start_control_return@ptr,w
  5328  0DF9  00F2               	movwf	i1memcpy@s1
  5329  0DFA  0842               	movf	start_control_return@bytes_to_send,w
  5330  0DFB  00F4               	movwf	i1memcpy@n
  5331  0DFC  01F5               	clrf	i1memcpy@n+1
  5332  0DFD  2668  3188         	fcall	i1_memcpy
  5333                           
  5334                           ;usb.c: 843: ep0_data_stage_in_buffer = ((char*)ptr) + bytes_to_send;
  5335  0DFF  0020               	movlb	0	; select bank0
  5336  0E00  0839               	movf	start_control_return@ptr+1,w
  5337  0E01  0027               	movlb	7	; select bank7
  5338  0E02  00B9               	movwf	(_ep0_data_stage_in_buffer+1)^(0+896)
  5339  0E03  0020               	movlb	0	; select bank0
  5340  0E04  0838               	movf	start_control_return@ptr,w
  5341  0E05  0027               	movlb	7	; select bank7
  5342  0E06  00B8               	movwf	_ep0_data_stage_in_buffer^(0+896)
  5343  0E07  0020               	movlb	0	; select bank0
  5344  0E08  0842               	movf	start_control_return@bytes_to_send,w
  5345  0E09  0027               	movlb	7	; select bank7
  5346  0E0A  07B8               	addwf	_ep0_data_stage_in_buffer^(0+896),f
  5347  0E0B  1803               	skipnc
  5348  0E0C  0AB9               	incf	(_ep0_data_stage_in_buffer+1)^(0+896),f
  5349                           
  5350                           ;usb.c: 844: ep0_data_stage_buf_remaining = (((bytes_asked_for)<(len))?(bytes_asked_for)
      +                          :(len)) - bytes_to_send;
  5351  0E0D  0020               	movlb	0	; select bank0
  5352  0E0E  083B               	movf	start_control_return@len+1,w
  5353  0E0F  023D               	subwf	start_control_return@bytes_asked_for+1,w
  5354  0E10  1D03               	skipz
  5355  0E11  2E14               	goto	u292_25
  5356  0E12  083A               	movf	start_control_return@len,w
  5357  0E13  023C               	subwf	start_control_return@bytes_asked_for,w
  5358  0E14                     u292_25:	
  5359  0E14  1C03               	skipc
  5360  0E15  2E1A               	goto	i1l3867
  5361  0E16  083B               	movf	start_control_return@len+1,w
  5362  0E17  00EA               	movwf	_ep0_data_stage_buf_remaining+1
  5363  0E18  083A               	movf	start_control_return@len,w
  5364  0E19  2E1D               	goto	L32
  5365  0E1A                     i1l3867:	
  5366  0E1A  083D               	movf	start_control_return@bytes_asked_for+1,w
  5367  0E1B  00EA               	movwf	_ep0_data_stage_buf_remaining+1
  5368  0E1C  083C               	movf	start_control_return@bytes_asked_for,w
  5369  0E1D                     L32:	
  5370  0E1D  00E9               	movwf	_ep0_data_stage_buf_remaining
  5371  0E1E  0842               	movf	start_control_return@bytes_to_send,w
  5372  0E1F  02E9               	subwf	_ep0_data_stage_buf_remaining,f
  5373  0E20  1C03               	skipc
  5374  0E21  03EA               	decf	_ep0_data_stage_buf_remaining+1,f
  5375                           
  5376                           ;usb.c: 847: ep0_buf.flags |= 0x8;
  5377  0E22  0025               	movlb	5	; select bank5
  5378  0E23  15EC               	bsf	(_ep0_buf^(0+640)+4),3
  5379                           
  5380                           ;usb.c: 848: usb_send_in_buffer_0(bytes_to_send);
  5381  0E24  0020               	movlb	0	; select bank0
  5382  0E25  0842               	movf	start_control_return@bytes_to_send,w
  5383  0E26  00F4               	movwf	usb_send_in_buffer_0@len
  5384  0E27  01F5               	clrf	usb_send_in_buffer_0@len+1
  5385  0E28  2E9C               	ljmp	i1l3769
  5386  0E29                     __end_of_start_control_return:	
  5387  0E29                     __ptext66:	
  5388 ;; *************** function _stall_ep0 *****************
  5389 ;; Defined at:
  5390 ;;		line 704 in file "usb/src/usb.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;		None
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;		None
  5395 ;; Return value:  Size  Location     Type
  5396 ;;		None               void
  5397 ;; Registers used:
  5398 ;;		wreg
  5399 ;; Tracked objects:
  5400 ;;		On entry : 1F/0
  5401 ;;		On exit  : 1F/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5408 ;;Total ram usage:        0 bytes
  5409 ;; Hardware stack levels used:    1
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_handle_standard_control_request
  5414 ;;		_handle_ep0_setup
  5415 ;;		_handle_ep0_out
  5416 ;;		_usb_service
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           
  5421                           ;psect for function _stall_ep0
  5422  0E29                     _stall_ep0:	
  5423                           
  5424                           ;incstack = 0
  5425                           ; Regs used in _stall_ep0: [wreg]
  5426                           ;usb.c: 712: do { (bds[1]).BDnCNT = (8); (bds[1]).STAT.BDnSTAT = (0x80|0x04); } while(0)
      +                          ;
  5427  0E29  3008               	movlw	8
  5428  0E2A  00A5               	movwf	37
  5429  0E2B  3084               	movlw	132
  5430  0E2C  00A4               	movwf	36
  5431  0E2D  0008               	return
  5432  0E2E                     __end_of_stall_ep0:	
  5433  0E2E                     __ptext55:	
  5434 ;; *************** function i1_pic16_linear_addr *****************
  5435 ;; Defined at:
  5436 ;;		line 456 in file "usb/src/usb.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;  ptr             2    6[COMMON] PTR void 
  5439 ;;		 -> ep_buffers(155), NULL(0), 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  pic16_linear    2    2[BANK0 ] unsigned int 
  5442 ;;  pic16_linear    1    1[BANK0 ] unsigned char 
  5443 ;;  pic16_linear    1    0[BANK0 ] unsigned char 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  2    6[COMMON] unsigned int 
  5446 ;; Registers used:
  5447 ;;		wreg, status,2, status,0, pclath, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/5
  5450 ;;		On exit  : 1F/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5454 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5455 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5456 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5457 ;;Total ram usage:       12 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    1
  5460 ;; This function calls:
  5461 ;;		i1___wmul
  5462 ;; This function is called by:
  5463 ;;		i1_init_endpoints
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           
  5468                           ;psect for function i1_pic16_linear_addr
  5469  0E2E                     i1_pic16_linear_addr:	
  5470                           
  5471                           ;usb.c: 458: uint8_t high, low;
  5472                           ;usb.c: 459: uint16_t addr = (uint16_t) ptr;
  5473                           
  5474                           ;incstack = 0
  5475                           ; Regs used in i1_pic16_linear_addr: [wreg+status,2+status,0+pclath+cstack]
  5476  0E2E  0877               	movf	i1pic16_linear_addr@ptr+1,w
  5477  0E2F  0020               	movlb	0	; select bank0
  5478  0E30  00BB               	movwf	i1pic16_linear_addr@addr+1
  5479  0E31  0876               	movf	i1pic16_linear_addr@ptr,w
  5480  0E32  00BA               	movwf	i1pic16_linear_addr@addr
  5481                           
  5482                           ;usb.c: 462: if (addr >= 0x2000)
  5483  0E33  3020               	movlw	32
  5484  0E34  023B               	subwf	i1pic16_linear_addr@addr+1,w
  5485  0E35  3000               	movlw	0
  5486  0E36  1903               	skipnz
  5487  0E37  023A               	subwf	i1pic16_linear_addr@addr,w
  5488                           
  5489                           ;usb.c: 463: return addr;
  5490  0E38  083B               	movf	i1pic16_linear_addr@addr+1,w
  5491  0E39  1C03               	skipc
  5492  0E3A  2E3F               	goto	L31
  5493  0E3B  00F7               	movwf	?i1_pic16_linear_addr+1
  5494  0E3C  083A               	movf	i1pic16_linear_addr@addr,w
  5495  0E3D  00F6               	movwf	?i1_pic16_linear_addr
  5496  0E3E  0008               	return
  5497  0E3F                     L31:	
  5498                           ;usb.c: 465: high = (addr & 0xff00) >> 8;
  5499                           
  5500  0E3F  00B8               	movwf	i1pic16_linear_addr@high
  5501                           
  5502                           ;usb.c: 466: low = addr & 0x00ff;
  5503  0E40  083A               	movf	i1pic16_linear_addr@addr,w
  5504  0E41  00B9               	movwf	i1pic16_linear_addr@low
  5505                           
  5506                           ;usb.c: 468: return 0x2000 +
  5507                           ;usb.c: 469: (low & 0x7f) - 0x20 +
  5508                           ;usb.c: 470: ((high << 1) + (low & 0x80)? 1: 0) * 0x50;
  5509  0E42  3980               	andlw	128
  5510  0E43  00F8               	movwf	??i1_pic16_linear_addr
  5511  0E44  01F9               	clrf	??i1_pic16_linear_addr+1
  5512  0E45  0838               	movf	i1pic16_linear_addr@high,w
  5513  0E46  00FA               	movwf	??i1_pic16_linear_addr+2
  5514  0E47  01FB               	clrf	??i1_pic16_linear_addr+3
  5515  0E48  35FA               	lslf	??i1_pic16_linear_addr+2,f
  5516  0E49  0DFB               	rlf	??i1_pic16_linear_addr+3,f
  5517  0E4A  0878               	movf	??i1_pic16_linear_addr,w
  5518  0E4B  077A               	addwf	??i1_pic16_linear_addr+2,w
  5519  0E4C  00FC               	movwf	??i1_pic16_linear_addr+4
  5520  0E4D  0879               	movf	??i1_pic16_linear_addr+1,w
  5521  0E4E  3D7B               	addwfc	??i1_pic16_linear_addr+3,w
  5522  0E4F  00FD               	movwf	??i1_pic16_linear_addr+5
  5523  0E50  047C               	iorwf	??i1_pic16_linear_addr+4,w
  5524  0E51  3000               	movlw	0
  5525  0E52  1D03               	skipz
  5526  0E53  3001               	movlw	1
  5527  0E54  00F0               	movwf	i1___wmul@multiplier
  5528  0E55  3050               	movlw	80
  5529  0E56  01F1               	clrf	i1___wmul@multiplier+1
  5530  0E57  00F2               	movwf	i1___wmul@multiplicand
  5531  0E58  01F3               	clrf	i1___wmul@multiplicand+1
  5532  0E59  2786               	fcall	i1___wmul
  5533  0E5A  0871               	movf	?i1___wmul+1,w
  5534  0E5B  00F7               	movwf	?i1_pic16_linear_addr+1
  5535  0E5C  0870               	movf	?i1___wmul,w
  5536  0E5D  00F6               	movwf	?i1_pic16_linear_addr
  5537  0E5E  0839               	movf	i1pic16_linear_addr@low,w
  5538  0E5F  397F               	andlw	127
  5539  0E60  07F6               	addwf	?i1_pic16_linear_addr,f
  5540  0E61  1803               	skipnc
  5541  0E62  0AF7               	incf	?i1_pic16_linear_addr+1,f
  5542  0E63  30E0               	movlw	224
  5543  0E64  07F6               	addwf	?i1_pic16_linear_addr,f
  5544  0E65  301F               	movlw	31
  5545  0E66  3DF7               	addwfc	?i1_pic16_linear_addr+1,f
  5546  0E67  0008               	return
  5547  0E68                     __end_ofi1_pic16_linear_addr:	
  5548  0E68                     __ptext70:	
  5549 ;; *************** function i1_memcpy *****************
  5550 ;; Defined at:
  5551 ;;		line 11 in file "/Applications/microchip/xc8/v1.33old/sources/common/memcpy.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;  d1              2    0[COMMON] PTR void 
  5554 ;;		 -> ep_buffers(155), NULL(0), 
  5555 ;;  s1              2    2[COMMON] PTR const void 
  5556 ;;		 -> STR_10(1), STR_9(3), STR_8(3), STR_7(3), 
  5557 ;;		 -> STR_6(3), STR_5(3), STR_4(4), STR_3(73), 
  5558 ;;		 -> gdb_process_command@msg_out(64), fake_serial_num(120), cdc_data_string(38), cdc_interface_string(28), 
  5559 ;;		 -> product_string(26), vendor_string(48), str00(4), configuration_1(70), 
  5560 ;;		 -> STR_2(4), STR_1(4), handle_standard_control_request@ret_644(1), handle_standard_control_request@ret_642(2), 
  5561 ;;		 -> handle_standard_control_request@ret(2), this_device_descriptor(18), g_configuration(1), ep_buffers(155), 
  5562 ;;		 -> NULL(0), 
  5563 ;;  n               2    4[COMMON] unsigned int 
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;  memcpy          2    9[COMMON] PTR const unsigned char 
  5566 ;;		 -> STR_10(1), STR_9(3), STR_8(3), STR_7(3), 
  5567 ;;		 -> STR_6(3), STR_5(3), STR_4(4), STR_3(73), 
  5568 ;;		 -> gdb_process_command@msg_out(64), fake_serial_num(120), cdc_data_string(38), cdc_interface_string(28), 
  5569 ;;		 -> product_string(26), vendor_string(48), str00(4), configuration_1(70), 
  5570 ;;		 -> STR_2(4), STR_1(4), handle_standard_control_request@ret_644(1), handle_standard_control_request@ret_642(2), 
  5571 ;;		 -> handle_standard_control_request@ret(2), this_device_descriptor(18), g_configuration(1), ep_buffers(155), 
  5572 ;;		 -> NULL(0), 
  5573 ;;  memcpy          2    7[COMMON] PTR unsigned char 
  5574 ;;		 -> ep_buffers(155), NULL(0), 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  2    0[COMMON] PTR void 
  5577 ;; Registers used:
  5578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5579 ;; Tracked objects:
  5580 ;;		On entry : 18/0
  5581 ;;		On exit  : 18/0
  5582 ;;		Unchanged: 18/0
  5583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5584 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5587 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;Total ram usage:       11 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_start_control_return
  5594 ;;		_handle_ep0_out
  5595 ;;		_handle_ep0_in
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           
  5600                           ;psect for function i1_memcpy
  5601  0E68                     i1_memcpy:	
  5602                           
  5603                           ;incstack = 0
  5604                           ; Regs used in i1_memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  5605  0E68  0873               	movf	i1memcpy@s1+1,w
  5606  0E69  00FA               	movwf	i1memcpy@s+1
  5607  0E6A  0872               	movf	i1memcpy@s1,w
  5608  0E6B  00F9               	movwf	i1memcpy@s
  5609  0E6C  0871               	movf	i1memcpy@d1+1,w
  5610  0E6D  00F8               	movwf	i1memcpy@d+1
  5611  0E6E  0870               	movf	i1memcpy@d1,w
  5612  0E6F  00F7               	movwf	i1memcpy@d
  5613  0E70                     i1l3827:	
  5614  0E70  3001               	movlw	1
  5615  0E71  02F4               	subwf	i1memcpy@n,f
  5616  0E72  3000               	movlw	0
  5617  0E73  3BF5               	subwfb	i1memcpy@n+1,f
  5618  0E74  0A74               	incf	i1memcpy@n,w
  5619  0E75  1903               	skipnz
  5620  0E76  0A75               	incf	i1memcpy@n+1,w
  5621  0E77  1903               	btfsc	3,2
  5622  0E78  0008               	return
  5623  0E79  0879               	movf	i1memcpy@s,w
  5624  0E7A  0084               	movwf	4
  5625  0E7B  087A               	movf	i1memcpy@s+1,w
  5626  0E7C  0085               	movwf	5
  5627  0E7D  0800               	movf	0,w	;code access
  5628  0E7E  00F6               	movwf	??i1_memcpy
  5629  0E7F  0877               	movf	i1memcpy@d,w
  5630  0E80  0086               	movwf	6
  5631  0E81  0878               	movf	i1memcpy@d+1,w
  5632  0E82  0087               	movwf	7
  5633  0E83  0876               	movf	??i1_memcpy,w
  5634  0E84  0081               	movwf	1
  5635  0E85  0AF9               	incf	i1memcpy@s,f
  5636  0E86  1903               	skipnz
  5637  0E87  0AFA               	incf	i1memcpy@s+1,f
  5638  0E88  0AF7               	incf	i1memcpy@d,f
  5639  0E89  1903               	skipnz
  5640  0E8A  0AF8               	incf	i1memcpy@d+1,f
  5641  0E8B  2E70               	goto	i1l3827
  5642  0E8C                     __end_ofi1_memcpy:	
  5643  0E8C                     __ptext69:	
  5644 ;; *************** function i1_reset_ep0_data_stage *****************
  5645 ;; Defined at:
  5646 ;;		line 474 in file "usb/src/usb.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;		None
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;		None
  5651 ;; Return value:  Size  Location     Type
  5652 ;;		None               void
  5653 ;; Registers used:
  5654 ;;		status,2
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/1D
  5657 ;;		On exit  : 1F/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5664 ;;Total ram usage:        0 bytes
  5665 ;; Hardware stack levels used:    1
  5666 ;; This function calls:
  5667 ;;		Nothing
  5668 ;; This function is called by:
  5669 ;;		_handle_ep0_setup
  5670 ;;		_handle_ep0_out
  5671 ;;		_handle_ep0_in
  5672 ;;		i1_usb_init
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           
  5677                           ;psect for function i1_reset_ep0_data_stage
  5678  0E8C                     i1_reset_ep0_data_stage:	
  5679                           
  5680                           ;usb.c: 476: ep0_data_stage_in_buffer = (0);
  5681                           
  5682                           ;incstack = 0
  5683                           ; Regs used in i1_reset_ep0_data_stage: [status,2]
  5684  0E8C  0027               	movlb	7	; select bank7
  5685  0E8D  01B8               	clrf	_ep0_data_stage_in_buffer^(0+896)
  5686  0E8E  01B9               	clrf	(_ep0_data_stage_in_buffer+1)^(0+896)
  5687                           
  5688                           ;usb.c: 477: ep0_data_stage_out_buffer = (0);
  5689  0E8F  0020               	movlb	0	; select bank0
  5690  0E90  01EE               	clrf	_ep0_data_stage_out_buffer
  5691                           
  5692                           ;usb.c: 478: ep0_data_stage_buf_remaining = 0;
  5693  0E91  01E9               	clrf	_ep0_data_stage_buf_remaining
  5694  0E92  01EA               	clrf	_ep0_data_stage_buf_remaining+1
  5695                           
  5696                           ;usb.c: 479: ep0_data_stage_callback = (0);
  5697  0E93  01EB               	clrf	_ep0_data_stage_callback
  5698  0E94  01EC               	clrf	_ep0_data_stage_callback+1
  5699  0E95  0008               	return
  5700  0E96                     __end_ofi1_reset_ep0_data_stage:	
  5701  0E96                     __ptext67:	
  5702 ;; *************** function _send_zero_length_packet_ep0 *****************
  5703 ;; Defined at:
  5704 ;;		line 753 in file "usb/src/usb.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;		None
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;		None
  5709 ;; Return value:  Size  Location     Type
  5710 ;;		None               void
  5711 ;; Registers used:
  5712 ;;		wreg, status,2
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/6
  5715 ;;		On exit  : 1F/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5722 ;;Total ram usage:        0 bytes
  5723 ;; Hardware stack levels used:    1
  5724 ;; This function calls:
  5725 ;;		Nothing
  5726 ;; This function is called by:
  5727 ;;		_handle_standard_control_request
  5728 ;;		_handle_ep0_out
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732                           
  5733                           ;psect for function _send_zero_length_packet_ep0
  5734  0E96                     _send_zero_length_packet_ep0:	
  5735                           
  5736                           ;usb.c: 761: bds[1].STAT.BDnSTAT = 0;
  5737                           
  5738                           ;incstack = 0
  5739                           ; Regs used in _send_zero_length_packet_ep0: [wreg+status,2]
  5740  0E96  0020               	movlb	0	; select bank0
  5741  0E97  30C8               	movlw	200
  5742  0E98  01A4               	clrf	36
  5743                           
  5744                           ;usb.c: 762: do { (bds[1]).BDnCNT = (0); (bds[1]).STAT.BDnSTAT = (0x80|0x40|0x08); } whi
      +                          le(0);
  5745  0E99  01A5               	clrf	37
  5746  0E9A  00A4               	movwf	36
  5747  0E9B  0008               	return
  5748  0E9C                     __end_of_send_zero_length_packet_ep0:	
  5749  0E9C                     __ptext71:	
  5750 ;; *************** function _usb_send_in_buffer_0 *****************
  5751 ;; Defined at:
  5752 ;;		line 766 in file "usb/src/usb.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  len             2    4[COMMON] unsigned int 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  pid             1    6[COMMON] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;		None               void
  5759 ;; Registers used:
  5760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 19/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5766 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5770 ;;Total ram usage:        3 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    2
  5773 ;; This function calls:
  5774 ;;		i1_usb_in_endpoint_halted
  5775 ;; This function is called by:
  5776 ;;		_start_control_return
  5777 ;;		_handle_ep0_in
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function _usb_send_in_buffer_0
  5783  0E9C                     _usb_send_in_buffer_0:	
  5784  0E9C                     i1l3769:	
  5785                           ;incstack = 0
  5786                           ; Regs used in _usb_send_in_buffer_0: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5787                           
  5788                           
  5789                           ;usb.c: 768: if (!usb_in_endpoint_halted(0)) {
  5790  0E9C  3000               	movlw	0
  5791  0E9D  26CF  3188         	fcall	i1_usb_in_endpoint_halted
  5792  0E9F  3800               	iorlw	0
  5793  0EA0  1D03               	skipz
  5794  0EA1  0008               	return
  5795                           
  5796                           ;usb.c: 786: uint8_t pid;
  5797                           ;usb.c: 787: pid = (ep0_buf.flags & 0x8)? 1 : 0;
  5798  0EA2  3000               	movlw	0
  5799  0EA3  0025               	movlb	5	; select bank5
  5800  0EA4  19EC               	btfsc	(_ep0_buf^(0+640)+4),3
  5801  0EA5  3001               	movlw	1
  5802  0EA6  00F6               	movwf	usb_send_in_buffer_0@pid
  5803                           
  5804                           ;usb.c: 788: bds[1].STAT.BDnSTAT = 0;
  5805  0EA7  0020               	movlb	0	; select bank0
  5806  0EA8  01A4               	clrf	36
  5807                           
  5808                           ;usb.c: 790: if (pid)
  5809  0EA9  0876               	movf	usb_send_in_buffer_0@pid,w
  5810  0EAA  1903               	btfsc	3,2
  5811  0EAB  2EB0               	goto	i1l3779
  5812  0EAC  0874               	movf	usb_send_in_buffer_0@len,w
  5813  0EAD  00A5               	movwf	37
  5814  0EAE  30C8               	movlw	200
  5815  0EAF  2EB3               	goto	L33
  5816  0EB0                     i1l3779:	
  5817  0EB0  0874               	movf	usb_send_in_buffer_0@len,w
  5818  0EB1  00A5               	movwf	37
  5819  0EB2  3088               	movlw	136
  5820  0EB3                     L33:	
  5821  0EB3  00A4               	movwf	36
  5822                           
  5823                           ;usb.c: 797: ep0_buf.flags ^= 0x8;
  5824  0EB4  3008               	movlw	8
  5825  0EB5  0025               	movlb	5	; select bank5
  5826  0EB6  06EC               	xorwf	(_ep0_buf^(0+640)+4),f
  5827  0EB7  0008               	return
  5828  0EB8                     __end_of_usb_send_in_buffer_0:	
  5829  0EB8                     __ptext57:	
  5830 ;; *************** function i1_memset *****************
  5831 ;; Defined at:
  5832 ;;		line 8 in file "/Applications/microchip/xc8/v1.33old/sources/common/memset.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  p1              2    0[COMMON] PTR void 
  5835 ;;		 -> bdm_interrupt@out(5), bdm_resume@out(5), bdm_set_data@out(5), bdm_get_data@out(5), 
  5836 ;;		 -> bdm_set_spr@out(5), bdm_get_spr2@out(5), bdm_get_spr@out(5), bdm_set_gpr@out(5), 
  5837 ;;		 -> bdm_get_gpr@out(5), bdm_nop@out(5), UEP0(1), bds(24), 
  5838 ;;  c               2    2[COMMON] int 
  5839 ;;  n               2    4[COMMON] unsigned int 
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;  memset          2    6[COMMON] PTR unsigned char 
  5842 ;;		 -> bdm_interrupt@out(5), bdm_resume@out(5), bdm_set_data@out(5), bdm_get_data@out(5), 
  5843 ;;		 -> bdm_set_spr@out(5), bdm_get_spr2@out(5), bdm_get_spr@out(5), bdm_set_gpr@out(5), 
  5844 ;;		 -> bdm_get_gpr@out(5), bdm_nop@out(5), UEP0(1), bds(24), 
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  2    0[COMMON] PTR void 
  5847 ;; Registers used:
  5848 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5849 ;; Tracked objects:
  5850 ;;		On entry : 2/1D
  5851 ;;		On exit  : 2/0
  5852 ;;		Unchanged: 2/0
  5853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5854 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5855 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5857 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5858 ;;Total ram usage:        8 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; This function calls:
  5861 ;;		Nothing
  5862 ;; This function is called by:
  5863 ;;		i1_init_endpoints
  5864 ;;		i1_usb_init
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868                           
  5869                           ;psect for function i1_memset
  5870  0EB8                     i1_memset:	
  5871                           
  5872                           ;incstack = 0
  5873                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5874  0EB8  0871               	movf	i1memset@p1+1,w
  5875  0EB9  00F7               	movwf	i1memset@p+1
  5876  0EBA  0870               	movf	i1memset@p1,w
  5877  0EBB  00F6               	movwf	i1memset@p
  5878  0EBC                     i1l3835:	
  5879  0EBC  3001               	movlw	1
  5880  0EBD  02F4               	subwf	i1memset@n,f
  5881  0EBE  3000               	movlw	0
  5882  0EBF  3BF5               	subwfb	i1memset@n+1,f
  5883  0EC0  0A74               	incf	i1memset@n,w
  5884  0EC1  1903               	skipnz
  5885  0EC2  0A75               	incf	i1memset@n+1,w
  5886  0EC3  1903               	btfsc	3,2
  5887  0EC4  0008               	return
  5888  0EC5  0876               	movf	i1memset@p,w
  5889  0EC6  0086               	movwf	6
  5890  0EC7  0877               	movf	i1memset@p+1,w
  5891  0EC8  0087               	movwf	7
  5892  0EC9  0872               	movf	i1memset@c,w
  5893  0ECA  0081               	movwf	1
  5894  0ECB  0AF6               	incf	i1memset@p,f
  5895  0ECC  1903               	skipnz
  5896  0ECD  0AF7               	incf	i1memset@p+1,f
  5897  0ECE  2EBC               	goto	i1l3835
  5898  0ECF                     __end_ofi1_memset:	
  5899  0ECF                     __ptext72:	
  5900 ;; *************** function i1_usb_in_endpoint_halted *****************
  5901 ;; Defined at:
  5902 ;;		line 1566 in file "usb/src/usb.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;  endpoint        1    wreg     unsigned char 
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  endpoint        1    3[COMMON] unsigned char 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      unsigned char 
  5909 ;; Registers used:
  5910 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 19/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;Total ram usage:        1 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    1
  5923 ;; This function calls:
  5924 ;;		i1___bmul
  5925 ;; This function is called by:
  5926 ;;		_usb_send_in_buffer_0
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           
  5931                           ;psect for function i1_usb_in_endpoint_halted
  5932  0ECF                     i1_usb_in_endpoint_halted:	
  5933                           
  5934                           ;incstack = 0
  5935                           ; Regs used in i1_usb_in_endpoint_halted: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  5936                           ;i1usb_in_endpoint_halted@endpoint stored from wreg
  5937  0ECF  00F3               	movwf	i1usb_in_endpoint_halted@endpoint
  5938                           
  5939                           ;usb.c: 1568: return ep_buf[endpoint].flags & 0x2;
  5940  0ED0  3007               	movlw	7
  5941  0ED1  00F0               	movwf	i1___bmul@multiplicand
  5942  0ED2  0873               	movf	i1usb_in_endpoint_halted@endpoint,w
  5943  0ED3  25B4               	fcall	i1___bmul
  5944  0ED4  3EC0               	addlw	(_ep_buf+6)& (0+255)
  5945  0ED5  0086               	movwf	6
  5946  0ED6  3003               	movlw	3	; select bank7/8
  5947  0ED7  0087               	movwf	7
  5948  0ED8  0801               	movf	1,w
  5949  0ED9  3902               	andlw	2
  5950  0EDA  0008               	return
  5951  0EDB                     __end_ofi1_usb_in_endpoint_halted:	
  5952  0EDB                     __ptext64:	
  5953 ;; *************** function _clear_ep0_stall *****************
  5954 ;; Defined at:
  5955 ;;		line 717 in file "usb/src/usb.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;		None
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;		None
  5960 ;; Return value:  Size  Location     Type
  5961 ;;		None               void
  5962 ;; Registers used:
  5963 ;;		wreg, status,2
  5964 ;; Tracked objects:
  5965 ;;		On entry : 1F/0
  5966 ;;		On exit  : 1F/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5973 ;;Total ram usage:        0 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; This function calls:
  5976 ;;		Nothing
  5977 ;; This function is called by:
  5978 ;;		_handle_ep0_setup
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           
  5983                           ;psect for function _clear_ep0_stall
  5984  0EDB                     _clear_ep0_stall:	
  5985                           
  5986                           ;incstack = 0
  5987                           ; Regs used in _clear_ep0_stall: [wreg+status,2]
  5988                           ;usb.c: 726: do { (bds[1]).BDnCNT = (8); (bds[1]).STAT.BDnSTAT = (0); } while(0);
  5989  0EDB  3008               	movlw	8
  5990  0EDC  00A5               	movwf	37
  5991  0EDD  01A4               	clrf	36
  5992  0EDE  0008               	return
  5993  0EDF                     __end_of_clear_ep0_stall:	
  5994  0EDF                     __ptext62:	
  5995 ;; *************** function _usb_application_get_string *****************
  5996 ;; Defined at:
  5997 ;;		line 287 in file "usb_descriptors.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;  string_numbe    1    wreg     unsigned char 
  6000 ;;  ptr             1    0[COMMON] PTR PTR const void 
  6001 ;;		 -> handle_standard_control_request@desc_632(2), 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;  string_numbe    1    3[COMMON] unsigned char 
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  2    0[COMMON] int 
  6006 ;; Registers used:
  6007 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6008 ;; Tracked objects:
  6009 ;;		On entry : 1F/0
  6010 ;;		On exit  : 1F/0
  6011 ;;		Unchanged: 1F/0
  6012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6013 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6016 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6017 ;;Total ram usage:        4 bytes
  6018 ;; Hardware stack levels used:    1
  6019 ;; This function calls:
  6020 ;;		Nothing
  6021 ;; This function is called by:
  6022 ;;		_handle_standard_control_request
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           
  6027                           ;psect for function _usb_application_get_string
  6028  0EDF                     _usb_application_get_string:	
  6029                           
  6030                           ;incstack = 0
  6031                           ; Regs used in _usb_application_get_string: [wreg+fsr1l+fsr1h+status,2+status,0]
  6032                           ;usb_application_get_string@string_number stored from wreg
  6033  0EDF  00F3               	movwf	usb_application_get_string@string_number
  6034                           
  6035                           ;usb_descriptors.c: 289: if (string_number == 0) {
  6036  0EE0  08F3               	movf	usb_application_get_string@string_number,f
  6037  0EE1  1D03               	skipz
  6038  0EE2  2EEE               	goto	i1l3883
  6039                           
  6040                           ;usb_descriptors.c: 290: *ptr = &str00;
  6041  0EE3  0870               	movf	usb_application_get_string@ptr,w
  6042  0EE4  0086               	movwf	6
  6043  0EE5  305C               	movlw	low (_str00| (0+32768))
  6044  0EE6  0187               	clrf	7
  6045  0EE7  3FC0               	movwi [0]fsr1
  6046  0EE8  3099               	movlw	high (_str00| (0+32768))
  6047  0EE9  3FC1               	movwi [1]fsr1
  6048                           
  6049                           ;usb_descriptors.c: 291: return sizeof(str00);
  6050  0EEA  3004               	movlw	4
  6051  0EEB  00F0               	movwf	?_usb_application_get_string
  6052  0EEC  01F1               	clrf	?_usb_application_get_string+1
  6053  0EED  0008               	return
  6054  0EEE                     i1l3883:	
  6055                           
  6056                           ;usb_descriptors.c: 293: else if (string_number == 1) {
  6057  0EEE  0B73               	decfsz	usb_application_get_string@string_number,w
  6058  0EEF  2EFB               	goto	i1l3893
  6059                           
  6060                           ;usb_descriptors.c: 294: *ptr = &vendor_string;
  6061  0EF0  0870               	movf	usb_application_get_string@ptr,w
  6062  0EF1  0086               	movwf	6
  6063  0EF2  30BE               	movlw	low (_vendor_string| (0+32768))
  6064  0EF3  0187               	clrf	7
  6065  0EF4  3FC0               	movwi [0]fsr1
  6066  0EF5  3098               	movlw	high (_vendor_string| (0+32768))
  6067  0EF6  3FC1               	movwi [1]fsr1
  6068                           
  6069                           ;usb_descriptors.c: 295: return sizeof(vendor_string);
  6070  0EF7  3030               	movlw	48
  6071  0EF8  00F0               	movwf	?_usb_application_get_string
  6072  0EF9  01F1               	clrf	?_usb_application_get_string+1
  6073  0EFA  0008               	return
  6074  0EFB                     i1l3893:	
  6075                           
  6076                           ;usb_descriptors.c: 297: else if (string_number == 2) {
  6077  0EFB  0873               	movf	usb_application_get_string@string_number,w
  6078  0EFC  3A02               	xorlw	2
  6079  0EFD  1D03               	skipz
  6080  0EFE  2F0A               	goto	i1l3903
  6081                           
  6082                           ;usb_descriptors.c: 298: *ptr = &product_string;
  6083  0EFF  0870               	movf	usb_application_get_string@ptr,w
  6084  0F00  0086               	movwf	6
  6085  0F01  3030               	movlw	low (_product_string| (0+32768))
  6086  0F02  0187               	clrf	7
  6087  0F03  3FC0               	movwi [0]fsr1
  6088  0F04  3099               	movlw	high (_product_string| (0+32768))
  6089  0F05  3FC1               	movwi [1]fsr1
  6090                           
  6091                           ;usb_descriptors.c: 299: return sizeof(product_string);
  6092  0F06  301A               	movlw	26
  6093  0F07  00F0               	movwf	?_usb_application_get_string
  6094  0F08  01F1               	clrf	?_usb_application_get_string+1
  6095  0F09  0008               	return
  6096  0F0A                     i1l3903:	
  6097                           
  6098                           ;usb_descriptors.c: 301: else if (string_number == 3) {
  6099  0F0A  0873               	movf	usb_application_get_string@string_number,w
  6100  0F0B  3A03               	xorlw	3
  6101  0F0C  1D03               	skipz
  6102  0F0D  2F19               	goto	i1l3913
  6103                           
  6104                           ;usb_descriptors.c: 302: *ptr = &cdc_interface_string;
  6105  0F0E  0870               	movf	usb_application_get_string@ptr,w
  6106  0F0F  0086               	movwf	6
  6107  0F10  3014               	movlw	low (_cdc_interface_string| (0+32768))
  6108  0F11  0187               	clrf	7
  6109  0F12  3FC0               	movwi [0]fsr1
  6110  0F13  3099               	movlw	high (_cdc_interface_string| (0+32768))
  6111  0F14  3FC1               	movwi [1]fsr1
  6112                           
  6113                           ;usb_descriptors.c: 303: return sizeof(cdc_interface_string);
  6114  0F15  301C               	movlw	28
  6115  0F16  00F0               	movwf	?_usb_application_get_string
  6116  0F17  01F1               	clrf	?_usb_application_get_string+1
  6117  0F18  0008               	return
  6118  0F19                     i1l3913:	
  6119                           
  6120                           ;usb_descriptors.c: 305: else if (string_number == 4) {
  6121  0F19  0873               	movf	usb_application_get_string@string_number,w
  6122  0F1A  3A04               	xorlw	4
  6123  0F1B  1D03               	skipz
  6124  0F1C  2F28               	goto	i1l3923
  6125                           
  6126                           ;usb_descriptors.c: 306: *ptr = &cdc_data_string;
  6127  0F1D  0870               	movf	usb_application_get_string@ptr,w
  6128  0F1E  0086               	movwf	6
  6129  0F1F  30EE               	movlw	low (_cdc_data_string| (0+32768))
  6130  0F20  0187               	clrf	7
  6131  0F21  3FC0               	movwi [0]fsr1
  6132  0F22  3098               	movlw	high (_cdc_data_string| (0+32768))
  6133  0F23  3FC1               	movwi [1]fsr1
  6134                           
  6135                           ;usb_descriptors.c: 307: return sizeof(cdc_data_string);
  6136  0F24  3026               	movlw	38
  6137  0F25  00F0               	movwf	?_usb_application_get_string
  6138  0F26  01F1               	clrf	?_usb_application_get_string+1
  6139  0F27  0008               	return
  6140  0F28                     i1l3923:	
  6141                           
  6142                           ;usb_descriptors.c: 309: else if (string_number == 5) {
  6143  0F28  0873               	movf	usb_application_get_string@string_number,w
  6144  0F29  3A05               	xorlw	5
  6145  0F2A  1D03               	skipz
  6146  0F2B  2F37               	goto	i1l3931
  6147                           
  6148                           ;usb_descriptors.c: 318: *ptr = &fake_serial_num;
  6149  0F2C  0870               	movf	usb_application_get_string@ptr,w
  6150  0F2D  0086               	movwf	6
  6151  0F2E  3000               	movlw	low (_fake_serial_num| (0+32768))
  6152  0F2F  0187               	clrf	7
  6153  0F30  3FC0               	movwi [0]fsr1
  6154  0F31  3098               	movlw	high (_fake_serial_num| (0+32768))
  6155  0F32  3FC1               	movwi [1]fsr1
  6156                           
  6157                           ;usb_descriptors.c: 319: return sizeof(fake_serial_num);
  6158  0F33  3078               	movlw	120
  6159  0F34  00F0               	movwf	?_usb_application_get_string
  6160  0F35  01F1               	clrf	?_usb_application_get_string+1
  6161  0F36  0008               	return
  6162  0F37                     i1l3931:	
  6163                           
  6164                           ;usb_descriptors.c: 320: }
  6165                           ;usb_descriptors.c: 322: return -1;
  6166  0F37  30FF               	movlw	255
  6167  0F38  00F0               	movwf	?_usb_application_get_string
  6168  0F39  00F1               	movwf	?_usb_application_get_string+1
  6169  0F3A  0008               	return
  6170  0F3B                     __end_of_usb_application_get_string:	
  6171  0F3B                     __ptext61:	
  6172 ;; *************** function _stall_ep_in *****************
  6173 ;; Defined at:
  6174 ;;		line 731 in file "usb/src/usb.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  ep              1    wreg     unsigned char 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  ep              1    3[COMMON] unsigned char 
  6179 ;; Return value:  Size  Location     Type
  6180 ;;		None               void
  6181 ;; Registers used:
  6182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;Total ram usage:        1 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; Hardware stack levels required when called:    1
  6195 ;; This function calls:
  6196 ;;		i1___bmul
  6197 ;; This function is called by:
  6198 ;;		_usb_service
  6199 ;;		_usb_halt_ep_in
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           
  6204                           ;psect for function _stall_ep_in
  6205  0F3B                     _stall_ep_in:	
  6206                           
  6207                           ;incstack = 0
  6208                           ; Regs used in _stall_ep_in: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6209                           ;stall_ep_in@ep stored from wreg
  6210  0F3B  00F3               	movwf	stall_ep_in@ep
  6211                           
  6212                           ;usb.c: 736: do { (bds[(ep) * 2 + 1]).BDnCNT = (ep_buf[ep].in_len); (bds[(ep) * 2 + 1]).
      +                          STAT.BDnSTAT = (0x80|0x04); } while(0);
  6213  0F3C  319C  24F0  3188   	fcall	PL395	;call to abstracted procedure
  6214  0F3F  0187               	clrf	7
  6215  0F40  00F0               	movwf	i1___bmul@multiplicand
  6216  0F41  0873               	movf	stall_ep_in@ep,w
  6217  0F42  25B4               	fcall	i1___bmul
  6218  0F43  3EBF               	addlw	(_ep_buf+5)& (0+255)
  6219  0F44  319C  24E2  3188   	fcall	PL365	;call to abstracted procedure
  6220  0F47  0873               	movf	stall_ep_in@ep,w
  6221  0F48  319C  24F6         	fcall	PL399	;call to abstracted procedure
  6222  0F4A  3084               	movlw	132
  6223  0F4B  0187               	clrf	7
  6224  0F4C  0081               	movwf	1
  6225  0F4D  0008               	return
  6226  0F4E                     __end_of_stall_ep_in:	
  6227  0F4E                     __ptext60:	
  6228 ;; *************** function _usb_halt_ep_in *****************
  6229 ;; Defined at:
  6230 ;;		line 1555 in file "usb/src/usb.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  ep              1    wreg     unsigned char 
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;  ep              1    4[COMMON] unsigned char 
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  1    wreg      unsigned char 
  6237 ;; Registers used:
  6238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6239 ;; Tracked objects:
  6240 ;;		On entry : 1F/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6247 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6248 ;;Total ram usage:        1 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; Hardware stack levels required when called:    2
  6251 ;; This function calls:
  6252 ;;		_stall_ep_in
  6253 ;;		i1___bmul
  6254 ;; This function is called by:
  6255 ;;		_handle_standard_control_request
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           
  6260                           ;psect for function _usb_halt_ep_in
  6261  0F4E                     _usb_halt_ep_in:	
  6262                           
  6263                           ;incstack = 0
  6264                           ; Regs used in _usb_halt_ep_in: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6265                           ;usb_halt_ep_in@ep stored from wreg
  6266  0F4E  00F4               	movwf	usb_halt_ep_in@ep
  6267                           
  6268                           ;usb.c: 1557: if (ep == 0 || ep > 2)
  6269  0F4F  0874               	movf	usb_halt_ep_in@ep,w
  6270  0F50  1903               	btfsc	3,2
  6271  0F51  0008               	return
  6272  0F52  3003               	movlw	3
  6273  0F53  0274               	subwf	usb_halt_ep_in@ep,w
  6274  0F54  1803               	btfsc	3,0
  6275  0F55  0008               	return
  6276                           
  6277                           ;usb.c: 1560: ep_buf[ep].flags |= 0x2;
  6278  0F56  3007               	movlw	7
  6279  0F57  00F0               	movwf	i1___bmul@multiplicand
  6280  0F58  0874               	movf	usb_halt_ep_in@ep,w
  6281  0F59  25B4  3188         	fcall	i1___bmul
  6282  0F5B  3EC0               	addlw	(_ep_buf+6)& (0+255)
  6283  0F5C  0086               	movwf	6
  6284  0F5D  3003               	movlw	3	; select bank7/8
  6285  0F5E  0087               	movwf	7
  6286  0F5F  1481               	bsf	1,1
  6287                           
  6288                           ;usb.c: 1561: stall_ep_in(ep);
  6289  0F60  0874               	movf	usb_halt_ep_in@ep,w
  6290  0F61  2F3B               	ljmp	_stall_ep_in
  6291  0F62                     __end_of_usb_halt_ep_in:	
  6292  0F62                     __ptext58:	
  6293 ;; *************** function _usb_halt_ep_out *****************
  6294 ;; Defined at:
  6295 ;;		line 1633 in file "usb/src/usb.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;  ep              1    wreg     unsigned char 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;  ep              1    3[COMMON] unsigned char 
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1    wreg      unsigned char 
  6302 ;; Registers used:
  6303 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6304 ;; Tracked objects:
  6305 ;;		On entry : 1F/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6310 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6313 ;;Total ram usage:        1 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    1
  6316 ;; This function calls:
  6317 ;;		_stall_ep_out
  6318 ;;		i1___bmul
  6319 ;; This function is called by:
  6320 ;;		_handle_standard_control_request
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324                           
  6325                           ;psect for function _usb_halt_ep_out
  6326  0F62                     _usb_halt_ep_out:	
  6327                           
  6328                           ;incstack = 0
  6329                           ; Regs used in _usb_halt_ep_out: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6330                           ;usb_halt_ep_out@ep stored from wreg
  6331  0F62  00F3               	movwf	usb_halt_ep_out@ep
  6332                           
  6333                           ;usb.c: 1635: if (ep == 0 || ep > 2)
  6334  0F63  0873               	movf	usb_halt_ep_out@ep,w
  6335  0F64  1903               	btfsc	3,2
  6336  0F65  0008               	return
  6337  0F66  3003               	movlw	3
  6338  0F67  0273               	subwf	usb_halt_ep_out@ep,w
  6339  0F68  1803               	btfsc	3,0
  6340  0F69  0008               	return
  6341                           
  6342                           ;usb.c: 1638: ep_buf[ep].flags |= 0x1;
  6343  0F6A  3007               	movlw	7
  6344  0F6B  00F0               	movwf	i1___bmul@multiplicand
  6345  0F6C  0873               	movf	usb_halt_ep_out@ep,w
  6346  0F6D  25B4  3188         	fcall	i1___bmul
  6347  0F6F  3EC0               	addlw	(_ep_buf+6)& (0+255)
  6348  0F70  0086               	movwf	6
  6349  0F71  3003               	movlw	3	; select bank7/8
  6350  0F72  0087               	movwf	7
  6351  0F73  1401               	bsf	1,0
  6352                           
  6353                           ;usb.c: 1639: stall_ep_out(ep);
  6354  0F74  0873               	movf	usb_halt_ep_out@ep,w
  6355  0F75  2F76               	ljmp	_stall_ep_out
  6356  0F76                     __end_of_usb_halt_ep_out:	
  6357  0F76                     __ptext59:	
  6358 ;; *************** function _stall_ep_out *****************
  6359 ;; Defined at:
  6360 ;;		line 742 in file "usb/src/usb.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;  ep              1    wreg     unsigned char 
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;  ep              1    0[COMMON] unsigned char 
  6365 ;; Return value:  Size  Location     Type
  6366 ;;		None               void
  6367 ;; Registers used:
  6368 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6377 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6378 ;;Total ram usage:        1 bytes
  6379 ;; Hardware stack levels used:    1
  6380 ;; This function calls:
  6381 ;;		Nothing
  6382 ;; This function is called by:
  6383 ;;		_usb_service
  6384 ;;		_usb_halt_ep_out
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           
  6389                           ;psect for function _stall_ep_out
  6390  0F76                     _stall_ep_out:	
  6391                           
  6392                           ;incstack = 0
  6393                           ; Regs used in _stall_ep_out: [wreg+fsr1l+fsr1h+status,2+status,0]
  6394                           ;stall_ep_out@ep stored from wreg
  6395  0F76  00F0               	movwf	stall_ep_out@ep
  6396                           
  6397                           ;usb.c: 747: do { (bds[(ep) * 2]).BDnCNT = (0); (bds[(ep) * 2]).STAT.BDnSTAT = (0x80|0x0
      +                          4); } while(0);
  6398  0F77  27F5  3188         	fcall	PL373	;call to abstracted procedure
  6399  0F79  0187               	clrf	7
  6400  0F7A  0181               	clrf	1
  6401  0F7B  0870               	movf	stall_ep_out@ep,w
  6402  0F7C  279B               	fcall	PL377	;call to abstracted procedure
  6403  0F7D  3084               	movlw	132
  6404  0F7E  0081               	movwf	1
  6405  0F7F  0008               	return
  6406  0F80                     __end_of_stall_ep_out:	
  6407  0F80                     __ptext51:	
  6408 ;; *************** function _reset_bd0_out *****************
  6409 ;; Defined at:
  6410 ;;		line 692 in file "usb/src/usb.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;		None
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;		None
  6415 ;; Return value:  Size  Location     Type
  6416 ;;		None               void
  6417 ;; Registers used:
  6418 ;;		wreg
  6419 ;; Tracked objects:
  6420 ;;		On entry : 2/1D
  6421 ;;		On exit  : 1F/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;Total ram usage:        0 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; This function calls:
  6431 ;;		Nothing
  6432 ;; This function is called by:
  6433 ;;		_usb_service
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           
  6438                           ;psect for function _reset_bd0_out
  6439  0F80                     _reset_bd0_out:	
  6440                           
  6441                           ;incstack = 0
  6442                           ; Regs used in _reset_bd0_out: [wreg]
  6443                           ;usb.c: 700: do { (bds[0]).BDnCNT = (8); (bds[0]).STAT.BDnSTAT = (0x80); } while(0);
  6444  0F80  3008               	movlw	8
  6445  0F81  0020               	movlb	0	; select bank0
  6446  0F82  00A1               	movwf	33
  6447  0F83  3080               	movlw	128
  6448  0F84  00A0               	movwf	32
  6449  0F85  0008               	return
  6450  0F86                     __end_of_reset_bd0_out:	
  6451  0F86                     __ptext56:	
  6452 ;; *************** function i1___wmul *****************
  6453 ;; Defined at:
  6454 ;;		line 15 in file "/Applications/microchip/xc8/v1.33old/sources/common/Umul16.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;  multiplier      2    0[COMMON] unsigned int 
  6457 ;;  multiplicand    2    2[COMMON] unsigned int 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  __wmul          2    4[COMMON] unsigned int 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  2    0[COMMON] unsigned int 
  6462 ;; Registers used:
  6463 ;;		wreg, status,2, status,0
  6464 ;; Tracked objects:
  6465 ;;		On entry : 1F/0
  6466 ;;		On exit  : 1F/0
  6467 ;;		Unchanged: 1F/0
  6468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6472 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6473 ;;Total ram usage:        6 bytes
  6474 ;; Hardware stack levels used:    1
  6475 ;; This function calls:
  6476 ;;		Nothing
  6477 ;; This function is called by:
  6478 ;;		i1_pic16_linear_addr
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           
  6483                           ;psect for function i1___wmul
  6484  0F86                     i1___wmul:	
  6485                           
  6486                           ;incstack = 0
  6487                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  6488  0F86  01F4               	clrf	i1___wmul@product
  6489  0F87  01F5               	clrf	i1___wmul@product+1
  6490  0F88                     i1l3749:	
  6491  0F88  1C70               	btfss	i1___wmul@multiplier,0
  6492  0F89  2F8E               	goto	i1l3753
  6493  0F8A  0872               	movf	i1___wmul@multiplicand,w
  6494  0F8B  07F4               	addwf	i1___wmul@product,f
  6495  0F8C  0873               	movf	i1___wmul@multiplicand+1,w
  6496  0F8D  3DF5               	addwfc	i1___wmul@product+1,f
  6497  0F8E                     i1l3753:	
  6498  0F8E  35F2               	lslf	i1___wmul@multiplicand,f
  6499  0F8F  0DF3               	rlf	i1___wmul@multiplicand+1,f
  6500  0F90  36F1               	lsrf	i1___wmul@multiplier+1,f
  6501  0F91  0CF0               	rrf	i1___wmul@multiplier,f
  6502  0F92  0871               	movf	i1___wmul@multiplier+1,w
  6503  0F93  0470               	iorwf	i1___wmul@multiplier,w
  6504  0F94  1D03               	skipz
  6505  0F95  2F88               	goto	i1l3749
  6506  0F96  0875               	movf	i1___wmul@product+1,w
  6507  0F97  00F1               	movwf	?i1___wmul+1
  6508  0F98  0874               	movf	i1___wmul@product,w
  6509  0F99  00F0               	movwf	?i1___wmul
  6510  0F9A  0008               	return
  6511  0F9B                     __end_ofi1___wmul:	
  6512  0F9B                     PL377:	
  6513  0F9B  0709               	addwf	9,w
  6514  0F9C  0709               	addwf	9,w
  6515  0F9D  0709               	addwf	9,w
  6516  0F9E  3E20               	addlw	32
  6517  0F9F  0086               	movwf	6
  6518  0FA0  0008               	return
  6519  0FA1                     __end_ofPL377:	
  6520  0FA1                     PL383:	
  6521  0FA1  0086               	movwf	6
  6522  0FA2  0187               	clrf	7
  6523  0FA3  0876               	movf	?i1_pic16_linear_addr,w
  6524  0FA4  3FC0               	movwi [0]fsr1
  6525  0FA5  0877               	movf	?i1_pic16_linear_addr+1,w
  6526  0FA6  3FC1               	movwi [1]fsr1
  6527  0FA7  083C               	movf	i1init_endpoints@i,w
  6528  0FA8  0008               	return
  6529  0FA9                     __end_ofPL383:	
  6530  0FA9                     PL403:	
  6531  0FA9  0086               	movwf	6
  6532  0FAA  3003               	movlw	3	; select bank7/8
  6533  0FAB  0087               	movwf	7
  6534  0FAC  3F40               	moviw [0]fsr1
  6535  0FAD  00F6               	movwf	i1pic16_linear_addr@ptr
  6536  0FAE  3F41               	moviw [1]fsr1
  6537  0FAF  00F7               	movwf	i1pic16_linear_addr@ptr+1
  6538  0FB0  0008               	return
  6539  0FB1                     __end_ofPL403:	
  6540  0FB1                     PL421:	
  6541  0FB1  01F2               	clrf	i1memset@c
  6542  0FB2  01F3               	clrf	i1memset@c+1
  6543  0FB3  00F4               	movwf	i1memset@n
  6544  0FB4  01F5               	clrf	i1memset@n+1
  6545  0FB5  0008               	return
  6546  0FB6                     __end_ofPL421:	
  6547  0FB6                     __ptext8:	
  6548 ;; *************** function _usb_arm_out_endpoint *****************
  6549 ;; Defined at:
  6550 ;;		line 1598 in file "usb/src/usb.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;  endpoint        1    wreg     unsigned char 
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;  endpoint        1    4[BANK1 ] unsigned char 
  6555 ;;  pid             1    3[BANK1 ] unsigned char 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;		None               void
  6558 ;; Registers used:
  6559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 1E/5
  6562 ;;		On exit  : 1F/1
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6566 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6568 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6569 ;;Total ram usage:        2 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:    9
  6572 ;; This function calls:
  6573 ;;		___bmul
  6574 ;; This function is called by:
  6575 ;;		_main
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           
  6580                           ;psect for function _usb_arm_out_endpoint
  6581  0FB6                     _usb_arm_out_endpoint:	
  6582                           
  6583                           ;incstack = 0
  6584                           ; Regs used in _usb_arm_out_endpoint: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6585                           ;usb_arm_out_endpoint@endpoint stored from wreg
  6586  0FB6  0021               	movlb	1	; select bank1
  6587  0FB7  00A4               	movwf	usb_arm_out_endpoint@endpoint^(0+128)
  6588                           
  6589                           ;usb.c: 1618: uint8_t pid = (ep_buf[endpoint].flags & 0x4)? 1: 0;
  6590  0FB8  3007               	movlw	7
  6591  0FB9  00A0               	movwf	___bmul@multiplicand^(0+128)
  6592  0FBA  0824               	movf	usb_arm_out_endpoint@endpoint^(0+128),w
  6593  0FBB  3187  2783  3188   	fcall	___bmul
  6594  0FBE  3EC0               	addlw	(_ep_buf+6)& (0+255)
  6595  0FBF  0086               	movwf	6
  6596  0FC0  3003               	movlw	3	; select bank7/8
  6597  0FC1  0087               	movwf	7
  6598  0FC2  3000               	movlw	0
  6599  0FC3  1901               	btfsc	1,2
  6600  0FC4  3001               	movlw	1
  6601  0FC5  00A3               	movwf	usb_arm_out_endpoint@pid^(0+128)
  6602                           
  6603                           ;usb.c: 1619: if (pid)
  6604  0FC6  0823               	movf	usb_arm_out_endpoint@pid^(0+128),w
  6605  0FC7  1903               	btfsc	3,2
  6606  0FC8  2FD9               	goto	l4989
  6607  0FC9  0824               	movf	usb_arm_out_endpoint@endpoint^(0+128),w
  6608  0FCA  27F5  3188         	fcall	PL373	;call to abstracted procedure
  6609  0FCC  27FB               	fcall	PL419	;call to abstracted procedure
  6610  0FCD  3187  2783  3188   	fcall	___bmul
  6611  0FD0  3EBE               	addlw	(_ep_buf+4)& (0+255)
  6612  0FD1  319C  24E2  3188   	fcall	PL365	;call to abstracted procedure
  6613  0FD4  0824               	movf	usb_arm_out_endpoint@endpoint^(0+128),w
  6614  0FD5  279B  3188         	fcall	PL377	;call to abstracted procedure
  6615  0FD7  30C8               	movlw	200
  6616  0FD8  2FE7               	goto	L3
  6617  0FD9                     l4989:	
  6618  0FD9  0824               	movf	usb_arm_out_endpoint@endpoint^(0+128),w
  6619  0FDA  27F5  3188         	fcall	PL373	;call to abstracted procedure
  6620  0FDC  27FB               	fcall	PL419	;call to abstracted procedure
  6621  0FDD  3187  2783  3188   	fcall	___bmul
  6622  0FE0  3EBE               	addlw	(_ep_buf+4)& (0+255)
  6623  0FE1  319C  24E2  3188   	fcall	PL365	;call to abstracted procedure
  6624  0FE4  0824               	movf	usb_arm_out_endpoint@endpoint^(0+128),w
  6625  0FE5  279B               	fcall	PL377	;call to abstracted procedure
  6626  0FE6  3088               	movlw	136
  6627  0FE7                     L3:	
  6628  0FE7  0187               	clrf	7
  6629  0FE8  0081               	movwf	1
  6630                           
  6631                           ;usb.c: 1628: ep_buf[endpoint].flags ^= 0x4;
  6632  0FE9  3007               	movlw	7
  6633  0FEA  00A0               	movwf	___bmul@multiplicand^(0+128)
  6634  0FEB  0824               	movf	usb_arm_out_endpoint@endpoint^(0+128),w
  6635  0FEC  3187  2783         	fcall	___bmul
  6636  0FEE  3EC0               	addlw	(_ep_buf+6)& (0+255)
  6637  0FEF  0086               	movwf	6
  6638  0FF0  3003               	movlw	3	; select bank7/8
  6639  0FF1  0087               	movwf	7
  6640  0FF2  3004               	movlw	4
  6641  0FF3  0681               	xorwf	1,f
  6642  0FF4  0008               	return
  6643  0FF5                     __end_of_usb_arm_out_endpoint:	
  6644  0FF5                     PL373:	
  6645  0FF5  0709               	addwf	9,w
  6646  0FF6  0709               	addwf	9,w
  6647  0FF7  0709               	addwf	9,w
  6648  0FF8  3E21               	addlw	33
  6649  0FF9  0086               	movwf	6
  6650  0FFA  0008               	return
  6651  0FFB                     __end_ofPL373:	
  6652  0FFB                     PL419:	
  6653  0FFB  3007               	movlw	7
  6654  0FFC  0187               	clrf	7
  6655  0FFD  00A0               	movwf	___bmul@multiplicand^(0+128)
  6656  0FFE  0824               	movf	usb_arm_out_endpoint@endpoint^(0+128),w
  6657  0FFF  0008               	return
  6658  1000                     __end_ofPL419:	
  6659                           
  6660                           	psect	text3
  6661  1B9E                     __ptext3:	
  6662 ;; *************** function _usb_init *****************
  6663 ;; Defined at:
  6664 ;;		line 561 in file "usb/src/usb.c"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;		None
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  ep              2   22[BANK1 ] PTR volatile struct .
  6669 ;;		 -> UEP0(1), 
  6670 ;;  i               1   21[BANK1 ] unsigned char 
  6671 ;; Return value:  Size  Location     Type
  6672 ;;		None               void
  6673 ;; Registers used:
  6674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6675 ;; Tracked objects:
  6676 ;;		On entry : 17F/7
  6677 ;;		On exit  : 1F/1
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6681 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6682 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6683 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6684 ;;Total ram usage:        5 bytes
  6685 ;; Hardware stack levels used:    1
  6686 ;; Hardware stack levels required when called:   11
  6687 ;; This function calls:
  6688 ;;		_init_endpoints
  6689 ;;		_memset
  6690 ;;		_reset_ep0_data_stage
  6691 ;; This function is called by:
  6692 ;;		_main
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           
  6697                           ;psect for function _usb_init
  6698  1B9E                     _usb_init:	
  6699                           
  6700                           ;incstack = 0
  6701                           ; Regs used in _usb_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6702                           ;usb.c: 563: uint8_t i;
  6703                           ;usb.c: 567: do { UCFGbits.PPB0 = 0 & 1; UCFGbits.PPB1 = (0 & 2)? 1: 0; } while (0);
  6704  1B9E  003D               	movlb	29	; select bank29
  6705  1B9F  1011               	bcf	17,0	;volatile
  6706  1BA0  1091               	bcf	17,1	;volatile
  6707                           
  6708                           ;usb.c: 573: UIE = 0x0;
  6709  1BA1  0192               	clrf	18	;volatile
  6710                           
  6711                           ;usb.c: 574: UEIE = 0x0;
  6712  1BA2  0197               	clrf	23	;volatile
  6713                           
  6714                           ;usb.c: 576: UCONbits.USBEN = 1;
  6715  1BA3  158E               	bsf	14,3	;volatile
  6716                           
  6717                           ;usb.c: 584: UCFGbits.UPUEN = 1;
  6718  1BA4  1611               	bsf	17,4	;volatile
  6719                           
  6720                           ;usb.c: 592: UCFGbits.FSEN = 1;
  6721  1BA5  1511               	bsf	17,2	;volatile
  6722                           
  6723                           ;usb.c: 595: UIRbits.TRNIF = 0;
  6724  1BA6  1190               	bcf	16,3	;volatile
  6725                           
  6726                           ;usb.c: 596: UIRbits.TRNIF = 0;
  6727  1BA7  1190               	bcf	16,3	;volatile
  6728                           
  6729                           ;usb.c: 597: UIRbits.TRNIF = 0;
  6730  1BA8  1190               	bcf	16,3	;volatile
  6731                           
  6732                           ;usb.c: 598: UIRbits.TRNIF = 0;
  6733  1BA9  1190               	bcf	16,3	;volatile
  6734                           
  6735                           ;usb.c: 600: UIR = 0;
  6736  1BAA  0190               	clrf	16	;volatile
  6737                           
  6738                           ;usb.c: 603: UIEbits.TRNIE = 1;
  6739  1BAB  1592               	bsf	18,3	;volatile
  6740                           
  6741                           ;usb.c: 604: UIEbits.STALLIE = 1;
  6742  1BAC  1692               	bsf	18,5	;volatile
  6743                           
  6744                           ;usb.c: 605: UIEbits.URSTIE = 1;
  6745  1BAD  1412               	bsf	18,0	;volatile
  6746                           
  6747                           ;usb.c: 650: memset(((UEP1bits_t*) (&UEP0 + 1 * (0))), 0x0, sizeof(*((UEP1bits_t*) (&UEP
      +                          0 + 1 * (0)))) * 16);
  6748  1BAE  3098               	movlw	152
  6749  1BAF  0021               	movlb	1	; select bank1
  6750  1BB0  00A0               	movwf	memset@p1^(0+128)
  6751  1BB1  300E               	movlw	14
  6752  1BB2  00A1               	movwf	(memset@p1^(0+128)+1)
  6753  1BB3  3010               	movlw	16
  6754  1BB4  2504               	fcall	PL411	;call to abstracted procedure
  6755  1BB5  3192  22F2  319B   	fcall	_memset
  6756                           
  6757                           ;usb.c: 653: ((UEP1bits_t*) (&UEP0 + 1 * (0)))->EPHSHK = 1;
  6758  1BB8  003D               	movlb	29	; select bank29
  6759  1BB9  1618               	bsf	24,4
  6760                           
  6761                           ;usb.c: 654: ((UEP1bits_t*) (&UEP0 + 1 * (0)))->EPCONDIS = 0;
  6762  1BBA  1198               	bcf	24,3
  6763                           
  6764                           ;usb.c: 655: ((UEP1bits_t*) (&UEP0 + 1 * (0)))->EPOUTEN = 1;
  6765  1BBB  1518               	bsf	24,2
  6766                           
  6767                           ;usb.c: 656: ((UEP1bits_t*) (&UEP0 + 1 * (0)))->EPINEN = 1;
  6768  1BBC  1498               	bsf	24,1
  6769                           
  6770                           ;usb.c: 657: ((UEP1bits_t*) (&UEP0 + 1 * (0)))->EPSTALL = 0;
  6771  1BBD  1018               	bcf	24,0
  6772                           
  6773                           ;usb.c: 659: for (i = 1; i <= 2; i++) {
  6774  1BBE  0021               	movlb	1	; select bank1
  6775  1BBF  01B5               	clrf	usb_init@i^(0+128)
  6776  1BC0  0AB5               	incf	usb_init@i^(0+128),f
  6777  1BC1                     l4879:	
  6778                           
  6779                           ;usb.c: 660: volatile UEP1bits_t *ep = ((UEP1bits_t*) (&UEP0 + 1 * (i)));
  6780  1BC1  0835               	movf	usb_init@i^(0+128),w
  6781  1BC2  3E98               	addlw	152
  6782  1BC3  00B3               	movwf	??_usb_init^(0+128)
  6783  1BC4  300E               	movlw	14
  6784  1BC5  01B4               	clrf	(??_usb_init^(0+128)+1)
  6785  1BC6  3DB4               	addwfc	(??_usb_init^(0+128)+1),f
  6786  1BC7  0833               	movf	??_usb_init^(0+128),w
  6787  1BC8  00B6               	movwf	usb_init@ep^(0+128)
  6788  1BC9  0834               	movf	(??_usb_init+1)^(0+128),w
  6789  1BCA  00B7               	movwf	(usb_init@ep+1)^(0+128)
  6790                           
  6791                           ;usb.c: 661: ep->EPHSHK = 1;
  6792  1BCB  0836               	movf	usb_init@ep^(0+128),w
  6793  1BCC  0086               	movwf	6
  6794  1BCD  0837               	movf	(usb_init@ep+1)^(0+128),w
  6795  1BCE  0087               	movwf	7
  6796  1BCF  1601               	bsf	1,4
  6797                           
  6798                           ;usb.c: 662: ep->EPCONDIS = 1;
  6799  1BD0  0836               	movf	usb_init@ep^(0+128),w
  6800  1BD1  0086               	movwf	6
  6801  1BD2  0837               	movf	(usb_init@ep+1)^(0+128),w
  6802  1BD3  0087               	movwf	7
  6803  1BD4  1581               	bsf	1,3
  6804                           
  6805                           ;usb.c: 663: ep->EPOUTEN = 1;
  6806  1BD5  0836               	movf	usb_init@ep^(0+128),w
  6807  1BD6  0086               	movwf	6
  6808  1BD7  0837               	movf	(usb_init@ep+1)^(0+128),w
  6809  1BD8  0087               	movwf	7
  6810  1BD9  1501               	bsf	1,2
  6811                           
  6812                           ;usb.c: 664: ep->EPINEN = 1;
  6813  1BDA  0836               	movf	usb_init@ep^(0+128),w
  6814  1BDB  0086               	movwf	6
  6815  1BDC  0837               	movf	(usb_init@ep+1)^(0+128),w
  6816  1BDD  0087               	movwf	7
  6817  1BDE  1481               	bsf	1,1
  6818                           
  6819                           ;usb.c: 665: ep->EPSTALL = 0;
  6820  1BDF  0836               	movf	usb_init@ep^(0+128),w
  6821  1BE0  0086               	movwf	6
  6822  1BE1  0837               	movf	(usb_init@ep+1)^(0+128),w
  6823  1BE2  0087               	movwf	7
  6824  1BE3  3003               	movlw	3
  6825  1BE4  1001               	bcf	1,0
  6826  1BE5  0AB5               	incf	usb_init@i^(0+128),f
  6827  1BE6  0235               	subwf	usb_init@i^(0+128),w
  6828  1BE7  1C03               	skipc
  6829  1BE8  2BC1               	goto	l4879
  6830                           
  6831                           ;usb.c: 666: }
  6832                           ;usb.c: 669: UADDR = 0x0;
  6833  1BE9  003D               	movlb	29	; select bank29
  6834  1BEA  0196               	clrf	22	;volatile
  6835                           
  6836                           ;usb.c: 670: addr_pending = 0;
  6837  1BEB  0026               	movlb	6	; select bank6
  6838  1BEC  01EB               	clrf	_addr_pending^(0+768)
  6839                           
  6840                           ;usb.c: 671: g_configuration = 0;
  6841  1BED  0020               	movlb	0	; select bank0
  6842  1BEE  01EF               	clrf	_g_configuration
  6843                           
  6844                           ;usb.c: 673: init_endpoints();
  6845  1BEF  23F5  319B         	fcall	_init_endpoints
  6846                           
  6847                           ;usb.c: 683: reset_ep0_data_stage();
  6848  1BF1  24D8               	fcall	_reset_ep0_data_stage
  6849                           
  6850                           ;usb.c: 686: PIE2bits.USBIE = 1;
  6851  1BF2  0021               	movlb	1	; select bank1
  6852  1BF3  1512               	bsf	18,2	;volatile
  6853  1BF4  0008               	return
  6854  1BF5                     __end_of_usb_init:	
  6855  1BF5                     __ptext5:	
  6856 ;; *************** function _init_endpoints *****************
  6857 ;; Defined at:
  6858 ;;		line 495 in file "usb/src/usb.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;		None
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;  i               1   18[BANK1 ] unsigned char 
  6863 ;; Return value:  Size  Location     Type
  6864 ;;		None               void
  6865 ;; Registers used:
  6866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6867 ;; Tracked objects:
  6868 ;;		On entry : 1F/0
  6869 ;;		On exit  : 1F/1D
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6873 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6875 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6876 ;;Total ram usage:        1 bytes
  6877 ;; Hardware stack levels used:    1
  6878 ;; Hardware stack levels required when called:   10
  6879 ;; This function calls:
  6880 ;;		___bmul
  6881 ;;		_memset
  6882 ;;		_pic16_linear_addr
  6883 ;; This function is called by:
  6884 ;;		_usb_init
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           
  6889                           ;psect for function _init_endpoints
  6890  1BF5                     _init_endpoints:	
  6891                           
  6892                           ;usb.c: 497: uint8_t i;
  6893                           ;usb.c: 501: UCONbits.PPBRST = 1;
  6894                           
  6895                           ;incstack = 0
  6896                           ; Regs used in _init_endpoints: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6897  1BF5  003D               	movlb	29	; select bank29
  6898  1BF6  170E               	bsf	14,6	;volatile
  6899                           
  6900                           ;usb.c: 503: ep0_buf.flags = 0;
  6901  1BF7  0025               	movlb	5	; select bank5
  6902  1BF8  01EC               	clrf	(_ep0_buf^(0+640)+4)
  6903                           
  6904                           ;usb.c: 504: for (i = 0; i <= 2; i++) {
  6905  1BF9  0021               	movlb	1	; select bank1
  6906  1BFA  01B2               	clrf	init_endpoints@i^(0+128)
  6907  1BFB                     l4331:	
  6908                           
  6909                           ;usb.c: 508: ep_buf[i].flags = 0x4;
  6910  1BFB  3007               	movlw	7
  6911  1BFC  00A0               	movwf	___bmul@multiplicand^(0+128)
  6912  1BFD  0832               	movf	init_endpoints@i^(0+128),w
  6913  1BFE  3187  2783  319B   	fcall	___bmul
  6914  1C01  3EC0               	addlw	(_ep_buf+6)& (0+255)
  6915  1C02  0086               	movwf	6
  6916  1C03  3003               	movlw	3	; select bank7/8
  6917  1C04  0087               	movwf	7
  6918  1C05  3004               	movlw	4
  6919  1C06  0081               	movwf	1
  6920  1C07  3003               	movlw	3
  6921  1C08  0AB2               	incf	init_endpoints@i^(0+128),f
  6922  1C09  0232               	subwf	init_endpoints@i^(0+128),w
  6923  1C0A  1C03               	skipc
  6924  1C0B  2BFB               	goto	l4331
  6925                           
  6926                           ;usb.c: 510: }
  6927                           ;usb.c: 513: memset(bds, 0x0, sizeof(bds));
  6928  1C0C  3020               	movlw	32
  6929  1C0D  00A0               	movwf	memset@p1^(0+128)
  6930  1C0E  3018               	movlw	24
  6931  1C0F  01A1               	clrf	(memset@p1+1)^(0+128)
  6932  1C10  2504               	fcall	PL411	;call to abstracted procedure
  6933  1C11  3192  22F2  319B   	fcall	_memset
  6934                           
  6935                           ;usb.c: 517: bds[0].BDnADR = (uint16_t) pic16_linear_addr(ep0_buf.out);
  6936  1C14  0025               	movlb	5	; select bank5
  6937  1C15  0869               	movf	(_ep0_buf+1)^(0+640),w
  6938  1C16  0021               	movlb	1	; select bank1
  6939  1C17  00A7               	movwf	(pic16_linear_addr@ptr+1)^(0+128)
  6940  1C18  0025               	movlb	5	; select bank5
  6941  1C19  0868               	movf	_ep0_buf^(0+640),w
  6942  1C1A  0021               	movlb	1	; select bank1
  6943  1C1B  00A6               	movwf	pic16_linear_addr@ptr^(0+128)
  6944  1C1C  248A  319B         	fcall	_pic16_linear_addr
  6945  1C1E  0827               	movf	(?_pic16_linear_addr+1)^(0+128),w
  6946  1C1F  0020               	movlb	0	; select bank0
  6947  1C20  00A3               	movwf	35
  6948  1C21  0021               	movlb	1	; select bank1
  6949  1C22  0826               	movf	?_pic16_linear_addr^(0+128),w
  6950  1C23  0020               	movlb	0	; select bank0
  6951  1C24  00A2               	movwf	34
  6952  1C25  3008               	movlw	8
  6953  1C26  00A1               	movwf	33
  6954  1C27  3080               	movlw	128
  6955  1C28  00A0               	movwf	32
  6956                           
  6957                           ;usb.c: 527: bds[1].BDnADR = (uint16_t) pic16_linear_addr(ep0_buf.in);
  6958  1C29  0025               	movlb	5	; select bank5
  6959  1C2A  086B               	movf	(_ep0_buf+3)^(0+640),w
  6960  1C2B  0021               	movlb	1	; select bank1
  6961  1C2C  00A7               	movwf	(pic16_linear_addr@ptr+1)^(0+128)
  6962  1C2D  0025               	movlb	5	; select bank5
  6963  1C2E  086A               	movf	(_ep0_buf+2)^(0+640),w
  6964  1C2F  0021               	movlb	1	; select bank1
  6965  1C30  00A6               	movwf	pic16_linear_addr@ptr^(0+128)
  6966  1C31  248A               	fcall	_pic16_linear_addr
  6967  1C32  0827               	movf	(?_pic16_linear_addr+1)^(0+128),w
  6968  1C33  0020               	movlb	0	; select bank0
  6969  1C34  00A7               	movwf	39
  6970  1C35  0021               	movlb	1	; select bank1
  6971  1C36  0826               	movf	?_pic16_linear_addr^(0+128),w
  6972  1C37  0020               	movlb	0	; select bank0
  6973  1C38  00A6               	movwf	38
  6974  1C39  3008               	movlw	8
  6975  1C3A  00A5               	movwf	37
  6976  1C3B  01A4               	clrf	36
  6977                           
  6978                           ;usb.c: 534: for (i = 1; i <= 2; i++) {
  6979  1C3C  0021               	movlb	1	; select bank1
  6980  1C3D  01B2               	clrf	init_endpoints@i^(0+128)
  6981  1C3E  0AB2               	incf	init_endpoints@i^(0+128),f
  6982  1C3F                     l4357:	
  6983                           
  6984                           ;usb.c: 537: bds[(i) * 2].BDnADR = (uint16_t) pic16_linear_addr(ep_buf[i].out);
  6985  1C3F  3007               	movlw	7
  6986  1C40  00A0               	movwf	___bmul@multiplicand^(0+128)
  6987  1C41  0832               	movf	init_endpoints@i^(0+128),w
  6988  1C42  3187  2783  319B   	fcall	___bmul
  6989  1C45  3EBA               	addlw	_ep_buf& (0+255)
  6990  1C46  24FC  319B         	fcall	PL401	;call to abstracted procedure
  6991  1C48  248A  319B         	fcall	_pic16_linear_addr
  6992  1C4A  0832               	movf	init_endpoints@i^(0+128),w
  6993  1C4B  0709               	addwf	9,w
  6994  1C4C  0709               	addwf	9,w
  6995  1C4D  0709               	addwf	9,w
  6996  1C4E  3E22               	addlw	34
  6997  1C4F  24E8               	fcall	PL385	;call to abstracted procedure
  6998  1C50  318F  27F5  319B   	fcall	PL373	;call to abstracted procedure
  6999  1C53  3007               	movlw	7
  7000  1C54  00A0               	movwf	___bmul@multiplicand^(0+128)
  7001  1C55  0832               	movf	init_endpoints@i^(0+128),w
  7002  1C56  3187  2783  319B   	fcall	___bmul
  7003  1C59  3EBE               	addlw	(_ep_buf+4)& (0+255)
  7004  1C5A  24E2               	fcall	PL365	;call to abstracted procedure
  7005  1C5B  0832               	movf	init_endpoints@i^(0+128),w
  7006  1C5C  318F  279B  319B   	fcall	PL377	;call to abstracted procedure
  7007  1C5F  3088               	movlw	136
  7008  1C60  0187               	clrf	7
  7009  1C61  0081               	movwf	1
  7010                           
  7011                           ;usb.c: 546: bds[(i) * 2 + 1].BDnADR = (uint16_t) pic16_linear_addr(ep_buf[i].in);
  7012  1C62  3007               	movlw	7
  7013  1C63  00A0               	movwf	___bmul@multiplicand^(0+128)
  7014  1C64  0832               	movf	init_endpoints@i^(0+128),w
  7015  1C65  3187  2783  319B   	fcall	___bmul
  7016  1C68  3EBC               	addlw	(_ep_buf+2)& (0+255)
  7017  1C69  24FC  319B         	fcall	PL401	;call to abstracted procedure
  7018  1C6B  248A  319B         	fcall	_pic16_linear_addr
  7019  1C6D  0832               	movf	init_endpoints@i^(0+128),w
  7020  1C6E  0709               	addwf	9,w
  7021  1C6F  0709               	addwf	9,w
  7022  1C70  0709               	addwf	9,w
  7023  1C71  3E26               	addlw	38
  7024  1C72  24E8  319B         	fcall	PL385	;call to abstracted procedure
  7025  1C74  24F0               	fcall	PL395	;call to abstracted procedure
  7026  1C75  00A0               	movwf	___bmul@multiplicand^(0+128)
  7027  1C76  0832               	movf	init_endpoints@i^(0+128),w
  7028  1C77  3187  2783  319B   	fcall	___bmul
  7029  1C7A  3EBF               	addlw	(_ep_buf+5)& (0+255)
  7030  1C7B  24E2  319B         	fcall	PL365	;call to abstracted procedure
  7031  1C7D  0832               	movf	init_endpoints@i^(0+128),w
  7032  1C7E  24F6  319B         	fcall	PL399	;call to abstracted procedure
  7033  1C80  3003               	movlw	3
  7034  1C81  0187               	clrf	7
  7035  1C82  0181               	clrf	1
  7036  1C83  0AB2               	incf	init_endpoints@i^(0+128),f
  7037  1C84  0232               	subwf	init_endpoints@i^(0+128),w
  7038  1C85  1C03               	skipc
  7039  1C86  2C3F               	goto	l4357
  7040                           
  7041                           ;usb.c: 553: }
  7042                           ;usb.c: 555: UCONbits.PPBRST = 0;
  7043  1C87  003D               	movlb	29	; select bank29
  7044  1C88  130E               	bcf	14,6	;volatile
  7045  1C89  0008               	return
  7046  1C8A                     __end_of_init_endpoints:	
  7047  1C8A                     __ptext6:	
  7048 ;; *************** function _pic16_linear_addr *****************
  7049 ;; Defined at:
  7050 ;;		line 456 in file "usb/src/usb.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  ptr             2    6[BANK1 ] PTR void 
  7053 ;;		 -> ep_buffers(155), NULL(0), 
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;  addr            2   16[BANK1 ] unsigned int 
  7056 ;;  low             1   15[BANK1 ] unsigned char 
  7057 ;;  high            1   14[BANK1 ] unsigned char 
  7058 ;; Return value:  Size  Location     Type
  7059 ;;                  2    6[BANK1 ] unsigned int 
  7060 ;; Registers used:
  7061 ;;		wreg, status,2, status,0, pclath, cstack
  7062 ;; Tracked objects:
  7063 ;;		On entry : 1F/1
  7064 ;;		On exit  : 1F/1
  7065 ;;		Unchanged: 0/0
  7066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7067 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7071 ;;Total ram usage:       12 bytes
  7072 ;; Hardware stack levels used:    1
  7073 ;; Hardware stack levels required when called:    9
  7074 ;; This function calls:
  7075 ;;		___wmul
  7076 ;; This function is called by:
  7077 ;;		_init_endpoints
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           
  7082                           ;psect for function _pic16_linear_addr
  7083  1C8A                     _pic16_linear_addr:	
  7084                           
  7085                           ;usb.c: 458: uint8_t high, low;
  7086                           ;usb.c: 459: uint16_t addr = (uint16_t) ptr;
  7087                           
  7088                           ;incstack = 0
  7089                           ; Regs used in _pic16_linear_addr: [wreg+status,2+status,0+pclath+cstack]
  7090  1C8A  0827               	movf	(pic16_linear_addr@ptr+1)^(0+128),w
  7091  1C8B  00B1               	movwf	(pic16_linear_addr@addr+1)^(0+128)
  7092  1C8C  0826               	movf	pic16_linear_addr@ptr^(0+128),w
  7093  1C8D  00B0               	movwf	pic16_linear_addr@addr^(0+128)
  7094                           
  7095                           ;usb.c: 462: if (addr >= 0x2000)
  7096  1C8E  3020               	movlw	32
  7097  1C8F  0231               	subwf	(pic16_linear_addr@addr+1)^(0+128),w
  7098  1C90  3000               	movlw	0
  7099  1C91  1903               	skipnz
  7100  1C92  0230               	subwf	pic16_linear_addr@addr^(0+128),w
  7101                           
  7102                           ;usb.c: 463: return addr;
  7103  1C93  0831               	movf	(pic16_linear_addr@addr+1)^(0+128),w
  7104  1C94  1C03               	skipc
  7105  1C95  2C9A               	goto	L2
  7106  1C96  00A7               	movwf	(?_pic16_linear_addr+1)^(0+128)
  7107  1C97  0830               	movf	pic16_linear_addr@addr^(0+128),w
  7108  1C98  00A6               	movwf	?_pic16_linear_addr^(0+128)
  7109  1C99  0008               	return
  7110  1C9A                     L2:	
  7111                           ;usb.c: 465: high = (addr & 0xff00) >> 8;
  7112                           
  7113  1C9A  00AE               	movwf	pic16_linear_addr@high^(0+128)
  7114                           
  7115                           ;usb.c: 466: low = addr & 0x00ff;
  7116  1C9B  0830               	movf	pic16_linear_addr@addr^(0+128),w
  7117  1C9C  00AF               	movwf	pic16_linear_addr@low^(0+128)
  7118                           
  7119                           ;usb.c: 468: return 0x2000 +
  7120                           ;usb.c: 469: (low & 0x7f) - 0x20 +
  7121                           ;usb.c: 470: ((high << 1) + (low & 0x80)? 1: 0) * 0x50;
  7122  1C9D  3980               	andlw	128
  7123  1C9E  00A8               	movwf	??_pic16_linear_addr^(0+128)
  7124  1C9F  01A9               	clrf	(??_pic16_linear_addr^(0+128)+1)
  7125  1CA0  082E               	movf	pic16_linear_addr@high^(0+128),w
  7126  1CA1  00AA               	movwf	(??_pic16_linear_addr+2)^(0+128)
  7127  1CA2  01AB               	clrf	((??_pic16_linear_addr+2)^(0+128)+1)
  7128  1CA3  35AA               	lslf	(??_pic16_linear_addr+2)^(0+128),f
  7129  1CA4  0DAB               	rlf	((??_pic16_linear_addr+2)^(0+128)+1),f
  7130  1CA5  0828               	movf	??_pic16_linear_addr^(0+128),w
  7131  1CA6  072A               	addwf	(??_pic16_linear_addr+2)^(0+128),w
  7132  1CA7  00AC               	movwf	(??_pic16_linear_addr+4)^(0+128)
  7133  1CA8  0829               	movf	(??_pic16_linear_addr+1)^(0+128),w
  7134  1CA9  3D2B               	addwfc	(??_pic16_linear_addr+3)^(0+128),w
  7135  1CAA  00AD               	movwf	(??_pic16_linear_addr+5)^(0+128)
  7136  1CAB  042C               	iorwf	(??_pic16_linear_addr+4)^(0+128),w
  7137  1CAC  3000               	movlw	0
  7138  1CAD  1D03               	skipz
  7139  1CAE  3001               	movlw	1
  7140  1CAF  00A0               	movwf	___wmul@multiplier^(0+128)
  7141  1CB0  3050               	movlw	80
  7142  1CB1  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
  7143  1CB2  00A2               	movwf	___wmul@multiplicand^(0+128)
  7144  1CB3  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
  7145  1CB4  24C3               	fcall	___wmul
  7146  1CB5  0821               	movf	(?___wmul+1)^(0+128),w
  7147  1CB6  00A7               	movwf	(?_pic16_linear_addr+1)^(0+128)
  7148  1CB7  0820               	movf	?___wmul^(0+128),w
  7149  1CB8  00A6               	movwf	?_pic16_linear_addr^(0+128)
  7150  1CB9  082F               	movf	pic16_linear_addr@low^(0+128),w
  7151  1CBA  397F               	andlw	127
  7152  1CBB  07A6               	addwf	?_pic16_linear_addr^(0+128),f
  7153  1CBC  1803               	skipnc
  7154  1CBD  0AA7               	incf	(?_pic16_linear_addr+1)^(0+128),f
  7155  1CBE  30E0               	movlw	224
  7156  1CBF  07A6               	addwf	?_pic16_linear_addr^(0+128),f
  7157  1CC0  301F               	movlw	31
  7158  1CC1  3DA7               	addwfc	(?_pic16_linear_addr+1)^(0+128),f
  7159  1CC2  0008               	return
  7160  1CC3                     __end_of_pic16_linear_addr:	
  7161  1CC3                     __ptext24:	
  7162 ;; *************** function ___wmul *****************
  7163 ;; Defined at:
  7164 ;;		line 15 in file "/Applications/microchip/xc8/v1.33old/sources/common/Umul16.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  multiplier      2    0[BANK1 ] unsigned int 
  7167 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;  product         2    4[BANK1 ] unsigned int 
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  2    0[BANK1 ] unsigned int 
  7172 ;; Registers used:
  7173 ;;		wreg, status,2, status,0
  7174 ;; Tracked objects:
  7175 ;;		On entry : 1F/1
  7176 ;;		On exit  : 1F/1
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7179 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7180 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7183 ;;Total ram usage:        6 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:    8
  7186 ;; This function calls:
  7187 ;;		Nothing
  7188 ;; This function is called by:
  7189 ;;		_pic16_linear_addr
  7190 ;;		_bdm_update_breakpoints
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           
  7195                           ;psect for function ___wmul
  7196  1CC3                     ___wmul:	
  7197                           
  7198                           ;incstack = 0
  7199                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7200  1CC3  01A4               	clrf	___wmul@product^(0+128)
  7201  1CC4  01A5               	clrf	(___wmul@product+1)^(0+128)
  7202  1CC5                     l3975:	
  7203  1CC5  1C20               	btfss	___wmul@multiplier^(0+128),0
  7204  1CC6  2CCB               	goto	l3979
  7205  1CC7  0822               	movf	___wmul@multiplicand^(0+128),w
  7206  1CC8  07A4               	addwf	___wmul@product^(0+128),f
  7207  1CC9  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  7208  1CCA  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  7209  1CCB                     l3979:	
  7210  1CCB  35A2               	lslf	___wmul@multiplicand^(0+128),f
  7211  1CCC  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  7212  1CCD  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  7213  1CCE  0CA0               	rrf	___wmul@multiplier^(0+128),f
  7214  1CCF  0821               	movf	(___wmul@multiplier+1)^(0+128),w
  7215  1CD0  0420               	iorwf	___wmul@multiplier^(0+128),w
  7216  1CD1  1D03               	skipz
  7217  1CD2  2CC5               	goto	l3975
  7218  1CD3  0825               	movf	(___wmul@product+1)^(0+128),w
  7219  1CD4  00A1               	movwf	(?___wmul+1)^(0+128)
  7220  1CD5  0824               	movf	___wmul@product^(0+128),w
  7221  1CD6  00A0               	movwf	?___wmul^(0+128)
  7222  1CD7  0008               	return
  7223  1CD8                     __end_of___wmul:	
  7224  1CD8                     __ptext4:	
  7225 ;; *************** function _reset_ep0_data_stage *****************
  7226 ;; Defined at:
  7227 ;;		line 474 in file "usb/src/usb.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;		None
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;		None
  7232 ;; Return value:  Size  Location     Type
  7233 ;;		None               void
  7234 ;; Registers used:
  7235 ;;		status,2
  7236 ;; Tracked objects:
  7237 ;;		On entry : 1F/1D
  7238 ;;		On exit  : 1F/0
  7239 ;;		Unchanged: 0/0
  7240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7245 ;;Total ram usage:        0 bytes
  7246 ;; Hardware stack levels used:    1
  7247 ;; Hardware stack levels required when called:    8
  7248 ;; This function calls:
  7249 ;;		Nothing
  7250 ;; This function is called by:
  7251 ;;		_usb_init
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254                           
  7255                           
  7256                           ;psect for function _reset_ep0_data_stage
  7257  1CD8                     _reset_ep0_data_stage:	
  7258                           
  7259                           ;usb.c: 476: ep0_data_stage_in_buffer = (0);
  7260                           
  7261                           ;incstack = 0
  7262                           ; Regs used in _reset_ep0_data_stage: [status,2]
  7263  1CD8  0027               	movlb	7	; select bank7
  7264  1CD9  01B8               	clrf	_ep0_data_stage_in_buffer^(0+896)
  7265  1CDA  01B9               	clrf	(_ep0_data_stage_in_buffer+1)^(0+896)
  7266                           
  7267                           ;usb.c: 477: ep0_data_stage_out_buffer = (0);
  7268  1CDB  0020               	movlb	0	; select bank0
  7269  1CDC  01EE               	clrf	_ep0_data_stage_out_buffer
  7270                           
  7271                           ;usb.c: 478: ep0_data_stage_buf_remaining = 0;
  7272  1CDD  01E9               	clrf	_ep0_data_stage_buf_remaining
  7273  1CDE  01EA               	clrf	_ep0_data_stage_buf_remaining+1
  7274                           
  7275                           ;usb.c: 479: ep0_data_stage_callback = (0);
  7276  1CDF  01EB               	clrf	_ep0_data_stage_callback
  7277  1CE0  01EC               	clrf	_ep0_data_stage_callback+1
  7278  1CE1  0008               	return
  7279  1CE2                     __end_of_reset_ep0_data_stage:	
  7280  1CE2                     PL365:	
  7281  1CE2  0084               	movwf	4
  7282  1CE3  3003               	movlw	3	; select bank7/8
  7283  1CE4  0085               	movwf	5
  7284  1CE5  0800               	movf	0,w
  7285  1CE6  0081               	movwf	1
  7286  1CE7  0008               	return
  7287  1CE8                     __end_ofPL365:	
  7288  1CE8                     PL385:	
  7289  1CE8  0086               	movwf	6
  7290  1CE9  0187               	clrf	7
  7291  1CEA  0826               	movf	?_pic16_linear_addr^(0+128),w
  7292  1CEB  3FC0               	movwi [0]fsr1
  7293  1CEC  0827               	movf	(?_pic16_linear_addr+1)^(0+128),w
  7294  1CED  3FC1               	movwi [1]fsr1
  7295  1CEE  0832               	movf	init_endpoints@i^(0+128),w
  7296  1CEF  0008               	return
  7297  1CF0                     __end_ofPL385:	
  7298  1CF0                     PL395:	
  7299  1CF0  0709               	addwf	9,w
  7300  1CF1  0709               	addwf	9,w
  7301  1CF2  0709               	addwf	9,w
  7302  1CF3  3E25               	addlw	37
  7303  1CF4  0086               	movwf	6
  7304  1CF5  3407               	retlw	7
  7305  1CF6                     __end_ofPL395:	
  7306  1CF6                     PL399:	
  7307  1CF6  0709               	addwf	9,w
  7308  1CF7  0709               	addwf	9,w
  7309  1CF8  0709               	addwf	9,w
  7310  1CF9  3E24               	addlw	36
  7311  1CFA  0086               	movwf	6
  7312  1CFB  0008               	return
  7313  1CFC                     __end_ofPL399:	
  7314  1CFC                     PL401:	
  7315  1CFC  0086               	movwf	6
  7316  1CFD  3003               	movlw	3	; select bank7/8
  7317  1CFE  0087               	movwf	7
  7318  1CFF  3F40               	moviw [0]fsr1
  7319  1D00  00A6               	movwf	pic16_linear_addr@ptr^(0+128)
  7320  1D01  3F41               	moviw [1]fsr1
  7321  1D02  00A7               	movwf	(pic16_linear_addr@ptr+1)^(0+128)
  7322  1D03  0008               	return
  7323  1D04                     __end_ofPL401:	
  7324  1D04                     PL411:	
  7325  1D04  01A2               	clrf	memset@c^(0+128)
  7326  1D05  01A3               	clrf	(memset@c+1)^(0+128)
  7327  1D06  00A4               	movwf	memset@n^(0+128)
  7328  1D07  01A5               	clrf	(memset@n+1)^(0+128)
  7329  1D08  0008               	return
  7330  1D09                     __end_ofPL411:	
  7331                           
  7332                           	psect	text9
  7333  1A3A                     __ptext9:	
  7334 ;; *************** function _led_flash *****************
  7335 ;; Defined at:
  7336 ;;		line 46 in file "user.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;  c               2    0[BANK1 ] int 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;  i               2    6[BANK1 ] int 
  7341 ;;  j               2    4[BANK1 ] int 
  7342 ;; Return value:  Size  Location     Type
  7343 ;;		None               void
  7344 ;; Registers used:
  7345 ;;		wreg, status,2, status,0
  7346 ;; Tracked objects:
  7347 ;;		On entry : 1F/1
  7348 ;;		On exit  : 1F/2
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7351 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7352 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7353 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7354 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7355 ;;Total ram usage:        8 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; Hardware stack levels required when called:    8
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_main
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           
  7366                           ;psect for function _led_flash
  7367  1A3A                     _led_flash:	
  7368                           
  7369                           ;user.c: 48: int i,j;
  7370                           ;user.c: 50: for (j=0;j<c;j++)
  7371                           
  7372                           ;incstack = 0
  7373                           ; Regs used in _led_flash: [wreg+status,2+status,0]
  7374  1A3A  01A4               	clrf	led_flash@j^(0+128)
  7375  1A3B  01A5               	clrf	(led_flash@j+1)^(0+128)
  7376  1A3C                     l5045:	
  7377  1A3C  0825               	movf	(led_flash@j+1)^(0+128),w
  7378  1A3D  3A80               	xorlw	128
  7379  1A3E  00A2               	movwf	??_led_flash^(0+128)
  7380  1A3F  0821               	movf	(led_flash@c+1)^(0+128),w
  7381  1A40  3A80               	xorlw	128
  7382  1A41  0222               	subwf	??_led_flash^(0+128),w
  7383  1A42  1D03               	skipz
  7384  1A43  2A46               	goto	u4305
  7385  1A44  0820               	movf	led_flash@c^(0+128),w
  7386  1A45  0224               	subwf	led_flash@j^(0+128),w
  7387  1A46                     u4305:	
  7388  1A46  1803               	btfsc	3,0
  7389  1A47  2A73               	goto	l428
  7390                           
  7391                           ;user.c: 51: {
  7392                           ;user.c: 52: LATBbits.LATB6=0;
  7393  1A48  0022               	movlb	2	; select bank2
  7394  1A49  130D               	bcf	13,6	;volatile
  7395                           
  7396                           ;user.c: 53: for (i=0;i<20;i++)
  7397  1A4A  0021               	movlb	1	; select bank1
  7398  1A4B  01A6               	clrf	led_flash@i^(0+128)
  7399  1A4C  01A7               	clrf	(led_flash@i+1)^(0+128)
  7400  1A4D                     l5025:	
  7401                           
  7402                           ;user.c: 54: _delay((unsigned long)((10)*(48000000L/4000.0)));
  7403  1A4D  309C               	movlw	156
  7404  1A4E  0021               	movlb	1	; select bank1
  7405  1A4F  00A3               	movwf	(??_led_flash^(0+128)+1)
  7406  1A50  30D7               	movlw	215
  7407  1A51  00A2               	movwf	??_led_flash^(0+128)
  7408  1A52                     u5327:	
  7409  1A52  0BA2               	decfsz	??_led_flash^(0+128),f
  7410  1A53  2A52               	goto	u5327
  7411  1A54  0BA3               	decfsz	(??_led_flash^(0+128)+1),f
  7412  1A55  2A52               	goto	u5327
  7413  1A56  0021               	movlb	1	; select bank1
  7414  1A57  2276  319A         	fcall	PL367	;call to abstracted procedure
  7415  1A59  1C03               	skipc
  7416  1A5A  2A4D               	goto	l5025
  7417                           
  7418                           ;user.c: 55: LATBbits.LATB6=1;
  7419  1A5B  0022               	movlb	2	; select bank2
  7420  1A5C  170D               	bsf	13,6	;volatile
  7421                           
  7422                           ;user.c: 56: for (i=0;i<20;i++)
  7423  1A5D  0021               	movlb	1	; select bank1
  7424  1A5E  01A6               	clrf	led_flash@i^(0+128)
  7425  1A5F  01A7               	clrf	(led_flash@i+1)^(0+128)
  7426  1A60                     l5037:	
  7427                           
  7428                           ;user.c: 57: _delay((unsigned long)((10)*(48000000L/4000.0)));
  7429  1A60  309C               	movlw	156
  7430  1A61  0021               	movlb	1	; select bank1
  7431  1A62  00A3               	movwf	(??_led_flash^(0+128)+1)
  7432  1A63  30D7               	movlw	215
  7433  1A64  00A2               	movwf	??_led_flash^(0+128)
  7434  1A65                     u5337:	
  7435  1A65  0BA2               	decfsz	??_led_flash^(0+128),f
  7436  1A66  2A65               	goto	u5337
  7437  1A67  0BA3               	decfsz	(??_led_flash^(0+128)+1),f
  7438  1A68  2A65               	goto	u5337
  7439  1A69  0021               	movlb	1	; select bank1
  7440  1A6A  2276  319A         	fcall	PL367	;call to abstracted procedure
  7441  1A6C  1C03               	skipc
  7442  1A6D  2A60               	goto	l5037
  7443  1A6E  0021               	movlb	1	; select bank1
  7444  1A6F  0AA4               	incf	led_flash@j^(0+128),f
  7445  1A70  1903               	skipnz
  7446  1A71  0AA5               	incf	(led_flash@j+1)^(0+128),f
  7447  1A72  2A3C               	goto	l5045
  7448  1A73                     l428:	
  7449                           
  7450                           ;user.c: 58: }
  7451                           ;user.c: 59: LATBbits.LATB6=0;
  7452  1A73  0022               	movlb	2	; select bank2
  7453  1A74  130D               	bcf	13,6	;volatile
  7454  1A75  0008               	return
  7455  1A76                     __end_of_led_flash:	
  7456  1A76                     PL367:	
  7457  1A76  0AA6               	incf	led_flash@i^(0+128),f
  7458  1A77  1903               	skipnz
  7459  1A78  0AA7               	incf	(led_flash@i+1)^(0+128),f
  7460  1A79  0827               	movf	(led_flash@i+1)^(0+128),w
  7461  1A7A  3A80               	xorlw	128
  7462  1A7B  00A2               	movwf	??_led_flash^(0+128)
  7463  1A7C  3080               	movlw	128
  7464  1A7D  0222               	subwf	??_led_flash^(0+128),w
  7465  1A7E  1D03               	skipz
  7466  1A7F  0008               	return
  7467  1A80  3014               	movlw	20
  7468  1A81  0226               	subwf	led_flash@i^(0+128),w
  7469  1A82  0008               	return
  7470  1A83                     __end_ofPL367:	
  7471                           
  7472                           	psect	text10
  7473  000C                     __ptext10:	
  7474 ;; *************** function _gdb_process_command *****************
  7475 ;; Defined at:
  7476 ;;		line 37 in file "gdb_stub.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;  msg             1    wreg     PTR unsigned char 
  7479 ;;		 -> main@msg(64), 
  7480 ;;  msg_len         1   34[BANK4 ] unsigned char 
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;  msg             1   56[BANK4 ] PTR unsigned char 
  7483 ;;		 -> main@msg(64), 
  7484 ;;  msg_out        64    0[BANK5 ] unsigned char [64]
  7485 ;;  long_str       24    0        unsigned char [24]
  7486 ;;  x               4   52[BANK4 ] unsigned long 
  7487 ;;  reg_val         4   46[BANK4 ] unsigned long 
  7488 ;;  y               4   40[BANK4 ] unsigned long 
  7489 ;;  i               1   57[BANK4 ] unsigned char 
  7490 ;;  j               1   51[BANK4 ] unsigned char 
  7491 ;;  k               1   50[BANK4 ] unsigned char 
  7492 ;;  reg_num         1   45[BANK4 ] unsigned char 
  7493 ;;  s               1   44[BANK4 ] unsigned char 
  7494 ;;  u               1   39[BANK4 ] unsigned char 
  7495 ;; Return value:  Size  Location     Type
  7496 ;;		None               void
  7497 ;; Registers used:
  7498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 1F/4
  7501 ;;		On exit  : 1A/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7504 ;;      Params:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0
  7505 ;;      Locals:         0       0       0       0       0      19      64       0       0       0       0       0       
      +0       0
  7506 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0
  7507 ;;      Totals:         0       0       0       0       0      24      64       0       0       0       0       0       
      +0       0
  7508 ;;Total ram usage:       88 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:   15
  7511 ;; This function calls:
  7512 ;;		___bmul
  7513 ;;		_bdm_continue
  7514 ;;		_bdm_continue_single_step
  7515 ;;		_bdm_get_data
  7516 ;;		_bdm_get_gpr
  7517 ;;		_bdm_get_spr
  7518 ;;		_bdm_init
  7519 ;;		_bdm_nop
  7520 ;;		_bdm_reset
  7521 ;;		_bdm_set_data
  7522 ;;		_bdm_set_gpr
  7523 ;;		_bdm_set_spr
  7524 ;;		_bdm_update_breakpoints
  7525 ;;		_gdb_extract_bytes
  7526 ;;		_gdb_hexstr
  7527 ;;		_gdb_send
  7528 ;;		_gdb_send_data
  7529 ;;		_gdb_send_end
  7530 ;;		_gdb_send_start
  7531 ;; This function is called by:
  7532 ;;		_main
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536                           
  7537                           ;psect for function _gdb_process_command
  7538  000C                     _gdb_process_command:	
  7539                           
  7540                           ;incstack = 0
  7541                           ; Regs used in _gdb_process_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7542                           ;gdb_process_command@msg stored from wreg
  7543  000C  00D8               	movwf	gdb_process_command@msg^(0+512)
  7544                           
  7545                           ;gdb_stub.c: 39: unsigned char reg_num;
  7546                           ;gdb_stub.c: 41: unsigned long reg_val;
  7547                           ;gdb_stub.c: 42: unsigned char msg_out[64]="";
  7548  000D  30A0               	movlw	low gdb_process_command@msg_out
  7549  000E  0086               	movwf	6
  7550  000F  3002               	movlw	high gdb_process_command@msg_out
  7551  0010  0087               	movwf	7
  7552  0011  3040               	movlw	64
  7553  0012  00C3               	movwf	??_gdb_process_command^(0+512)
  7554  0013  3000               	movlw	0
  7555  0014                     u4360:	
  7556  0014  001E               	movwi fsr1++
  7557  0015  0BC3               	decfsz	??_gdb_process_command^(0+512),f
  7558  0016  2814               	goto	u4360
  7559                           
  7560                           ;gdb_stub.c: 50: if (msg[0]=='q' && msg[1]=='S')
  7561  0017  0858               	movf	gdb_process_command@msg^(0+512),w
  7562  0018  0086               	movwf	6
  7563  0019  3003               	movlw	3	; select bank6/7
  7564  001A  0087               	movwf	7
  7565  001B  0801               	movf	1,w
  7566  001C  3A71               	xorlw	113
  7567  001D  1D03               	skipz
  7568  001E  28AB               	goto	l5139
  7569  001F  0A58               	incf	gdb_process_command@msg^(0+512),w
  7570  0020  0086               	movwf	6
  7571  0021  0801               	movf	1,w
  7572  0022  3A53               	xorlw	83
  7573  0023  1D03               	skipz
  7574  0024  28AB               	goto	l5139
  7575                           
  7576                           ;gdb_stub.c: 51: {
  7577                           ;gdb_stub.c: 52: bdm_init();
  7578  0025  27CD               	fcall	_bdm_init
  7579                           
  7580                           ;gdb_stub.c: 53: bdm_reset();
  7581  0026  3190  2036  3180   	fcall	_bdm_reset
  7582                           
  7583                           ;gdb_stub.c: 54: bdm_nop();
  7584  0029  3188  2070  3180   	fcall	_bdm_nop
  7585                           
  7586                           ;gdb_stub.c: 58: bdm_set_spr(149, 0x4002000F);
  7587  002C  3095               	movlw	149
  7588  002D  0023               	movlb	3	; select bank3
  7589  002E  00D5               	movwf	bdm_set_spr@reg^(0+384)
  7590  002F  3040               	movlw	64
  7591  0030  01D6               	clrf	(bdm_set_spr@reg+1)^(0+384)
  7592  0031  01D7               	clrf	(bdm_set_spr@reg+2)^(0+384)
  7593  0032  01D8               	clrf	(bdm_set_spr@reg+3)^(0+384)
  7594  0033  00DC               	movwf	(bdm_set_spr@value+3)^(0+384)
  7595  0034  3002               	movlw	2
  7596  0035  00DB               	movwf	(bdm_set_spr@value+2)^(0+384)
  7597  0036  300F               	movlw	15
  7598  0037  01DA               	clrf	(bdm_set_spr@value+1)^(0+384)
  7599  0038  00D9               	movwf	bdm_set_spr@value^(0+384)
  7600  0039  2701  3180         	fcall	_bdm_set_spr
  7601                           
  7602                           ;gdb_stub.c: 59: bdm_set_spr((0x20000 | 0x1), 0x000003002);
  7603  003B  0023               	movlb	3	; select bank3
  7604  003C  3002               	movlw	2
  7605  003D  01D8               	clrf	(bdm_set_spr@reg+3)^(0+384)
  7606  003E  00D7               	movwf	(bdm_set_spr@reg+2)^(0+384)
  7607  003F  3001               	movlw	1
  7608  0040  01D6               	clrf	(bdm_set_spr@reg+1)^(0+384)
  7609  0041  00D5               	movwf	bdm_set_spr@reg^(0+384)
  7610  0042  3030               	movlw	48
  7611  0043  01DC               	clrf	(bdm_set_spr@value+3)^(0+384)
  7612  0044  01DB               	clrf	(bdm_set_spr@value+2)^(0+384)
  7613  0045  00DA               	movwf	(bdm_set_spr@value+1)^(0+384)
  7614  0046  3002               	movlw	2
  7615  0047  00D9               	movwf	bdm_set_spr@value^(0+384)
  7616  0048  2701  3180         	fcall	_bdm_set_spr
  7617                           
  7618                           ;gdb_stub.c: 60: bdm_set_spr(27, 0x000003002);
  7619  004A  301B               	movlw	27
  7620  004B  0023               	movlb	3	; select bank3
  7621  004C  00D5               	movwf	bdm_set_spr@reg^(0+384)
  7622  004D  3030               	movlw	48
  7623  004E  01D6               	clrf	(bdm_set_spr@reg+1)^(0+384)
  7624  004F  01D7               	clrf	(bdm_set_spr@reg+2)^(0+384)
  7625  0050  01D8               	clrf	(bdm_set_spr@reg+3)^(0+384)
  7626  0051  01DC               	clrf	(bdm_set_spr@value+3)^(0+384)
  7627  0052  01DB               	clrf	(bdm_set_spr@value+2)^(0+384)
  7628  0053  00DA               	movwf	(bdm_set_spr@value+1)^(0+384)
  7629  0054  3002               	movlw	2
  7630  0055  00D9               	movwf	bdm_set_spr@value^(0+384)
  7631  0056  2701               	fcall	_bdm_set_spr
  7632                           
  7633                           ;gdb_stub.c: 61: bdm_get_spr(148);
  7634  0057  3094               	movlw	148
  7635  0058  0023               	movlb	3	; select bank3
  7636  0059  00D5               	movwf	bdm_get_spr@reg^(0+384)
  7637  005A  01D6               	clrf	(bdm_get_spr@reg+1)^(0+384)
  7638  005B  01D7               	clrf	(bdm_get_spr@reg+2)^(0+384)
  7639  005C  01D8               	clrf	(bdm_get_spr@reg+3)^(0+384)
  7640  005D  3191  213F  3180   	fcall	_bdm_get_spr
  7641                           
  7642                           ;gdb_stub.c: 62: bdm_set_data( 0x2FC004, 0xFF80, 4 );
  7643  0060  302F               	movlw	47
  7644  0061  01D8               	clrf	(bdm_set_data@addr+3)^(0+384)
  7645  0062  00D7               	movwf	(bdm_set_data@addr+2)^(0+384)
  7646  0063  30C0               	movlw	192
  7647  0064  00D6               	movwf	(bdm_set_data@addr+1)^(0+384)
  7648  0065  3004               	movlw	4
  7649  0066  00D5               	movwf	bdm_set_data@addr^(0+384)
  7650  0067  30FF               	movlw	255
  7651  0068  01DC               	clrf	(bdm_set_data@val+3)^(0+384)
  7652  0069  01DB               	clrf	(bdm_set_data@val+2)^(0+384)
  7653  006A  00DA               	movwf	(bdm_set_data@val+1)^(0+384)
  7654  006B  3080               	movlw	128
  7655  006C  00D9               	movwf	bdm_set_data@val^(0+384)
  7656  006D  3004               	movlw	4
  7657  006E  00DD               	movwf	bdm_set_data@size^(0+384)
  7658  006F  319D  2509  3180   	fcall	_bdm_set_data
  7659                           
  7660                           ;gdb_stub.c: 64: for (i=0;i<2;i++)
  7661  0072  0024               	movlb	4	; select bank4
  7662  0073  01D9               	clrf	gdb_process_command@i^(0+512)
  7663  0074                     l5111:	
  7664  0074  3002               	movlw	2
  7665  0075  0259               	subwf	gdb_process_command@i^(0+512),w
  7666  0076  1803               	btfsc	3,0
  7667  0077  288B               	goto	l5121
  7668                           
  7669                           ;gdb_stub.c: 65: watch_points[i].addr=0x0;
  7670  0078  3005               	movlw	5
  7671  0079  0021               	movlb	1	; select bank1
  7672  007A  00A0               	movwf	___bmul@multiplicand^(0+128)
  7673  007B  0024               	movlb	4	; select bank4
  7674  007C  0859               	movf	gdb_process_command@i^(0+512),w
  7675  007D  2783  3180         	fcall	___bmul
  7676  007F  3E60               	addlw	_watch_points& (0+255)
  7677  0080  0086               	movwf	6
  7678  0081  3003               	movlw	3	; select bank6/7
  7679  0082  0087               	movwf	7
  7680  0083  3000               	movlw	0
  7681  0084  3FC0               	movwi [0]fsr1
  7682  0085  3FC1               	movwi [1]fsr1
  7683  0086  3FC2               	movwi [2]fsr1
  7684  0087  3FC3               	movwi [3]fsr1
  7685  0088  0024               	movlb	4	; select bank4
  7686  0089  0AD9               	incf	gdb_process_command@i^(0+512),f
  7687  008A  2874               	goto	l5111
  7688  008B                     l5121:	
  7689                           
  7690                           ;gdb_stub.c: 67: for (i=0;i<4;i++)
  7691  008B  01D9               	clrf	gdb_process_command@i^(0+512)
  7692  008C                     l5123:	
  7693  008C  3004               	movlw	4
  7694  008D  0259               	subwf	gdb_process_command@i^(0+512),w
  7695  008E  1803               	btfsc	3,0
  7696  008F  289E               	goto	l5133
  7697                           
  7698                           ;gdb_stub.c: 68: break_points[i]=0x0;
  7699  0090  0859               	movf	gdb_process_command@i^(0+512),w
  7700  0091  0709               	addwf	9,w
  7701  0092  0709               	addwf	9,w
  7702  0093  3EA0               	addlw	_break_points& (0+255)
  7703  0094  0086               	movwf	6
  7704  0095  3003               	movlw	3	; select bank7/8
  7705  0096  0087               	movwf	7
  7706  0097  3000               	movlw	0
  7707  0098  3FC0               	movwi [0]fsr1
  7708  0099  3FC1               	movwi [1]fsr1
  7709  009A  3FC2               	movwi [2]fsr1
  7710  009B  3FC3               	movwi [3]fsr1
  7711  009C  0AD9               	incf	gdb_process_command@i^(0+512),f
  7712  009D  288C               	goto	l5123
  7713  009E                     l5133:	
  7714                           
  7715                           ;gdb_stub.c: 69: bdm_update_breakpoints();
  7716  009E  3190  2072  3180   	fcall	_bdm_update_breakpoints
  7717                           
  7718                           ;gdb_stub.c: 70: check_freeze=0;
  7719  00A1  0025               	movlb	5	; select bank5
  7720  00A2  3060               	movlw	low (STR_3| (0+32768))
  7721  00A3  01ED               	clrf	_check_freeze^(0+640)
  7722                           
  7723                           ;gdb_stub.c: 71: gdb_send('+', "PackeSize=64;multiprocess-;swbreak+;hwbreak+;qRelocInsn-
      +                          ;vContSupported-");
  7724  00A4  0024               	movlb	4	; select bank4
  7725  00A5  00B5               	movwf	gdb_send@reply^(0+512)
  7726  00A6  3099               	movlw	high (STR_3| (0+32768))
  7727  00A7  00B6               	movwf	(gdb_send@reply^(0+512)+1)
  7728  00A8  302B               	movlw	43
  7729  00A9  3196  2ED1         	ljmp	_gdb_send
  7730  00AB                     l5139:	
  7731                           ;gdb_stub.c: 72: }
  7732                           
  7733                           
  7734                           ;gdb_stub.c: 73: else if (msg[0]=='?')
  7735  00AB  0858               	movf	gdb_process_command@msg^(0+512),w
  7736  00AC  0086               	movwf	6
  7737  00AD  3003               	movlw	3	; select bank6/7
  7738  00AE  0087               	movwf	7
  7739  00AF  0801               	movf	1,w
  7740  00B0  3A3F               	xorlw	63
  7741  00B1  1D03               	skipz
  7742  00B2  28BA               	goto	l5143
  7743                           
  7744                           ;gdb_stub.c: 74: {
  7745                           ;gdb_stub.c: 76: gdb_send('+',"S05");
  7746  00B3  30A9               	movlw	low (STR_2| (0+32768))
  7747  00B4  00B5               	movwf	gdb_send@reply^(0+512)
  7748  00B5  3099               	movlw	high (STR_2| (0+32768))
  7749  00B6  00B6               	movwf	(gdb_send@reply^(0+512)+1)
  7750  00B7  302B               	movlw	43
  7751  00B8  3196  2ED1         	ljmp	_gdb_send
  7752  00BA                     l5143:	
  7753                           ;gdb_stub.c: 77: }
  7754                           
  7755                           
  7756                           ;gdb_stub.c: 78: else if (msg[0]=='g')
  7757  00BA  0858               	movf	gdb_process_command@msg^(0+512),w
  7758  00BB  0086               	movwf	6
  7759  00BC  3003               	movlw	3	; select bank6/7
  7760  00BD  0087               	movwf	7
  7761  00BE  0801               	movf	1,w
  7762  00BF  3A67               	xorlw	103
  7763  00C0  1D03               	skipz
  7764  00C1  291D               	goto	l5161
  7765                           
  7766                           ;gdb_stub.c: 79: {
  7767                           ;gdb_stub.c: 80: gdb_send_start('+', &qchksum);
  7768  00C2  30EF               	movlw	_qchksum& (0+255)
  7769  00C3  0021               	movlb	1	; select bank1
  7770  00C4  00A9               	movwf	gdb_send_start@chksum^(0+128)
  7771  00C5  302B               	movlw	43
  7772  00C6  319E  2679  3180   	fcall	_gdb_send_start
  7773                           
  7774                           ;gdb_stub.c: 81: for (x=0;x<=0x1F;x++)
  7775  00C9  0024               	movlb	4	; select bank4
  7776  00CA  01D4               	clrf	gdb_process_command@x^(0+512)
  7777  00CB  01D5               	clrf	(gdb_process_command@x+1)^(0+512)
  7778  00CC  01D6               	clrf	(gdb_process_command@x+2)^(0+512)
  7779  00CD  01D7               	clrf	(gdb_process_command@x+3)^(0+512)
  7780  00CE                     l5153:	
  7781                           
  7782                           ;gdb_stub.c: 82: {
  7783                           ;gdb_stub.c: 83: gdb_hexstr(&msg_out, bdm_get_gpr(x), 4, 0);
  7784  00CE  30A0               	movlw	low gdb_process_command@msg_out
  7785  00CF  0023               	movlb	3	; select bank3
  7786  00D0  00E8               	movwf	gdb_hexstr@buf^(0+384)
  7787  00D1  3002               	movlw	high gdb_process_command@msg_out
  7788  00D2  00E9               	movwf	(gdb_hexstr@buf+1)^(0+384)
  7789  00D3  0024               	movlb	4	; select bank4
  7790  00D4  0857               	movf	(gdb_process_command@x+3)^(0+512),w
  7791  00D5  0021               	movlb	1	; select bank1
  7792  00D6  00C7               	movwf	(bdm_get_gpr@reg_nr+3)^(0+128)
  7793  00D7  0024               	movlb	4	; select bank4
  7794  00D8  0856               	movf	(gdb_process_command@x+2)^(0+512),w
  7795  00D9  0021               	movlb	1	; select bank1
  7796  00DA  00C6               	movwf	(bdm_get_gpr@reg_nr+2)^(0+128)
  7797  00DB  0024               	movlb	4	; select bank4
  7798  00DC  0855               	movf	(gdb_process_command@x+1)^(0+512),w
  7799  00DD  0021               	movlb	1	; select bank1
  7800  00DE  00C5               	movwf	(bdm_get_gpr@reg_nr+1)^(0+128)
  7801  00DF  0024               	movlb	4	; select bank4
  7802  00E0  0854               	movf	gdb_process_command@x^(0+512),w
  7803  00E1  0021               	movlb	1	; select bank1
  7804  00E2  00C4               	movwf	bdm_get_gpr@reg_nr^(0+128)
  7805  00E3  3193  2309  3180   	fcall	_bdm_get_gpr
  7806  00E6  0847               	movf	(?_bdm_get_gpr+3)^(0+128),w
  7807  00E7  0023               	movlb	3	; select bank3
  7808  00E8  00ED               	movwf	(gdb_hexstr@val+3)^(0+384)
  7809  00E9  0021               	movlb	1	; select bank1
  7810  00EA  0846               	movf	(?_bdm_get_gpr+2)^(0+128),w
  7811  00EB  0023               	movlb	3	; select bank3
  7812  00EC  00EC               	movwf	(gdb_hexstr@val+2)^(0+384)
  7813  00ED  0021               	movlb	1	; select bank1
  7814  00EE  0845               	movf	(?_bdm_get_gpr+1)^(0+128),w
  7815  00EF  0023               	movlb	3	; select bank3
  7816  00F0  00EB               	movwf	(gdb_hexstr@val+1)^(0+384)
  7817  00F1  0021               	movlb	1	; select bank1
  7818  00F2  0844               	movf	?_bdm_get_gpr^(0+128),w
  7819  00F3  0023               	movlb	3	; select bank3
  7820  00F4  00EA               	movwf	gdb_hexstr@val^(0+384)
  7821  00F5  3004               	movlw	4
  7822  00F6  00EE               	movwf	gdb_hexstr@len^(0+384)
  7823  00F7  01EF               	clrf	gdb_hexstr@offset^(0+384)
  7824  00F8  319F  2720  3180   	fcall	_gdb_hexstr
  7825                           
  7826                           ;gdb_stub.c: 84: gdb_send_data(msg_out, &qchksum);
  7827  00FB  30EF               	movlw	_qchksum& (0+255)
  7828  00FC  0021               	movlb	1	; select bank1
  7829  00FD  00AB               	movwf	gdb_send_data@chksum^(0+128)
  7830  00FE  30A0               	movlw	gdb_process_command@msg_out& (0+255)
  7831  00FF  3194  2405  3180   	fcall	_gdb_send_data
  7832  0102  0024               	movlb	4	; select bank4
  7833  0103  0AD4               	incf	gdb_process_command@x^(0+512),f
  7834  0104  1903               	skipnz
  7835  0105  0AD5               	incf	(gdb_process_command@x+1)^(0+512),f
  7836  0106  1903               	skipnz
  7837  0107  0AD6               	incf	(gdb_process_command@x+2)^(0+512),f
  7838  0108  1903               	skipnz
  7839  0109  0AD7               	incf	(gdb_process_command@x+3)^(0+512),f
  7840  010A  3000               	movlw	0
  7841  010B  0257               	subwf	(gdb_process_command@x+3)^(0+512),w
  7842  010C  1D03               	skipz
  7843  010D  2918               	goto	u4435
  7844  010E  3000               	movlw	0
  7845  010F  0256               	subwf	(gdb_process_command@x+2)^(0+512),w
  7846  0110  1D03               	skipz
  7847  0111  2918               	goto	u4435
  7848  0112  3000               	movlw	0
  7849  0113  0255               	subwf	(gdb_process_command@x+1)^(0+512),w
  7850  0114  1D03               	skipz
  7851  0115  2918               	goto	u4435
  7852  0116  3020               	movlw	32
  7853  0117  0254               	subwf	gdb_process_command@x^(0+512),w
  7854  0118                     u4435:	
  7855  0118  1C03               	skipc
  7856  0119  28CE               	goto	l5153
  7857                           
  7858                           ;gdb_stub.c: 85: }
  7859                           ;gdb_stub.c: 86: gdb_send_end(&qchksum);
  7860  011A  30EF               	movlw	_qchksum& (0+255)
  7861  011B  319E  2EBB         	ljmp	_gdb_send_end
  7862  011D                     l5161:	
  7863                           ;gdb_stub.c: 87: }
  7864                           
  7865                           
  7866                           ;gdb_stub.c: 88: else if (msg[0]=='p')
  7867  011D  0858               	movf	gdb_process_command@msg^(0+512),w
  7868  011E  0086               	movwf	6
  7869  011F  3003               	movlw	3	; select bank6/7
  7870  0120  0087               	movwf	7
  7871  0121  0801               	movf	1,w
  7872  0122  3A70               	xorlw	112
  7873  0123  1D03               	skipz
  7874  0124  29E5               	goto	l5195
  7875                           
  7876                           ;gdb_stub.c: 91: j=0;
  7877  0125  01D3               	clrf	gdb_process_command@j^(0+512)
  7878                           
  7879                           ;gdb_stub.c: 92: x=gdb_extract_bytes(msg_len-1, 0, msg);
  7880  0126  0021               	movlb	1	; select bank1
  7881  0127  01A0               	clrf	gdb_extract_bytes@e^(0+128)
  7882  0128  0024               	movlb	4	; select bank4
  7883  0129  0858               	movf	gdb_process_command@msg^(0+512),w
  7884  012A  0021               	movlb	1	; select bank1
  7885  012B  00A1               	movwf	gdb_extract_bytes@msg^(0+128)
  7886  012C  0024               	movlb	4	; select bank4
  7887  012D  0842               	movf	gdb_process_command@msg_len^(0+512),w
  7888  012E  3EFF               	addlw	255
  7889  012F  2790  3180         	fcall	_gdb_extract_bytes
  7890  0131  0823               	movf	(?_gdb_extract_bytes+3)^(0+128),w
  7891  0132  0024               	movlb	4	; select bank4
  7892  0133  00D7               	movwf	(gdb_process_command@x+3)^(0+512)
  7893  0134  0021               	movlb	1	; select bank1
  7894  0135  0822               	movf	(?_gdb_extract_bytes+2)^(0+128),w
  7895  0136  0024               	movlb	4	; select bank4
  7896  0137  00D6               	movwf	(gdb_process_command@x+2)^(0+512)
  7897  0138  0021               	movlb	1	; select bank1
  7898  0139  0821               	movf	(?_gdb_extract_bytes+1)^(0+128),w
  7899  013A  0024               	movlb	4	; select bank4
  7900  013B  00D5               	movwf	(gdb_process_command@x+1)^(0+512)
  7901  013C  0021               	movlb	1	; select bank1
  7902  013D  0820               	movf	?_gdb_extract_bytes^(0+128),w
  7903  013E  0024               	movlb	4	; select bank4
  7904  013F  00D4               	movwf	gdb_process_command@x^(0+512)
  7905                           
  7906                           ;gdb_stub.c: 93: reg_val=x;
  7907  0140  0857               	movf	(gdb_process_command@x+3)^(0+512),w
  7908  0141  00D1               	movwf	(gdb_process_command@reg_val+3)^(0+512)
  7909  0142  0856               	movf	(gdb_process_command@x+2)^(0+512),w
  7910  0143  00D0               	movwf	(gdb_process_command@reg_val+2)^(0+512)
  7911  0144  0855               	movf	(gdb_process_command@x+1)^(0+512),w
  7912  0145  00CF               	movwf	(gdb_process_command@reg_val+1)^(0+512)
  7913  0146  0854               	movf	gdb_process_command@x^(0+512),w
  7914  0147  00CE               	movwf	gdb_process_command@reg_val^(0+512)
  7915                           
  7916                           ;gdb_stub.c: 94: if (x<=0x1f)
  7917  0148  3000               	movlw	0
  7918  0149  0257               	subwf	(gdb_process_command@x+3)^(0+512),w
  7919  014A  1D03               	skipz
  7920  014B  2956               	goto	u4455
  7921  014C  3000               	movlw	0
  7922  014D  0256               	subwf	(gdb_process_command@x+2)^(0+512),w
  7923  014E  1D03               	skipz
  7924  014F  2956               	goto	u4455
  7925  0150  3000               	movlw	0
  7926  0151  0255               	subwf	(gdb_process_command@x+1)^(0+512),w
  7927  0152  1D03               	skipz
  7928  0153  2956               	goto	u4455
  7929  0154  3020               	movlw	32
  7930  0155  0254               	subwf	gdb_process_command@x^(0+512),w
  7931  0156                     u4455:	
  7932                           
  7933                           ;gdb_stub.c: 95: {
  7934                           ;gdb_stub.c: 96: reg_val=bdm_get_gpr(x);
  7935  0156  0857               	movf	(gdb_process_command@x+3)^(0+512),w
  7936  0157  1803               	skipnc
  7937  0158  29A1               	goto	L12
  7938  0159  0021               	movlb	1	; select bank1
  7939  015A  00C7               	movwf	(bdm_get_gpr@reg_nr+3)^(0+128)
  7940  015B  0024               	movlb	4	; select bank4
  7941  015C  0856               	movf	(gdb_process_command@x+2)^(0+512),w
  7942  015D  0021               	movlb	1	; select bank1
  7943  015E  00C6               	movwf	(bdm_get_gpr@reg_nr+2)^(0+128)
  7944  015F  0024               	movlb	4	; select bank4
  7945  0160  0855               	movf	(gdb_process_command@x+1)^(0+512),w
  7946  0161  0021               	movlb	1	; select bank1
  7947  0162  00C5               	movwf	(bdm_get_gpr@reg_nr+1)^(0+128)
  7948  0163  0024               	movlb	4	; select bank4
  7949  0164  0854               	movf	gdb_process_command@x^(0+512),w
  7950  0165  0021               	movlb	1	; select bank1
  7951  0166  00C4               	movwf	bdm_get_gpr@reg_nr^(0+128)
  7952  0167  3193  2309  3180   	fcall	_bdm_get_gpr
  7953  016A  0847               	movf	(?_bdm_get_gpr+3)^(0+128),w
  7954  016B  0024               	movlb	4	; select bank4
  7955  016C  00D1               	movwf	(gdb_process_command@reg_val+3)^(0+512)
  7956  016D  0021               	movlb	1	; select bank1
  7957  016E  0846               	movf	(?_bdm_get_gpr+2)^(0+128),w
  7958  016F  0024               	movlb	4	; select bank4
  7959  0170  00D0               	movwf	(gdb_process_command@reg_val+2)^(0+512)
  7960  0171  0021               	movlb	1	; select bank1
  7961  0172  0845               	movf	(?_bdm_get_gpr+1)^(0+128),w
  7962  0173  0024               	movlb	4	; select bank4
  7963  0174  00CF               	movwf	(gdb_process_command@reg_val+1)^(0+512)
  7964  0175  0021               	movlb	1	; select bank1
  7965  0176  0844               	movf	?_bdm_get_gpr^(0+128),w
  7966  0177  299E               	goto	L9
  7967  0178                     l5175:	
  7968                           ;gdb_stub.c: 97: }
  7969                           
  7970  0178  3095               	movlw	149
  7971  0179  2989               	goto	L10
  7972  017A                     l5177:	
  7973  017A  3094               	movlw	148
  7974  017B  2989               	goto	L10
  7975  017C                     l5179:	
  7976  017C  3008               	movlw	8
  7977  017D  2989               	goto	L10
  7978  017E                     l5181:	
  7979  017E  301B               	movlw	27
  7980  017F  2989               	goto	L10
  7981  0180                     l5183:	
  7982  0180  0023               	movlb	3	; select bank3
  7983  0181  3002               	movlw	2
  7984  0182  01D8               	clrf	(bdm_get_spr@reg+3)^(0+384)
  7985  0183  00D7               	movwf	(bdm_get_spr@reg+2)^(0+384)
  7986  0184  3001               	movlw	1
  7987  0185  01D6               	clrf	(bdm_get_spr@reg+1)^(0+384)
  7988  0186  00D5               	movwf	bdm_get_spr@reg^(0+384)
  7989  0187  298E               	goto	L11
  7990  0188                     l5185:	
  7991  0188  301A               	movlw	26
  7992  0189                     L10:	
  7993  0189  0023               	movlb	3	; select bank3
  7994  018A  00D5               	movwf	bdm_get_spr@reg^(0+384)
  7995  018B  01D6               	clrf	(bdm_get_spr@reg+1)^(0+384)
  7996  018C  01D7               	clrf	(bdm_get_spr@reg+2)^(0+384)
  7997  018D  01D8               	clrf	(bdm_get_spr@reg+3)^(0+384)
  7998  018E                     L11:	
  7999  018E  3191  213F  3180   	fcall	_bdm_get_spr
  8000  0191  0858               	movf	(?_bdm_get_spr+3)^(0+384),w
  8001  0192  0024               	movlb	4	; select bank4
  8002  0193  00D1               	movwf	(gdb_process_command@reg_val+3)^(0+512)
  8003  0194  0023               	movlb	3	; select bank3
  8004  0195  0857               	movf	(?_bdm_get_spr+2)^(0+384),w
  8005  0196  0024               	movlb	4	; select bank4
  8006  0197  00D0               	movwf	(gdb_process_command@reg_val+2)^(0+512)
  8007  0198  0023               	movlb	3	; select bank3
  8008  0199  0856               	movf	(?_bdm_get_spr+1)^(0+384),w
  8009  019A  0024               	movlb	4	; select bank4
  8010  019B  00CF               	movwf	(gdb_process_command@reg_val+1)^(0+512)
  8011  019C  0023               	movlb	3	; select bank3
  8012  019D  0855               	movf	?_bdm_get_spr^(0+384),w
  8013  019E                     L9:	
  8014  019E  0024               	movlb	4	; select bank4
  8015  019F  00CE               	movwf	gdb_process_command@reg_val^(0+512)
  8016  01A0  29C3               	goto	l5191
  8017  01A1                     L12:	
  8018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8019                           ; Switch size 1, requested type "space"
  8020                           ; Number of cases is 1, Range of values is 0 to 0
  8021                           ; switch strategies available:
  8022                           ; Name         Instructions Cycles
  8023                           ; simple_byte            4     3 (average)
  8024                           ; direct_byte            8     6 (fixed)
  8025                           ; jumptable            260     6 (fixed)
  8026                           ;	Chosen strategy is simple_byte
  8027                           
  8028  01A1  3A00               	xorlw	0	; case 0
  8029  01A2  1903               	skipnz
  8030  01A3  29BE               	goto	l5755
  8031  01A4  29C3               	goto	l5191
  8032  01A5                     l5753:	
  8033                           
  8034                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8035                           ; Switch size 1, requested type "space"
  8036                           ; Number of cases is 1, Range of values is 0 to 0
  8037                           ; switch strategies available:
  8038                           ; Name         Instructions Cycles
  8039                           ; simple_byte            4     3 (average)
  8040                           ; direct_byte            8     6 (fixed)
  8041                           ; jumptable            260     6 (fixed)
  8042                           ;	Chosen strategy is simple_byte
  8043  01A5  0855               	movf	(gdb_process_command@x+1)^(0+512),w
  8044  01A6  3A00               	xorlw	0	; case 0
  8045  01A7  1903               	skipnz
  8046  01A8  29AA               	goto	l5757
  8047  01A9  29C3               	goto	l5191
  8048  01AA                     l5757:	
  8049                           
  8050                           ; Switch size 1, requested type "space"
  8051                           ; Number of cases is 6, Range of values is 64 to 70
  8052                           ; switch strategies available:
  8053                           ; Name         Instructions Cycles
  8054                           ; simple_byte           19    10 (average)
  8055                           ; direct_byte           23     9 (fixed)
  8056                           ; jumptable            263     9 (fixed)
  8057                           ;	Chosen strategy is simple_byte
  8058  01AA  0854               	movf	gdb_process_command@x^(0+512),w
  8059  01AB  3A40               	xorlw	64	; case 64
  8060  01AC  1903               	skipnz
  8061  01AD  2988               	goto	l5185
  8062  01AE  3A01               	xorlw	1	; case 65
  8063  01AF  1903               	skipnz
  8064  01B0  2980               	goto	l5183
  8065  01B1  3A03               	xorlw	3	; case 66
  8066  01B2  1903               	skipnz
  8067  01B3  297E               	goto	l5181
  8068  01B4  3A01               	xorlw	1	; case 67
  8069  01B5  1903               	skipnz
  8070  01B6  297C               	goto	l5179
  8071  01B7  3A06               	xorlw	6	; case 69
  8072  01B8  1903               	skipnz
  8073  01B9  297A               	goto	l5177
  8074  01BA  3A03               	xorlw	3	; case 70
  8075  01BB  1903               	skipnz
  8076  01BC  2978               	goto	l5175
  8077  01BD  29C3               	goto	l5191
  8078  01BE                     l5755:	
  8079                           
  8080                           ; Switch size 1, requested type "space"
  8081                           ; Number of cases is 1, Range of values is 0 to 0
  8082                           ; switch strategies available:
  8083                           ; Name         Instructions Cycles
  8084                           ; simple_byte            4     3 (average)
  8085                           ; direct_byte            8     6 (fixed)
  8086                           ; jumptable            260     6 (fixed)
  8087                           ;	Chosen strategy is simple_byte
  8088  01BE  0856               	movf	(gdb_process_command@x+2)^(0+512),w
  8089  01BF  3A00               	xorlw	0	; case 0
  8090  01C0  1903               	skipnz
  8091  01C1  29A5               	goto	l5753
  8092  01C2  29C3               	goto	l5191
  8093  01C3                     l5191:	
  8094                           
  8095                           ;gdb_stub.c: 109: }
  8096                           ;gdb_stub.c: 110: gdb_hexstr(&msg_out, reg_val, 4, 0);
  8097  01C3  30A0               	movlw	low gdb_process_command@msg_out
  8098  01C4  0023               	movlb	3	; select bank3
  8099  01C5  00E8               	movwf	gdb_hexstr@buf^(0+384)
  8100  01C6  3002               	movlw	high gdb_process_command@msg_out
  8101  01C7  00E9               	movwf	(gdb_hexstr@buf+1)^(0+384)
  8102  01C8  0024               	movlb	4	; select bank4
  8103  01C9  0851               	movf	(gdb_process_command@reg_val+3)^(0+512),w
  8104  01CA  0023               	movlb	3	; select bank3
  8105  01CB  00ED               	movwf	(gdb_hexstr@val+3)^(0+384)
  8106  01CC  0024               	movlb	4	; select bank4
  8107  01CD  0850               	movf	(gdb_process_command@reg_val+2)^(0+512),w
  8108  01CE  0023               	movlb	3	; select bank3
  8109  01CF  00EC               	movwf	(gdb_hexstr@val+2)^(0+384)
  8110  01D0  0024               	movlb	4	; select bank4
  8111  01D1  084F               	movf	(gdb_process_command@reg_val+1)^(0+512),w
  8112  01D2  0023               	movlb	3	; select bank3
  8113  01D3  00EB               	movwf	(gdb_hexstr@val+1)^(0+384)
  8114  01D4  0024               	movlb	4	; select bank4
  8115  01D5  084E               	movf	gdb_process_command@reg_val^(0+512),w
  8116  01D6  0023               	movlb	3	; select bank3
  8117  01D7  00EA               	movwf	gdb_hexstr@val^(0+384)
  8118  01D8  3004               	movlw	4
  8119  01D9  00EE               	movwf	gdb_hexstr@len^(0+384)
  8120  01DA  01EF               	clrf	gdb_hexstr@offset^(0+384)
  8121  01DB  319F  2720  3180   	fcall	_gdb_hexstr
  8122                           
  8123                           ;gdb_stub.c: 111: gdb_send('+',msg_out);
  8124  01DE  30A0               	movlw	low gdb_process_command@msg_out
  8125  01DF  00B5               	movwf	gdb_send@reply^(0+512)
  8126  01E0  3002               	movlw	high gdb_process_command@msg_out
  8127  01E1  00B6               	movwf	(gdb_send@reply+1)^(0+512)
  8128  01E2  302B               	movlw	43
  8129  01E3  3196  2ED1         	ljmp	_gdb_send
  8130  01E5                     l5195:	
  8131                           ;gdb_stub.c: 112: }
  8132                           
  8133                           
  8134                           ;gdb_stub.c: 113: else if (msg[0]=='P')
  8135  01E5  0858               	movf	gdb_process_command@msg^(0+512),w
  8136  01E6  0086               	movwf	6
  8137  01E7  3003               	movlw	3	; select bank6/7
  8138  01E8  0087               	movwf	7
  8139  01E9  0801               	movf	1,w
  8140  01EA  3A50               	xorlw	80
  8141  01EB  1D03               	skipz
  8142  01EC  2AFA               	goto	l5239
  8143                           
  8144                           ;gdb_stub.c: 114: {
  8145                           ;gdb_stub.c: 116: for (i=msg_len;i>=1;i--)
  8146  01ED  0842               	movf	gdb_process_command@msg_len^(0+512),w
  8147  01EE  00D9               	movwf	gdb_process_command@i^(0+512)
  8148  01EF  08D9               	movf	gdb_process_command@i^(0+512),f
  8149  01F0  1903               	btfsc	3,2
  8150  01F1  29FE               	goto	l5209
  8151  01F2                     l5203:	
  8152                           
  8153                           ;gdb_stub.c: 117: {
  8154                           ;gdb_stub.c: 118: if (msg[i]=='=') break;
  8155  01F2  0859               	movf	gdb_process_command@i^(0+512),w
  8156  01F3  0758               	addwf	gdb_process_command@msg^(0+512),w
  8157  01F4  00C3               	movwf	??_gdb_process_command^(0+512)
  8158  01F5  0086               	movwf	6
  8159  01F6  3003               	movlw	3	; select bank6/7
  8160  01F7  0087               	movwf	7
  8161  01F8  0801               	movf	1,w
  8162  01F9  3A3D               	xorlw	61
  8163  01FA  1903               	btfsc	3,2
  8164  01FB  29FE               	goto	l5209
  8165  01FC  0BD9               	decfsz	gdb_process_command@i^(0+512),f
  8166  01FD  29F2               	goto	l5203
  8167  01FE                     l5209:	
  8168                           
  8169                           ;gdb_stub.c: 119: }
  8170                           ;gdb_stub.c: 120: reg_val=gdb_extract_bytes(msg_len-1, i, msg);
  8171  01FE  0859               	movf	gdb_process_command@i^(0+512),w
  8172  01FF  0021               	movlb	1	; select bank1
  8173  0200  00A0               	movwf	gdb_extract_bytes@e^(0+128)
  8174  0201  0024               	movlb	4	; select bank4
  8175  0202  0858               	movf	gdb_process_command@msg^(0+512),w
  8176  0203  0021               	movlb	1	; select bank1
  8177  0204  00A1               	movwf	gdb_extract_bytes@msg^(0+128)
  8178  0205  0024               	movlb	4	; select bank4
  8179  0206  0842               	movf	gdb_process_command@msg_len^(0+512),w
  8180  0207  3EFF               	addlw	255
  8181  0208  2790  3180         	fcall	_gdb_extract_bytes
  8182  020A  0823               	movf	(?_gdb_extract_bytes+3)^(0+128),w
  8183  020B  0024               	movlb	4	; select bank4
  8184  020C  00D1               	movwf	(gdb_process_command@reg_val+3)^(0+512)
  8185  020D  0021               	movlb	1	; select bank1
  8186  020E  0822               	movf	(?_gdb_extract_bytes+2)^(0+128),w
  8187  020F  0024               	movlb	4	; select bank4
  8188  0210  00D0               	movwf	(gdb_process_command@reg_val+2)^(0+512)
  8189  0211  0021               	movlb	1	; select bank1
  8190  0212  0821               	movf	(?_gdb_extract_bytes+1)^(0+128),w
  8191  0213  0024               	movlb	4	; select bank4
  8192  0214  00CF               	movwf	(gdb_process_command@reg_val+1)^(0+512)
  8193  0215  0021               	movlb	1	; select bank1
  8194  0216  0820               	movf	?_gdb_extract_bytes^(0+128),w
  8195  0217  0024               	movlb	4	; select bank4
  8196  0218  00CE               	movwf	gdb_process_command@reg_val^(0+512)
  8197                           
  8198                           ;gdb_stub.c: 121: reg_num=gdb_extract_bytes(i-1, 0, msg);
  8199  0219  0021               	movlb	1	; select bank1
  8200  021A  01A0               	clrf	gdb_extract_bytes@e^(0+128)
  8201  021B  0024               	movlb	4	; select bank4
  8202  021C  0858               	movf	gdb_process_command@msg^(0+512),w
  8203  021D  0021               	movlb	1	; select bank1
  8204  021E  00A1               	movwf	gdb_extract_bytes@msg^(0+128)
  8205  021F  0024               	movlb	4	; select bank4
  8206  0220  0859               	movf	gdb_process_command@i^(0+512),w
  8207  0221  3EFF               	addlw	255
  8208  0222  2790  3180         	fcall	_gdb_extract_bytes
  8209  0224  0820               	movf	?_gdb_extract_bytes^(0+128),w
  8210  0225  0024               	movlb	4	; select bank4
  8211  0226  00CD               	movwf	gdb_process_command@reg_num^(0+512)
  8212                           
  8213                           ;gdb_stub.c: 122: if (reg_num <= 0x1f)
  8214  0227  3020               	movlw	32
  8215  0228  024D               	subwf	gdb_process_command@reg_num^(0+512),w
  8216  0229  1803               	skipnc
  8217  022A  2A44               	goto	l5215
  8218                           
  8219                           ;gdb_stub.c: 123: bdm_set_gpr(reg_num, reg_val);
  8220  022B  084D               	movf	gdb_process_command@reg_num^(0+512),w
  8221  022C  0021               	movlb	1	; select bank1
  8222  022D  00C4               	movwf	bdm_set_gpr@reg_nr^(0+128)
  8223  022E  01C5               	clrf	(bdm_set_gpr@reg_nr+1)^(0+128)
  8224  022F  01C6               	clrf	(bdm_set_gpr@reg_nr+2)^(0+128)
  8225  0230  01C7               	clrf	(bdm_set_gpr@reg_nr+3)^(0+128)
  8226  0231  0024               	movlb	4	; select bank4
  8227  0232  0851               	movf	(gdb_process_command@reg_val+3)^(0+512),w
  8228  0233  0021               	movlb	1	; select bank1
  8229  0234  00CB               	movwf	(bdm_set_gpr@value+3)^(0+128)
  8230  0235  0024               	movlb	4	; select bank4
  8231  0236  0850               	movf	(gdb_process_command@reg_val+2)^(0+512),w
  8232  0237  0021               	movlb	1	; select bank1
  8233  0238  00CA               	movwf	(bdm_set_gpr@value+2)^(0+128)
  8234  0239  0024               	movlb	4	; select bank4
  8235  023A  084F               	movf	(gdb_process_command@reg_val+1)^(0+512),w
  8236  023B  0021               	movlb	1	; select bank1
  8237  023C  00C9               	movwf	(bdm_set_gpr@value+1)^(0+128)
  8238  023D  0024               	movlb	4	; select bank4
  8239  023E  084E               	movf	gdb_process_command@reg_val^(0+512),w
  8240  023F  0021               	movlb	1	; select bank1
  8241  0240  00C8               	movwf	bdm_set_gpr@value^(0+128)
  8242  0241  319D  25C4  3180   	fcall	_bdm_set_gpr
  8243  0244                     l5215:	
  8244                           
  8245                           ;gdb_stub.c: 124: if (reg_num == 0x41)
  8246  0244  0024               	movlb	4	; select bank4
  8247  0245  084D               	movf	gdb_process_command@reg_num^(0+512),w
  8248  0246  3A41               	xorlw	65
  8249  0247  1D03               	skipz
  8250  0248  2A62               	goto	l5219
  8251                           
  8252                           ;gdb_stub.c: 125: bdm_set_spr((0x20000 | 0x1), reg_val);
  8253  0249  0023               	movlb	3	; select bank3
  8254  024A  3002               	movlw	2
  8255  024B  01D8               	clrf	(bdm_set_spr@reg+3)^(0+384)
  8256  024C  00D7               	movwf	(bdm_set_spr@reg+2)^(0+384)
  8257  024D  3001               	movlw	1
  8258  024E  01D6               	clrf	(bdm_set_spr@reg+1)^(0+384)
  8259  024F  00D5               	movwf	bdm_set_spr@reg^(0+384)
  8260  0250  0024               	movlb	4	; select bank4
  8261  0251  0851               	movf	(gdb_process_command@reg_val+3)^(0+512),w
  8262  0252  0023               	movlb	3	; select bank3
  8263  0253  00DC               	movwf	(bdm_set_spr@value+3)^(0+384)
  8264  0254  0024               	movlb	4	; select bank4
  8265  0255  0850               	movf	(gdb_process_command@reg_val+2)^(0+512),w
  8266  0256  0023               	movlb	3	; select bank3
  8267  0257  00DB               	movwf	(bdm_set_spr@value+2)^(0+384)
  8268  0258  0024               	movlb	4	; select bank4
  8269  0259  084F               	movf	(gdb_process_command@reg_val+1)^(0+512),w
  8270  025A  0023               	movlb	3	; select bank3
  8271  025B  00DA               	movwf	(bdm_set_spr@value+1)^(0+384)
  8272  025C  0024               	movlb	4	; select bank4
  8273  025D  084E               	movf	gdb_process_command@reg_val^(0+512),w
  8274  025E  0023               	movlb	3	; select bank3
  8275  025F  00D9               	movwf	bdm_set_spr@value^(0+384)
  8276  0260  2701  3180         	fcall	_bdm_set_spr
  8277  0262                     l5219:	
  8278                           
  8279                           ;gdb_stub.c: 126: if (reg_num == 0x42)
  8280  0262  0024               	movlb	4	; select bank4
  8281  0263  084D               	movf	gdb_process_command@reg_num^(0+512),w
  8282  0264  3A42               	xorlw	66
  8283  0265  1D03               	skipz
  8284  0266  2A7F               	goto	l5223
  8285                           
  8286                           ;gdb_stub.c: 127: bdm_set_spr(27, reg_val);
  8287  0267  301B               	movlw	27
  8288  0268  0023               	movlb	3	; select bank3
  8289  0269  00D5               	movwf	bdm_set_spr@reg^(0+384)
  8290  026A  01D6               	clrf	(bdm_set_spr@reg+1)^(0+384)
  8291  026B  01D7               	clrf	(bdm_set_spr@reg+2)^(0+384)
  8292  026C  01D8               	clrf	(bdm_set_spr@reg+3)^(0+384)
  8293  026D  0024               	movlb	4	; select bank4
  8294  026E  0851               	movf	(gdb_process_command@reg_val+3)^(0+512),w
  8295  026F  0023               	movlb	3	; select bank3
  8296  0270  00DC               	movwf	(bdm_set_spr@value+3)^(0+384)
  8297  0271  0024               	movlb	4	; select bank4
  8298  0272  0850               	movf	(gdb_process_command@reg_val+2)^(0+512),w
  8299  0273  0023               	movlb	3	; select bank3
  8300  0274  00DB               	movwf	(bdm_set_spr@value+2)^(0+384)
  8301  0275  0024               	movlb	4	; select bank4
  8302  0276  084F               	movf	(gdb_process_command@reg_val+1)^(0+512),w
  8303  0277  0023               	movlb	3	; select bank3
  8304  0278  00DA               	movwf	(bdm_set_spr@value+1)^(0+384)
  8305  0279  0024               	movlb	4	; select bank4
  8306  027A  084E               	movf	gdb_process_command@reg_val^(0+512),w
  8307  027B  0023               	movlb	3	; select bank3
  8308  027C  00D9               	movwf	bdm_set_spr@value^(0+384)
  8309  027D  2701  3180         	fcall	_bdm_set_spr
  8310  027F                     l5223:	
  8311                           
  8312                           ;gdb_stub.c: 128: if (reg_num == 0x40)
  8313  027F  0024               	movlb	4	; select bank4
  8314  0280  084D               	movf	gdb_process_command@reg_num^(0+512),w
  8315  0281  3A40               	xorlw	64
  8316  0282  1D03               	skipz
  8317  0283  2A9C               	goto	l5227
  8318                           
  8319                           ;gdb_stub.c: 129: bdm_set_spr(26, reg_val);
  8320  0284  301A               	movlw	26
  8321  0285  0023               	movlb	3	; select bank3
  8322  0286  00D5               	movwf	bdm_set_spr@reg^(0+384)
  8323  0287  01D6               	clrf	(bdm_set_spr@reg+1)^(0+384)
  8324  0288  01D7               	clrf	(bdm_set_spr@reg+2)^(0+384)
  8325  0289  01D8               	clrf	(bdm_set_spr@reg+3)^(0+384)
  8326  028A  0024               	movlb	4	; select bank4
  8327  028B  0851               	movf	(gdb_process_command@reg_val+3)^(0+512),w
  8328  028C  0023               	movlb	3	; select bank3
  8329  028D  00DC               	movwf	(bdm_set_spr@value+3)^(0+384)
  8330  028E  0024               	movlb	4	; select bank4
  8331  028F  0850               	movf	(gdb_process_command@reg_val+2)^(0+512),w
  8332  0290  0023               	movlb	3	; select bank3
  8333  0291  00DB               	movwf	(bdm_set_spr@value+2)^(0+384)
  8334  0292  0024               	movlb	4	; select bank4
  8335  0293  084F               	movf	(gdb_process_command@reg_val+1)^(0+512),w
  8336  0294  0023               	movlb	3	; select bank3
  8337  0295  00DA               	movwf	(bdm_set_spr@value+1)^(0+384)
  8338  0296  0024               	movlb	4	; select bank4
  8339  0297  084E               	movf	gdb_process_command@reg_val^(0+512),w
  8340  0298  0023               	movlb	3	; select bank3
  8341  0299  00D9               	movwf	bdm_set_spr@value^(0+384)
  8342  029A  2701  3180         	fcall	_bdm_set_spr
  8343  029C                     l5227:	
  8344                           
  8345                           ;gdb_stub.c: 130: if (reg_num == 0x43)
  8346  029C  0024               	movlb	4	; select bank4
  8347  029D  084D               	movf	gdb_process_command@reg_num^(0+512),w
  8348  029E  3A43               	xorlw	67
  8349  029F  1D03               	skipz
  8350  02A0  2AB9               	goto	l5231
  8351                           
  8352                           ;gdb_stub.c: 131: bdm_set_spr(8, reg_val);
  8353  02A1  3008               	movlw	8
  8354  02A2  0023               	movlb	3	; select bank3
  8355  02A3  00D5               	movwf	bdm_set_spr@reg^(0+384)
  8356  02A4  01D6               	clrf	(bdm_set_spr@reg+1)^(0+384)
  8357  02A5  01D7               	clrf	(bdm_set_spr@reg+2)^(0+384)
  8358  02A6  01D8               	clrf	(bdm_set_spr@reg+3)^(0+384)
  8359  02A7  0024               	movlb	4	; select bank4
  8360  02A8  0851               	movf	(gdb_process_command@reg_val+3)^(0+512),w
  8361  02A9  0023               	movlb	3	; select bank3
  8362  02AA  00DC               	movwf	(bdm_set_spr@value+3)^(0+384)
  8363  02AB  0024               	movlb	4	; select bank4
  8364  02AC  0850               	movf	(gdb_process_command@reg_val+2)^(0+512),w
  8365  02AD  0023               	movlb	3	; select bank3
  8366  02AE  00DB               	movwf	(bdm_set_spr@value+2)^(0+384)
  8367  02AF  0024               	movlb	4	; select bank4
  8368  02B0  084F               	movf	(gdb_process_command@reg_val+1)^(0+512),w
  8369  02B1  0023               	movlb	3	; select bank3
  8370  02B2  00DA               	movwf	(bdm_set_spr@value+1)^(0+384)
  8371  02B3  0024               	movlb	4	; select bank4
  8372  02B4  084E               	movf	gdb_process_command@reg_val^(0+512),w
  8373  02B5  0023               	movlb	3	; select bank3
  8374  02B6  00D9               	movwf	bdm_set_spr@value^(0+384)
  8375  02B7  2701  3180         	fcall	_bdm_set_spr
  8376  02B9                     l5231:	
  8377                           
  8378                           ;gdb_stub.c: 132: if (reg_num == 0x45)
  8379  02B9  0024               	movlb	4	; select bank4
  8380  02BA  084D               	movf	gdb_process_command@reg_num^(0+512),w
  8381  02BB  3A45               	xorlw	69
  8382  02BC  1D03               	skipz
  8383  02BD  2AD6               	goto	l5235
  8384                           
  8385                           ;gdb_stub.c: 133: bdm_set_spr(148, reg_val);
  8386  02BE  3094               	movlw	148
  8387  02BF  0023               	movlb	3	; select bank3
  8388  02C0  00D5               	movwf	bdm_set_spr@reg^(0+384)
  8389  02C1  01D6               	clrf	(bdm_set_spr@reg+1)^(0+384)
  8390  02C2  01D7               	clrf	(bdm_set_spr@reg+2)^(0+384)
  8391  02C3  01D8               	clrf	(bdm_set_spr@reg+3)^(0+384)
  8392  02C4  0024               	movlb	4	; select bank4
  8393  02C5  0851               	movf	(gdb_process_command@reg_val+3)^(0+512),w
  8394  02C6  0023               	movlb	3	; select bank3
  8395  02C7  00DC               	movwf	(bdm_set_spr@value+3)^(0+384)
  8396  02C8  0024               	movlb	4	; select bank4
  8397  02C9  0850               	movf	(gdb_process_command@reg_val+2)^(0+512),w
  8398  02CA  0023               	movlb	3	; select bank3
  8399  02CB  00DB               	movwf	(bdm_set_spr@value+2)^(0+384)
  8400  02CC  0024               	movlb	4	; select bank4
  8401  02CD  084F               	movf	(gdb_process_command@reg_val+1)^(0+512),w
  8402  02CE  0023               	movlb	3	; select bank3
  8403  02CF  00DA               	movwf	(bdm_set_spr@value+1)^(0+384)
  8404  02D0  0024               	movlb	4	; select bank4
  8405  02D1  084E               	movf	gdb_process_command@reg_val^(0+512),w
  8406  02D2  0023               	movlb	3	; select bank3
  8407  02D3  00D9               	movwf	bdm_set_spr@value^(0+384)
  8408  02D4  2701  3180         	fcall	_bdm_set_spr
  8409  02D6                     l5235:	
  8410                           
  8411                           ;gdb_stub.c: 134: if (reg_num == 0x46)
  8412  02D6  0024               	movlb	4	; select bank4
  8413  02D7  084D               	movf	gdb_process_command@reg_num^(0+512),w
  8414  02D8  3A46               	xorlw	70
  8415  02D9  1D03               	skipz
  8416  02DA  2AF2               	goto	l887
  8417                           
  8418                           ;gdb_stub.c: 135: bdm_set_spr(149, reg_val);
  8419  02DB  3095               	movlw	149
  8420  02DC  0023               	movlb	3	; select bank3
  8421  02DD  00D5               	movwf	bdm_set_spr@reg^(0+384)
  8422  02DE  01D6               	clrf	(bdm_set_spr@reg+1)^(0+384)
  8423  02DF  01D7               	clrf	(bdm_set_spr@reg+2)^(0+384)
  8424  02E0  01D8               	clrf	(bdm_set_spr@reg+3)^(0+384)
  8425  02E1  0024               	movlb	4	; select bank4
  8426  02E2  0851               	movf	(gdb_process_command@reg_val+3)^(0+512),w
  8427  02E3  0023               	movlb	3	; select bank3
  8428  02E4  00DC               	movwf	(bdm_set_spr@value+3)^(0+384)
  8429  02E5  0024               	movlb	4	; select bank4
  8430  02E6  0850               	movf	(gdb_process_command@reg_val+2)^(0+512),w
  8431  02E7  0023               	movlb	3	; select bank3
  8432  02E8  00DB               	movwf	(bdm_set_spr@value+2)^(0+384)
  8433  02E9  0024               	movlb	4	; select bank4
  8434  02EA  084F               	movf	(gdb_process_command@reg_val+1)^(0+512),w
  8435  02EB  0023               	movlb	3	; select bank3
  8436  02EC  00DA               	movwf	(bdm_set_spr@value+1)^(0+384)
  8437  02ED  0024               	movlb	4	; select bank4
  8438  02EE  084E               	movf	gdb_process_command@reg_val^(0+512),w
  8439  02EF  0023               	movlb	3	; select bank3
  8440  02F0  00D9               	movwf	bdm_set_spr@value^(0+384)
  8441  02F1  2701               	fcall	_bdm_set_spr
  8442  02F2                     l887:	
  8443                           
  8444                           ;gdb_stub.c: 136: gdb_send('+',"OK");
  8445  02F2  30B1               	movlw	low (STR_5| (0+32768))
  8446  02F3  0024               	movlb	4	; select bank4
  8447  02F4  00B5               	movwf	gdb_send@reply^(0+512)
  8448  02F5  3099               	movlw	high (STR_5| (0+32768))
  8449  02F6  00B6               	movwf	(gdb_send@reply^(0+512)+1)
  8450  02F7  302B               	movlw	43
  8451  02F8  3196  2ED1         	ljmp	_gdb_send
  8452  02FA                     l5239:	
  8453                           ;gdb_stub.c: 137: }
  8454                           
  8455                           
  8456                           ;gdb_stub.c: 138: else if (msg[0]=='m')
  8457  02FA  0858               	movf	gdb_process_command@msg^(0+512),w
  8458  02FB  0086               	movwf	6
  8459  02FC  3003               	movlw	3	; select bank6/7
  8460  02FD  0087               	movwf	7
  8461  02FE  0801               	movf	1,w
  8462  02FF  3A6D               	xorlw	109
  8463  0300  1D03               	skipz
  8464  0301  2BE5               	goto	l5279
  8465                           
  8466                           ;gdb_stub.c: 141: j=0;
  8467  0302  01D3               	clrf	gdb_process_command@j^(0+512)
  8468                           
  8469                           ;gdb_stub.c: 142: for (j=msg_len-1;j>0;j--)
  8470  0303  0842               	movf	gdb_process_command@msg_len^(0+512),w
  8471  0304  3EFF               	addlw	255
  8472  0305  00D3               	movwf	gdb_process_command@j^(0+512)
  8473  0306  08D3               	movf	gdb_process_command@j^(0+512),f
  8474  0307  1903               	btfsc	3,2
  8475  0308  2B15               	goto	l5257
  8476  0309                     l5251:	
  8477                           
  8478                           ;gdb_stub.c: 143: {
  8479                           ;gdb_stub.c: 144: if (msg[j]==',') break;
  8480  0309  0853               	movf	gdb_process_command@j^(0+512),w
  8481  030A  0758               	addwf	gdb_process_command@msg^(0+512),w
  8482  030B  00C3               	movwf	??_gdb_process_command^(0+512)
  8483  030C  0086               	movwf	6
  8484  030D  3003               	movlw	3	; select bank6/7
  8485  030E  0087               	movwf	7
  8486  030F  0801               	movf	1,w
  8487  0310  3A2C               	xorlw	44
  8488  0311  1903               	btfsc	3,2
  8489  0312  2B15               	goto	l5257
  8490  0313  0BD3               	decfsz	gdb_process_command@j^(0+512),f
  8491  0314  2B09               	goto	l5251
  8492  0315                     l5257:	
  8493                           
  8494                           ;gdb_stub.c: 145: }
  8495                           ;gdb_stub.c: 146: k=gdb_extract_bytes(msg_len-1, j, msg);
  8496  0315  0853               	movf	gdb_process_command@j^(0+512),w
  8497  0316  0021               	movlb	1	; select bank1
  8498  0317  00A0               	movwf	gdb_extract_bytes@e^(0+128)
  8499  0318  0024               	movlb	4	; select bank4
  8500  0319  0858               	movf	gdb_process_command@msg^(0+512),w
  8501  031A  0021               	movlb	1	; select bank1
  8502  031B  00A1               	movwf	gdb_extract_bytes@msg^(0+128)
  8503  031C  0024               	movlb	4	; select bank4
  8504  031D  0842               	movf	gdb_process_command@msg_len^(0+512),w
  8505  031E  3EFF               	addlw	255
  8506  031F  2790  3180         	fcall	_gdb_extract_bytes
  8507  0321  0820               	movf	?_gdb_extract_bytes^(0+128),w
  8508  0322  0024               	movlb	4	; select bank4
  8509  0323  00D2               	movwf	gdb_process_command@k^(0+512)
  8510                           
  8511                           ;gdb_stub.c: 147: x=gdb_extract_bytes(j-1, 0, msg);
  8512  0324  0021               	movlb	1	; select bank1
  8513  0325  01A0               	clrf	gdb_extract_bytes@e^(0+128)
  8514  0326  0024               	movlb	4	; select bank4
  8515  0327  0858               	movf	gdb_process_command@msg^(0+512),w
  8516  0328  0021               	movlb	1	; select bank1
  8517  0329  00A1               	movwf	gdb_extract_bytes@msg^(0+128)
  8518  032A  0024               	movlb	4	; select bank4
  8519  032B  0853               	movf	gdb_process_command@j^(0+512),w
  8520  032C  3EFF               	addlw	255
  8521  032D  2790               	fcall	_gdb_extract_bytes
  8522  032E  0823               	movf	(?_gdb_extract_bytes+3)^(0+128),w
  8523  032F  0024               	movlb	4	; select bank4
  8524  0330  00D7               	movwf	(gdb_process_command@x+3)^(0+512)
  8525  0331  0021               	movlb	1	; select bank1
  8526  0332  0822               	movf	(?_gdb_extract_bytes+2)^(0+128),w
  8527  0333  0024               	movlb	4	; select bank4
  8528  0334  00D6               	movwf	(gdb_process_command@x+2)^(0+512)
  8529  0335  0021               	movlb	1	; select bank1
  8530  0336  0821               	movf	(?_gdb_extract_bytes+1)^(0+128),w
  8531  0337  0024               	movlb	4	; select bank4
  8532  0338  00D5               	movwf	(gdb_process_command@x+1)^(0+512)
  8533  0339  0021               	movlb	1	; select bank1
  8534  033A  0820               	movf	?_gdb_extract_bytes^(0+128),w
  8535  033B  0024               	movlb	4	; select bank4
  8536  033C  00D4               	movwf	gdb_process_command@x^(0+512)
  8537                           
  8538                           ;gdb_stub.c: 149: gdb_send_start('+', &qchksum);
  8539  033D  30EF               	movlw	_qchksum& (0+255)
  8540  033E  0021               	movlb	1	; select bank1
  8541  033F  00A9               	movwf	gdb_send_start@chksum^(0+128)
  8542  0340  302B               	movlw	43
  8543  0341  319E  2679  3180   	fcall	_gdb_send_start
  8544                           
  8545                           ;gdb_stub.c: 152: for (j=0;j<(k/4);j++)
  8546                           
  8547                           ;gdb_stub.c: 150: if (k>0x400) k=0x400;
  8548  0344  0024               	movlb	4	; select bank4
  8549  0345  01D3               	clrf	gdb_process_command@j^(0+512)
  8550  0346                     l5265:	
  8551  0346  0852               	movf	gdb_process_command@k^(0+512),w
  8552  0347  00C3               	movwf	??_gdb_process_command^(0+512)
  8553  0348  36C3               	lsrf	??_gdb_process_command^(0+512),f
  8554  0349  36C3               	lsrf	??_gdb_process_command^(0+512),f
  8555  034A  0843               	movf	??_gdb_process_command^(0+512),w
  8556  034B  0253               	subwf	gdb_process_command@j^(0+512),w
  8557  034C  1803               	btfsc	3,0
  8558  034D  2B94               	goto	l5267
  8559                           
  8560                           ;gdb_stub.c: 153: {
  8561                           ;gdb_stub.c: 154: gdb_hexstr(&msg_out, bdm_get_data(x+(j*4), 4), 4, 0);
  8562  034E  30A0               	movlw	low gdb_process_command@msg_out
  8563  034F  0023               	movlb	3	; select bank3
  8564  0350  00E8               	movwf	gdb_hexstr@buf^(0+384)
  8565  0351  3002               	movlw	high gdb_process_command@msg_out
  8566  0352  00E9               	movwf	(gdb_hexstr@buf+1)^(0+384)
  8567  0353  0024               	movlb	4	; select bank4
  8568  0354  0853               	movf	gdb_process_command@j^(0+512),w
  8569  0355  00C3               	movwf	??_gdb_process_command^(0+512)
  8570  0356  01C4               	clrf	(??_gdb_process_command^(0+512)+1)
  8571  0357  35C3               	lslf	??_gdb_process_command^(0+512),f
  8572  0358  0DC4               	rlf	(??_gdb_process_command^(0+512)+1),f
  8573  0359  35C3               	lslf	??_gdb_process_command^(0+512),f
  8574  035A  0DC4               	rlf	(??_gdb_process_command^(0+512)+1),f
  8575  035B  0843               	movf	??_gdb_process_command^(0+512),w
  8576  035C  0023               	movlb	3	; select bank3
  8577  035D  00D5               	movwf	bdm_get_data@addr^(0+384)
  8578  035E  0024               	movlb	4	; select bank4
  8579  035F  0844               	movf	(??_gdb_process_command+1)^(0+512),w
  8580  0360  0023               	movlb	3	; select bank3
  8581  0361  00D6               	movwf	(bdm_get_data@addr+1)^(0+384)
  8582  0362  0D89               	rlf	9,f
  8583  0363  3B89               	subwfb	9,f
  8584  0364  0989               	comf	9,f
  8585  0365  00D7               	movwf	(bdm_get_data@addr+2)^(0+384)
  8586  0366  00D8               	movwf	(bdm_get_data@addr+3)^(0+384)
  8587  0367  0024               	movlb	4	; select bank4
  8588  0368  0854               	movf	gdb_process_command@x^(0+512),w
  8589  0369  0023               	movlb	3	; select bank3
  8590  036A  07D5               	addwf	bdm_get_data@addr^(0+384),f
  8591  036B  0024               	movlb	4	; select bank4
  8592  036C  0855               	movf	(gdb_process_command@x+1)^(0+512),w
  8593  036D  0023               	movlb	3	; select bank3
  8594  036E  3DD6               	addwfc	(bdm_get_data@addr+1)^(0+384),f
  8595  036F  0024               	movlb	4	; select bank4
  8596  0370  0856               	movf	(gdb_process_command@x+2)^(0+512),w
  8597  0371  0023               	movlb	3	; select bank3
  8598  0372  3DD7               	addwfc	(bdm_get_data@addr+2)^(0+384),f
  8599  0373  0024               	movlb	4	; select bank4
  8600  0374  0857               	movf	(gdb_process_command@x+3)^(0+512),w
  8601  0375  0023               	movlb	3	; select bank3
  8602  0376  3DD8               	addwfc	(bdm_get_data@addr+3)^(0+384),f
  8603  0377  3004               	movlw	4
  8604  0378  00D9               	movwf	bdm_get_data@size^(0+384)
  8605  0379  319D  255D  3180   	fcall	_bdm_get_data
  8606  037C  0858               	movf	(?_bdm_get_data+3)^(0+384),w
  8607  037D  00ED               	movwf	(gdb_hexstr@val+3)^(0+384)
  8608  037E  0857               	movf	(?_bdm_get_data+2)^(0+384),w
  8609  037F  00EC               	movwf	(gdb_hexstr@val+2)^(0+384)
  8610  0380  0856               	movf	(?_bdm_get_data+1)^(0+384),w
  8611  0381  00EB               	movwf	(gdb_hexstr@val+1)^(0+384)
  8612  0382  0855               	movf	?_bdm_get_data^(0+384),w
  8613  0383  00EA               	movwf	gdb_hexstr@val^(0+384)
  8614  0384  3004               	movlw	4
  8615  0385  00EE               	movwf	gdb_hexstr@len^(0+384)
  8616  0386  01EF               	clrf	gdb_hexstr@offset^(0+384)
  8617  0387  319F  2720  3180   	fcall	_gdb_hexstr
  8618                           
  8619                           ;gdb_stub.c: 155: gdb_send_data(msg_out, &qchksum);
  8620  038A  30EF               	movlw	_qchksum& (0+255)
  8621  038B  0021               	movlb	1	; select bank1
  8622  038C  00AB               	movwf	gdb_send_data@chksum^(0+128)
  8623  038D  30A0               	movlw	gdb_process_command@msg_out& (0+255)
  8624  038E  3194  2405  3180   	fcall	_gdb_send_data
  8625  0391  0024               	movlb	4	; select bank4
  8626  0392  0AD3               	incf	gdb_process_command@j^(0+512),f
  8627  0393  2B46               	goto	l5265
  8628  0394                     l5267:	
  8629                           
  8630                           ;gdb_stub.c: 156: }
  8631                           ;gdb_stub.c: 157: i=j*4;
  8632  0394  0853               	movf	gdb_process_command@j^(0+512),w
  8633  0395  0709               	addwf	9,w
  8634  0396  0709               	addwf	9,w
  8635  0397  00D9               	movwf	gdb_process_command@i^(0+512)
  8636                           
  8637                           ;gdb_stub.c: 158: for (j=0;j<(k%4);j++)
  8638  0398  01D3               	clrf	gdb_process_command@j^(0+512)
  8639  0399                     l5275:	
  8640  0399  0852               	movf	gdb_process_command@k^(0+512),w
  8641  039A  3903               	andlw	3
  8642  039B  0253               	subwf	gdb_process_command@j^(0+512),w
  8643  039C  1803               	btfsc	3,0
  8644  039D  2BE2               	goto	l5277
  8645                           
  8646                           ;gdb_stub.c: 159: {
  8647                           ;gdb_stub.c: 160: gdb_hexstr(&msg_out, bdm_get_data(x+j+i, 1), 1, 0);
  8648  039E  30A0               	movlw	low gdb_process_command@msg_out
  8649  039F  0023               	movlb	3	; select bank3
  8650  03A0  00E8               	movwf	gdb_hexstr@buf^(0+384)
  8651  03A1  3002               	movlw	high gdb_process_command@msg_out
  8652  03A2  00E9               	movwf	(gdb_hexstr@buf+1)^(0+384)
  8653  03A3  0024               	movlb	4	; select bank4
  8654  03A4  0853               	movf	gdb_process_command@j^(0+512),w
  8655  03A5  0023               	movlb	3	; select bank3
  8656  03A6  00D5               	movwf	bdm_get_data@addr^(0+384)
  8657  03A7  01D6               	clrf	(bdm_get_data@addr+1)^(0+384)
  8658  03A8  01D7               	clrf	(bdm_get_data@addr+2)^(0+384)
  8659  03A9  01D8               	clrf	(bdm_get_data@addr+3)^(0+384)
  8660  03AA  0024               	movlb	4	; select bank4
  8661  03AB  0859               	movf	gdb_process_command@i^(0+512),w
  8662  03AC  0023               	movlb	3	; select bank3
  8663  03AD  07D5               	addwf	bdm_get_data@addr^(0+384),f
  8664  03AE  3001               	movlw	1
  8665  03AF  1803               	skipnc
  8666  03B0  07D6               	addwf	(bdm_get_data@addr+1)^(0+384),f
  8667  03B1  1803               	skipnc
  8668  03B2  07D7               	addwf	(bdm_get_data@addr+2)^(0+384),f
  8669  03B3  1803               	skipnc
  8670  03B4  07D8               	addwf	(bdm_get_data@addr+3)^(0+384),f
  8671  03B5  0024               	movlb	4	; select bank4
  8672  03B6  0854               	movf	gdb_process_command@x^(0+512),w
  8673  03B7  0023               	movlb	3	; select bank3
  8674  03B8  07D5               	addwf	bdm_get_data@addr^(0+384),f
  8675  03B9  0024               	movlb	4	; select bank4
  8676  03BA  0855               	movf	(gdb_process_command@x+1)^(0+512),w
  8677  03BB  0023               	movlb	3	; select bank3
  8678  03BC  3DD6               	addwfc	(bdm_get_data@addr+1)^(0+384),f
  8679  03BD  0024               	movlb	4	; select bank4
  8680  03BE  0856               	movf	(gdb_process_command@x+2)^(0+512),w
  8681  03BF  0023               	movlb	3	; select bank3
  8682  03C0  3DD7               	addwfc	(bdm_get_data@addr+2)^(0+384),f
  8683  03C1  0024               	movlb	4	; select bank4
  8684  03C2  0857               	movf	(gdb_process_command@x+3)^(0+512),w
  8685  03C3  0023               	movlb	3	; select bank3
  8686  03C4  3DD8               	addwfc	(bdm_get_data@addr+3)^(0+384),f
  8687  03C5  01D9               	clrf	bdm_get_data@size^(0+384)
  8688  03C6  0AD9               	incf	bdm_get_data@size^(0+384),f
  8689  03C7  319D  255D  3180   	fcall	_bdm_get_data
  8690  03CA  0858               	movf	(?_bdm_get_data+3)^(0+384),w
  8691  03CB  00ED               	movwf	(gdb_hexstr@val+3)^(0+384)
  8692  03CC  0857               	movf	(?_bdm_get_data+2)^(0+384),w
  8693  03CD  00EC               	movwf	(gdb_hexstr@val+2)^(0+384)
  8694  03CE  0856               	movf	(?_bdm_get_data+1)^(0+384),w
  8695  03CF  00EB               	movwf	(gdb_hexstr@val+1)^(0+384)
  8696  03D0  0855               	movf	?_bdm_get_data^(0+384),w
  8697  03D1  00EA               	movwf	gdb_hexstr@val^(0+384)
  8698  03D2  01EE               	clrf	gdb_hexstr@len^(0+384)
  8699  03D3  0AEE               	incf	gdb_hexstr@len^(0+384),f
  8700  03D4  01EF               	clrf	gdb_hexstr@offset^(0+384)
  8701  03D5  319F  2720  3180   	fcall	_gdb_hexstr
  8702                           
  8703                           ;gdb_stub.c: 161: gdb_send_data(msg_out, &qchksum);
  8704  03D8  30EF               	movlw	_qchksum& (0+255)
  8705  03D9  0021               	movlb	1	; select bank1
  8706  03DA  00AB               	movwf	gdb_send_data@chksum^(0+128)
  8707  03DB  30A0               	movlw	gdb_process_command@msg_out& (0+255)
  8708  03DC  3194  2405  3180   	fcall	_gdb_send_data
  8709  03DF  0024               	movlb	4	; select bank4
  8710  03E0  0AD3               	incf	gdb_process_command@j^(0+512),f
  8711  03E1  2B99               	goto	l5275
  8712  03E2                     l5277:	
  8713                           
  8714                           ;gdb_stub.c: 162: }
  8715                           ;gdb_stub.c: 163: gdb_send_end(&qchksum);
  8716  03E2  30EF               	movlw	_qchksum& (0+255)
  8717  03E3  319E  2EBB         	ljmp	_gdb_send_end
  8718  03E5                     l5279:	
  8719                           ;gdb_stub.c: 164: }
  8720                           
  8721                           
  8722                           ;gdb_stub.c: 165: else if (msg[0]=='M')
  8723  03E5  0858               	movf	gdb_process_command@msg^(0+512),w
  8724  03E6  0086               	movwf	6
  8725  03E7  3003               	movlw	3	; select bank6/7
  8726  03E8  0087               	movwf	7
  8727  03E9  0801               	movf	1,w
  8728  03EA  3A4D               	xorlw	77
  8729  03EB  1D03               	skipz
  8730  03EC  2CEF               	goto	l5339
  8731                           
  8732                           ;gdb_stub.c: 166: {
  8733                           ;gdb_stub.c: 167: x=0;
  8734  03ED  01D4               	clrf	gdb_process_command@x^(0+512)
  8735  03EE  01D5               	clrf	(gdb_process_command@x+1)^(0+512)
  8736  03EF  01D6               	clrf	(gdb_process_command@x+2)^(0+512)
  8737  03F0  01D7               	clrf	(gdb_process_command@x+3)^(0+512)
  8738                           
  8739                           ;gdb_stub.c: 169: for (i=msg_len-3;i>=1;i--)
  8740  03F1  0842               	movf	gdb_process_command@msg_len^(0+512),w
  8741  03F2  3EFD               	addlw	253
  8742  03F3  00D9               	movwf	gdb_process_command@i^(0+512)
  8743  03F4  08D9               	movf	gdb_process_command@i^(0+512),f
  8744  03F5  1903               	btfsc	3,2
  8745  03F6  2C03               	goto	l5295
  8746  03F7                     l5289:	
  8747                           
  8748                           ;gdb_stub.c: 170: {
  8749                           ;gdb_stub.c: 171: if (msg[i]==',') break;
  8750  03F7  0859               	movf	gdb_process_command@i^(0+512),w
  8751  03F8  0758               	addwf	gdb_process_command@msg^(0+512),w
  8752  03F9  00C3               	movwf	??_gdb_process_command^(0+512)
  8753  03FA  0086               	movwf	6
  8754  03FB  3003               	movlw	3	; select bank6/7
  8755  03FC  0087               	movwf	7
  8756  03FD  0801               	movf	1,w
  8757  03FE  3A2C               	xorlw	44
  8758  03FF  1903               	btfsc	3,2
  8759  0400  2C03               	goto	l5295
  8760  0401  0BD9               	decfsz	gdb_process_command@i^(0+512),f
  8761  0402  2BF7               	goto	l5289
  8762  0403                     l5295:	
  8763                           
  8764                           ;gdb_stub.c: 172: }
  8765                           ;gdb_stub.c: 174: s=msg[i+1];
  8766  0403  0859               	movf	gdb_process_command@i^(0+512),w
  8767  0404  0758               	addwf	gdb_process_command@msg^(0+512),w
  8768  0405  00C3               	movwf	??_gdb_process_command^(0+512)
  8769  0406  0086               	movwf	6
  8770  0407  3003               	movlw	3	; select bank6/7
  8771  0408  0087               	movwf	7
  8772  0409  3F41               	moviw [1]fsr1
  8773  040A  00CC               	movwf	gdb_process_command@s^(0+512)
  8774                           
  8775                           ;gdb_stub.c: 175: i--;
  8776  040B  03D9               	decf	gdb_process_command@i^(0+512),f
  8777                           
  8778                           ;gdb_stub.c: 177: j=0;
  8779  040C  01D3               	clrf	gdb_process_command@j^(0+512)
  8780  040D                     l5309:	
  8781                           ;gdb_stub.c: 178: while (i>=1)
  8782                           
  8783  040D  08D9               	movf	gdb_process_command@i^(0+512),f
  8784  040E  1903               	btfsc	3,2
  8785  040F  2C38               	goto	l5311
  8786                           
  8787                           ;gdb_stub.c: 179: {
  8788                           ;gdb_stub.c: 180: k=msg[i];
  8789  0410  0859               	movf	gdb_process_command@i^(0+512),w
  8790  0411  0758               	addwf	gdb_process_command@msg^(0+512),w
  8791  0412  00C3               	movwf	??_gdb_process_command^(0+512)
  8792  0413  0086               	movwf	6
  8793  0414  3003               	movlw	3	; select bank6/7
  8794  0415  0087               	movwf	7
  8795  0416  0801               	movf	1,w
  8796  0417  00D2               	movwf	gdb_process_command@k^(0+512)
  8797                           
  8798                           ;gdb_stub.c: 181: if (k > '9') k -= 7;
  8799  0418  303A               	movlw	58
  8800  0419  0252               	subwf	gdb_process_command@k^(0+512),w
  8801  041A  1C03               	skipc
  8802  041B  2C1E               	goto	l907
  8803  041C  3007               	movlw	7
  8804  041D  02D2               	subwf	gdb_process_command@k^(0+512),f
  8805  041E                     l907:	
  8806                           
  8807                           ;gdb_stub.c: 182: (unsigned long)x=(unsigned long)x + (unsigned long)((unsigned long)(k&
      +                          0xf) << j);
  8808  041E  0852               	movf	gdb_process_command@k^(0+512),w
  8809  041F  390F               	andlw	15
  8810  0420  00C3               	movwf	??_gdb_process_command^(0+512)
  8811  0421  01C4               	clrf	(??_gdb_process_command^(0+512)+1)
  8812  0422  01C5               	clrf	(??_gdb_process_command^(0+512)+2)
  8813  0423  01C6               	clrf	(??_gdb_process_command^(0+512)+3)
  8814  0424  0A53               	incf	gdb_process_command@j^(0+512),w
  8815  0425  2C2A               	goto	u4680
  8816  0426                     u4685:	
  8817  0426  35C3               	lslf	??_gdb_process_command^(0+512),f
  8818  0427  0DC4               	rlf	(??_gdb_process_command^(0+512)+1),f
  8819  0428  0DC5               	rlf	(??_gdb_process_command^(0+512)+2),f
  8820  0429  0DC6               	rlf	(??_gdb_process_command^(0+512)+3),f
  8821  042A                     u4680:	
  8822  042A  0B89               	decfsz	9,f
  8823  042B  2C26               	goto	u4685
  8824  042C  0843               	movf	??_gdb_process_command^(0+512),w
  8825  042D  07D4               	addwf	gdb_process_command@x^(0+512),f
  8826  042E  0844               	movf	(??_gdb_process_command+1)^(0+512),w
  8827  042F  3DD5               	addwfc	(gdb_process_command@x+1)^(0+512),f
  8828  0430  0845               	movf	(??_gdb_process_command+2)^(0+512),w
  8829  0431  3DD6               	addwfc	(gdb_process_command@x+2)^(0+512),f
  8830  0432  0846               	movf	(??_gdb_process_command+3)^(0+512),w
  8831  0433  3DD7               	addwfc	(gdb_process_command@x+3)^(0+512),f
  8832                           
  8833                           ;gdb_stub.c: 183: j=j+4;
  8834  0434  3004               	movlw	4
  8835  0435  07D3               	addwf	gdb_process_command@j^(0+512),f
  8836                           
  8837                           ;gdb_stub.c: 184: i--;
  8838  0436  03D9               	decf	gdb_process_command@i^(0+512),f
  8839  0437  2C0D               	goto	l5309
  8840  0438                     l5311:	
  8841                           
  8842                           ;gdb_stub.c: 185: }
  8843                           ;gdb_stub.c: 187: for (i=msg_len-3;i>=1;i--)
  8844  0438  0842               	movf	gdb_process_command@msg_len^(0+512),w
  8845  0439  3EFD               	addlw	253
  8846  043A  00D9               	movwf	gdb_process_command@i^(0+512)
  8847  043B  08D9               	movf	gdb_process_command@i^(0+512),f
  8848  043C  1903               	btfsc	3,2
  8849  043D  2C4A               	goto	l5323
  8850  043E                     l5317:	
  8851                           
  8852                           ;gdb_stub.c: 188: {
  8853                           ;gdb_stub.c: 189: if (msg[i]==':') break;
  8854  043E  0859               	movf	gdb_process_command@i^(0+512),w
  8855  043F  0758               	addwf	gdb_process_command@msg^(0+512),w
  8856  0440  00C3               	movwf	??_gdb_process_command^(0+512)
  8857  0441  0086               	movwf	6
  8858  0442  3003               	movlw	3	; select bank6/7
  8859  0443  0087               	movwf	7
  8860  0444  0801               	movf	1,w
  8861  0445  3A3A               	xorlw	58
  8862  0446  1903               	btfsc	3,2
  8863  0447  2C4A               	goto	l5323
  8864  0448  0BD9               	decfsz	gdb_process_command@i^(0+512),f
  8865  0449  2C3E               	goto	l5317
  8866  044A                     l5323:	
  8867                           
  8868                           ;gdb_stub.c: 190: }
  8869                           ;gdb_stub.c: 191: u=i;
  8870  044A  0859               	movf	gdb_process_command@i^(0+512),w
  8871  044B  00C7               	movwf	gdb_process_command@u^(0+512)
  8872                           
  8873                           ;gdb_stub.c: 193: y=gdb_extract_bytes(msg_len-1, u, msg);
  8874  044C  0021               	movlb	1	; select bank1
  8875  044D  00A0               	movwf	gdb_extract_bytes@e^(0+128)
  8876  044E  0024               	movlb	4	; select bank4
  8877  044F  0858               	movf	gdb_process_command@msg^(0+512),w
  8878  0450  0021               	movlb	1	; select bank1
  8879  0451  00A1               	movwf	gdb_extract_bytes@msg^(0+128)
  8880  0452  0024               	movlb	4	; select bank4
  8881  0453  0842               	movf	gdb_process_command@msg_len^(0+512),w
  8882  0454  3EFF               	addlw	255
  8883  0455  2790  3180         	fcall	_gdb_extract_bytes
  8884  0457  0823               	movf	(?_gdb_extract_bytes+3)^(0+128),w
  8885  0458  0024               	movlb	4	; select bank4
  8886  0459  00CB               	movwf	(gdb_process_command@y+3)^(0+512)
  8887  045A  0021               	movlb	1	; select bank1
  8888  045B  0822               	movf	(?_gdb_extract_bytes+2)^(0+128),w
  8889  045C  0024               	movlb	4	; select bank4
  8890  045D  00CA               	movwf	(gdb_process_command@y+2)^(0+512)
  8891  045E  0021               	movlb	1	; select bank1
  8892  045F  0821               	movf	(?_gdb_extract_bytes+1)^(0+128),w
  8893  0460  0024               	movlb	4	; select bank4
  8894  0461  00C9               	movwf	(gdb_process_command@y+1)^(0+512)
  8895  0462  0021               	movlb	1	; select bank1
  8896  0463  0820               	movf	?_gdb_extract_bytes^(0+128),w
  8897  0464  0024               	movlb	4	; select bank4
  8898  0465  00C8               	movwf	gdb_process_command@y^(0+512)
  8899                           
  8900                           ;gdb_stub.c: 194: if (s=='3')
  8901  0466  084C               	movf	gdb_process_command@s^(0+512),w
  8902  0467  3A33               	xorlw	51
  8903  0468  1D03               	skipz
  8904  0469  2C8B               	goto	l5331
  8905                           
  8906                           ;gdb_stub.c: 195: bdm_set_data(x,(y<<8), 4);
  8907  046A  0857               	movf	(gdb_process_command@x+3)^(0+512),w
  8908  046B  0023               	movlb	3	; select bank3
  8909  046C  00D8               	movwf	(bdm_set_data@addr+3)^(0+384)
  8910  046D  0024               	movlb	4	; select bank4
  8911  046E  0856               	movf	(gdb_process_command@x+2)^(0+512),w
  8912  046F  0023               	movlb	3	; select bank3
  8913  0470  00D7               	movwf	(bdm_set_data@addr+2)^(0+384)
  8914  0471  0024               	movlb	4	; select bank4
  8915  0472  0855               	movf	(gdb_process_command@x+1)^(0+512),w
  8916  0473  0023               	movlb	3	; select bank3
  8917  0474  00D6               	movwf	(bdm_set_data@addr+1)^(0+384)
  8918  0475  0024               	movlb	4	; select bank4
  8919  0476  0854               	movf	gdb_process_command@x^(0+512),w
  8920  0477  0023               	movlb	3	; select bank3
  8921  0478  00D5               	movwf	bdm_set_data@addr^(0+384)
  8922  0479  0024               	movlb	4	; select bank4
  8923  047A  084A               	movf	(gdb_process_command@y+2)^(0+512),w
  8924  047B  0023               	movlb	3	; select bank3
  8925  047C  00DC               	movwf	(bdm_set_data@val+3)^(0+384)
  8926  047D  0024               	movlb	4	; select bank4
  8927  047E  0849               	movf	(gdb_process_command@y+1)^(0+512),w
  8928  047F  0023               	movlb	3	; select bank3
  8929  0480  00DB               	movwf	(bdm_set_data@val+2)^(0+384)
  8930  0481  0024               	movlb	4	; select bank4
  8931  0482  0848               	movf	gdb_process_command@y^(0+512),w
  8932  0483  0023               	movlb	3	; select bank3
  8933  0484  00DA               	movwf	(bdm_set_data@val+1)^(0+384)
  8934  0485  3004               	movlw	4
  8935  0486  01D9               	clrf	bdm_set_data@val^(0+384)
  8936  0487  00DD               	movwf	bdm_set_data@size^(0+384)
  8937  0488  319D  2509  3180   	fcall	_bdm_set_data
  8938  048B                     l5331:	
  8939                           
  8940                           ;gdb_stub.c: 196: if (s=='2')
  8941  048B  0024               	movlb	4	; select bank4
  8942  048C  084C               	movf	gdb_process_command@s^(0+512),w
  8943  048D  3A32               	xorlw	50
  8944  048E  1D03               	skipz
  8945  048F  2CB9               	goto	l5335
  8946                           
  8947                           ;gdb_stub.c: 197: bdm_set_data(x,(y&0xffff), 2);
  8948  0490  084B               	movf	(gdb_process_command@y+3)^(0+512),w
  8949  0491  0023               	movlb	3	; select bank3
  8950  0492  00DC               	movwf	(bdm_set_data@val+3)^(0+384)
  8951  0493  0024               	movlb	4	; select bank4
  8952  0494  084A               	movf	(gdb_process_command@y+2)^(0+512),w
  8953  0495  0023               	movlb	3	; select bank3
  8954  0496  00DB               	movwf	(bdm_set_data@val+2)^(0+384)
  8955  0497  0024               	movlb	4	; select bank4
  8956  0498  0849               	movf	(gdb_process_command@y+1)^(0+512),w
  8957  0499  0023               	movlb	3	; select bank3
  8958  049A  00DA               	movwf	(bdm_set_data@val+1)^(0+384)
  8959  049B  0024               	movlb	4	; select bank4
  8960  049C  0848               	movf	gdb_process_command@y^(0+512),w
  8961  049D  0023               	movlb	3	; select bank3
  8962  049E  00D9               	movwf	bdm_set_data@val^(0+384)
  8963  049F  30FF               	movlw	255
  8964  04A0  05D9               	andwf	bdm_set_data@val^(0+384),f
  8965  04A1  05DA               	andwf	(bdm_set_data@val+1)^(0+384),f
  8966  04A2  01DB               	clrf	(bdm_set_data@val+2)^(0+384)
  8967  04A3  01DC               	clrf	(bdm_set_data@val+3)^(0+384)
  8968  04A4  0024               	movlb	4	; select bank4
  8969  04A5  0857               	movf	(gdb_process_command@x+3)^(0+512),w
  8970  04A6  0023               	movlb	3	; select bank3
  8971  04A7  00D8               	movwf	(bdm_set_data@addr+3)^(0+384)
  8972  04A8  0024               	movlb	4	; select bank4
  8973  04A9  0856               	movf	(gdb_process_command@x+2)^(0+512),w
  8974  04AA  0023               	movlb	3	; select bank3
  8975  04AB  00D7               	movwf	(bdm_set_data@addr+2)^(0+384)
  8976  04AC  0024               	movlb	4	; select bank4
  8977  04AD  0855               	movf	(gdb_process_command@x+1)^(0+512),w
  8978  04AE  0023               	movlb	3	; select bank3
  8979  04AF  00D6               	movwf	(bdm_set_data@addr+1)^(0+384)
  8980  04B0  0024               	movlb	4	; select bank4
  8981  04B1  0854               	movf	gdb_process_command@x^(0+512),w
  8982  04B2  0023               	movlb	3	; select bank3
  8983  04B3  00D5               	movwf	bdm_set_data@addr^(0+384)
  8984  04B4  3002               	movlw	2
  8985  04B5  00DD               	movwf	bdm_set_data@size^(0+384)
  8986  04B6  319D  2509  3180   	fcall	_bdm_set_data
  8987  04B9                     l5335:	
  8988                           
  8989                           ;gdb_stub.c: 198: if (s=='1')
  8990  04B9  0024               	movlb	4	; select bank4
  8991  04BA  084C               	movf	gdb_process_command@s^(0+512),w
  8992  04BB  3A31               	xorlw	49
  8993  04BC  1D03               	skipz
  8994  04BD  2CE7               	goto	l914
  8995                           
  8996                           ;gdb_stub.c: 199: bdm_set_data(x,(y&0xff), 1);
  8997  04BE  084B               	movf	(gdb_process_command@y+3)^(0+512),w
  8998  04BF  0023               	movlb	3	; select bank3
  8999  04C0  00DC               	movwf	(bdm_set_data@val+3)^(0+384)
  9000  04C1  0024               	movlb	4	; select bank4
  9001  04C2  084A               	movf	(gdb_process_command@y+2)^(0+512),w
  9002  04C3  0023               	movlb	3	; select bank3
  9003  04C4  00DB               	movwf	(bdm_set_data@val+2)^(0+384)
  9004  04C5  0024               	movlb	4	; select bank4
  9005  04C6  0849               	movf	(gdb_process_command@y+1)^(0+512),w
  9006  04C7  0023               	movlb	3	; select bank3
  9007  04C8  00DA               	movwf	(bdm_set_data@val+1)^(0+384)
  9008  04C9  0024               	movlb	4	; select bank4
  9009  04CA  0848               	movf	gdb_process_command@y^(0+512),w
  9010  04CB  0023               	movlb	3	; select bank3
  9011  04CC  00D9               	movwf	bdm_set_data@val^(0+384)
  9012  04CD  30FF               	movlw	255
  9013  04CE  05D9               	andwf	bdm_set_data@val^(0+384),f
  9014  04CF  01DA               	clrf	(bdm_set_data@val+1)^(0+384)
  9015  04D0  01DB               	clrf	(bdm_set_data@val+2)^(0+384)
  9016  04D1  01DC               	clrf	(bdm_set_data@val+3)^(0+384)
  9017  04D2  0024               	movlb	4	; select bank4
  9018  04D3  0857               	movf	(gdb_process_command@x+3)^(0+512),w
  9019  04D4  0023               	movlb	3	; select bank3
  9020  04D5  00D8               	movwf	(bdm_set_data@addr+3)^(0+384)
  9021  04D6  0024               	movlb	4	; select bank4
  9022  04D7  0856               	movf	(gdb_process_command@x+2)^(0+512),w
  9023  04D8  0023               	movlb	3	; select bank3
  9024  04D9  00D7               	movwf	(bdm_set_data@addr+2)^(0+384)
  9025  04DA  0024               	movlb	4	; select bank4
  9026  04DB  0855               	movf	(gdb_process_command@x+1)^(0+512),w
  9027  04DC  0023               	movlb	3	; select bank3
  9028  04DD  00D6               	movwf	(bdm_set_data@addr+1)^(0+384)
  9029  04DE  0024               	movlb	4	; select bank4
  9030  04DF  0854               	movf	gdb_process_command@x^(0+512),w
  9031  04E0  0023               	movlb	3	; select bank3
  9032  04E1  00D5               	movwf	bdm_set_data@addr^(0+384)
  9033  04E2  01DD               	clrf	bdm_set_data@size^(0+384)
  9034  04E3  0ADD               	incf	bdm_set_data@size^(0+384),f
  9035  04E4  319D  2509  3180   	fcall	_bdm_set_data
  9036  04E7                     l914:	
  9037                           
  9038                           ;gdb_stub.c: 201: gdb_send('+',"OK");
  9039  04E7  30B1               	movlw	low (STR_5| (0+32768))
  9040  04E8  0024               	movlb	4	; select bank4
  9041  04E9  00B5               	movwf	gdb_send@reply^(0+512)
  9042  04EA  3099               	movlw	high (STR_5| (0+32768))
  9043  04EB  00B6               	movwf	(gdb_send@reply^(0+512)+1)
  9044  04EC  302B               	movlw	43
  9045  04ED  3196  2ED1         	ljmp	_gdb_send
  9046  04EF                     l5339:	
  9047                           ;gdb_stub.c: 202: }
  9048                           
  9049                           
  9050                           ;gdb_stub.c: 203: else if (msg[0]=='Z')
  9051  04EF  0858               	movf	gdb_process_command@msg^(0+512),w
  9052  04F0  0086               	movwf	6
  9053  04F1  3003               	movlw	3	; select bank6/7
  9054  04F2  0087               	movwf	7
  9055  04F3  0801               	movf	1,w
  9056  04F4  3A5A               	xorlw	90
  9057  04F5  1D03               	skipz
  9058  04F6  2E1C               	goto	l5427
  9059                           
  9060                           ;gdb_stub.c: 204: {
  9061                           ;gdb_stub.c: 205: k=msg[1];
  9062  04F7  0858               	movf	gdb_process_command@msg^(0+512),w
  9063  04F8  0086               	movwf	6
  9064  04F9  3F41               	moviw [1]fsr1
  9065  04FA  00D2               	movwf	gdb_process_command@k^(0+512)
  9066                           
  9067                           ;gdb_stub.c: 206: x=gdb_extract_bytes(msg_len-3, 2, msg);
  9068  04FB  3002               	movlw	2
  9069  04FC  0021               	movlb	1	; select bank1
  9070  04FD  00A0               	movwf	gdb_extract_bytes@e^(0+128)
  9071  04FE  0024               	movlb	4	; select bank4
  9072  04FF  0858               	movf	gdb_process_command@msg^(0+512),w
  9073  0500  0021               	movlb	1	; select bank1
  9074  0501  00A1               	movwf	gdb_extract_bytes@msg^(0+128)
  9075  0502  0024               	movlb	4	; select bank4
  9076  0503  0842               	movf	gdb_process_command@msg_len^(0+512),w
  9077  0504  3EFD               	addlw	253
  9078  0505  2790  3180         	fcall	_gdb_extract_bytes
  9079  0507  0823               	movf	(?_gdb_extract_bytes+3)^(0+128),w
  9080  0508  0024               	movlb	4	; select bank4
  9081  0509  00D7               	movwf	(gdb_process_command@x+3)^(0+512)
  9082  050A  0021               	movlb	1	; select bank1
  9083  050B  0822               	movf	(?_gdb_extract_bytes+2)^(0+128),w
  9084  050C  0024               	movlb	4	; select bank4
  9085  050D  00D6               	movwf	(gdb_process_command@x+2)^(0+512)
  9086  050E  0021               	movlb	1	; select bank1
  9087  050F  0821               	movf	(?_gdb_extract_bytes+1)^(0+128),w
  9088  0510  0024               	movlb	4	; select bank4
  9089  0511  00D5               	movwf	(gdb_process_command@x+1)^(0+512)
  9090  0512  0021               	movlb	1	; select bank1
  9091  0513  0820               	movf	?_gdb_extract_bytes^(0+128),w
  9092  0514  0024               	movlb	4	; select bank4
  9093  0515  00D4               	movwf	gdb_process_command@x^(0+512)
  9094                           
  9095                           ;gdb_stub.c: 208: j=0;
  9096  0516  01D3               	clrf	gdb_process_command@j^(0+512)
  9097                           
  9098                           ;gdb_stub.c: 209: if (k=='2' || k=='3' || k=='4')
  9099  0517  0852               	movf	gdb_process_command@k^(0+512),w
  9100  0518  3A32               	xorlw	50
  9101  0519  1903               	skipnz
  9102  051A  2D23               	goto	l5353
  9103  051B  0852               	movf	gdb_process_command@k^(0+512),w
  9104  051C  3A33               	xorlw	51
  9105  051D  1903               	skipnz
  9106  051E  2D23               	goto	l5353
  9107  051F  0852               	movf	gdb_process_command@k^(0+512),w
  9108  0520  3A34               	xorlw	52
  9109  0521  1D03               	skipz
  9110  0522  2DBD               	goto	l5395
  9111  0523                     l5353:	
  9112                           
  9113                           ;gdb_stub.c: 210: {
  9114                           ;gdb_stub.c: 211: for (i=0;i<2;i++)
  9115  0523  01D9               	clrf	gdb_process_command@i^(0+512)
  9116  0524  2D26               	goto	l5355
  9117  0525                     l5363:	
  9118  0525  0AD9               	incf	gdb_process_command@i^(0+512),f
  9119  0526                     l5355:	
  9120  0526  3002               	movlw	2
  9121  0527  0259               	subwf	gdb_process_command@i^(0+512),w
  9122  0528  1803               	btfsc	3,0
  9123  0529  2D50               	goto	l5367
  9124                           
  9125                           ;gdb_stub.c: 212: {
  9126                           ;gdb_stub.c: 213: if (watch_points[i].addr==x) { j=1; break; }
  9127  052A  3005               	movlw	5
  9128  052B  0021               	movlb	1	; select bank1
  9129  052C  00A0               	movwf	___bmul@multiplicand^(0+128)
  9130  052D  0024               	movlb	4	; select bank4
  9131  052E  0859               	movf	gdb_process_command@i^(0+512),w
  9132  052F  2783  3180         	fcall	___bmul
  9133  0531  3E60               	addlw	_watch_points& (0+255)
  9134  0532  0086               	movwf	6
  9135  0533  3003               	movlw	3	; select bank6/7
  9136  0534  0087               	movwf	7
  9137  0535  3F40               	moviw [0]fsr1
  9138  0536  0024               	movlb	4	; select bank4
  9139  0537  00C3               	movwf	??_gdb_process_command^(0+512)
  9140  0538  3F41               	moviw [1]fsr1
  9141  0539  00C4               	movwf	(??_gdb_process_command^(0+512)+1)
  9142  053A  3F42               	moviw [2]fsr1
  9143  053B  00C5               	movwf	(??_gdb_process_command^(0+512)+2)
  9144  053C  3F43               	moviw [3]fsr1
  9145  053D  00C6               	movwf	(??_gdb_process_command^(0+512)+3)
  9146  053E  0857               	movf	(gdb_process_command@x+3)^(0+512),w
  9147  053F  0646               	xorwf	(??_gdb_process_command+3)^(0+512),w
  9148  0540  1D03               	skipz
  9149  0541  2D4C               	goto	u4815
  9150  0542  0856               	movf	(gdb_process_command@x+2)^(0+512),w
  9151  0543  0645               	xorwf	(??_gdb_process_command+2)^(0+512),w
  9152  0544  1D03               	skipz
  9153  0545  2D4C               	goto	u4815
  9154  0546  0855               	movf	(gdb_process_command@x+1)^(0+512),w
  9155  0547  0644               	xorwf	(??_gdb_process_command+1)^(0+512),w
  9156  0548  1D03               	skipz
  9157  0549  2D4C               	goto	u4815
  9158  054A  0854               	movf	gdb_process_command@x^(0+512),w
  9159  054B  0643               	xorwf	??_gdb_process_command^(0+512),w
  9160  054C                     u4815:	
  9161  054C  1D03               	skipz
  9162  054D  2D25               	goto	l5363
  9163  054E  01D3               	clrf	gdb_process_command@j^(0+512)
  9164  054F  0AD3               	incf	gdb_process_command@j^(0+512),f
  9165  0550                     l5367:	
  9166                           
  9167                           ;gdb_stub.c: 214: }
  9168                           ;gdb_stub.c: 215: if (j==0)
  9169  0550  08D3               	movf	gdb_process_command@j^(0+512),f
  9170  0551  1D03               	skipz
  9171  0552  2E11               	goto	l5425
  9172                           
  9173                           ;gdb_stub.c: 216: {
  9174                           ;gdb_stub.c: 217: for (i=0;i<2;i++)
  9175  0553  01D9               	clrf	gdb_process_command@i^(0+512)
  9176  0554                     l5371:	
  9177  0554  3002               	movlw	2
  9178  0555  0259               	subwf	gdb_process_command@i^(0+512),w
  9179  0556  1803               	btfsc	3,0
  9180  0557  2E11               	goto	l5425
  9181                           
  9182                           ;gdb_stub.c: 218: {
  9183                           ;gdb_stub.c: 219: if (watch_points[i].addr==0)
  9184  0558  3005               	movlw	5
  9185  0559  0021               	movlb	1	; select bank1
  9186  055A  00A0               	movwf	___bmul@multiplicand^(0+128)
  9187  055B  0024               	movlb	4	; select bank4
  9188  055C  0859               	movf	gdb_process_command@i^(0+512),w
  9189  055D  2783  3180         	fcall	___bmul
  9190  055F  3E60               	addlw	_watch_points& (0+255)
  9191  0560  0086               	movwf	6
  9192  0561  3003               	movlw	3	; select bank6/7
  9193  0562  0087               	movwf	7
  9194  0563  3F40               	moviw [0]fsr1
  9195  0564  0024               	movlb	4	; select bank4
  9196  0565  00C3               	movwf	??_gdb_process_command^(0+512)
  9197  0566  3F41               	moviw [1]fsr1
  9198  0567  00C4               	movwf	(??_gdb_process_command^(0+512)+1)
  9199  0568  3F42               	moviw [2]fsr1
  9200  0569  00C5               	movwf	(??_gdb_process_command^(0+512)+2)
  9201  056A  3F43               	moviw [3]fsr1
  9202  056B  00C6               	movwf	(??_gdb_process_command^(0+512)+3)
  9203  056C  0846               	movf	(??_gdb_process_command+3)^(0+512),w
  9204  056D  0445               	iorwf	(??_gdb_process_command+2)^(0+512),w
  9205  056E  0444               	iorwf	(??_gdb_process_command+1)^(0+512),w
  9206  056F  0443               	iorwf	??_gdb_process_command^(0+512),w
  9207  0570  1D03               	skipz
  9208  0571  2DBB               	goto	l5391
  9209                           
  9210                           ;gdb_stub.c: 220: {
  9211                           ;gdb_stub.c: 221: watch_points[i].addr=x;
  9212  0572  3005               	movlw	5
  9213  0573  0021               	movlb	1	; select bank1
  9214  0574  00A0               	movwf	___bmul@multiplicand^(0+128)
  9215  0575  0024               	movlb	4	; select bank4
  9216  0576  0859               	movf	gdb_process_command@i^(0+512),w
  9217  0577  2783  3180         	fcall	___bmul
  9218  0579  3E60               	addlw	_watch_points& (0+255)
  9219  057A  0086               	movwf	6
  9220  057B  3003               	movlw	3	; select bank6/7
  9221  057C  0087               	movwf	7
  9222  057D  0024               	movlb	4	; select bank4
  9223  057E  0854               	movf	gdb_process_command@x^(0+512),w
  9224  057F  3FC0               	movwi [0]fsr1
  9225  0580  0855               	movf	(gdb_process_command@x+1)^(0+512),w
  9226  0581  3FC1               	movwi [1]fsr1
  9227  0582  0856               	movf	(gdb_process_command@x+2)^(0+512),w
  9228  0583  3FC2               	movwi [2]fsr1
  9229  0584  0857               	movf	(gdb_process_command@x+3)^(0+512),w
  9230  0585  3FC3               	movwi [3]fsr1
  9231                           
  9232                           ;gdb_stub.c: 222: if (k=='2') watch_points[i].rw=1;
  9233  0586  0852               	movf	gdb_process_command@k^(0+512),w
  9234  0587  3A32               	xorlw	50
  9235  0588  1D03               	skipz
  9236  0589  2D97               	goto	l5383
  9237  058A  3005               	movlw	5
  9238  058B  0021               	movlb	1	; select bank1
  9239  058C  00A0               	movwf	___bmul@multiplicand^(0+128)
  9240  058D  0024               	movlb	4	; select bank4
  9241  058E  0859               	movf	gdb_process_command@i^(0+512),w
  9242  058F  2783  3180         	fcall	___bmul
  9243  0591  3E64               	addlw	(_watch_points+4)& (0+255)
  9244  0592  0086               	movwf	6
  9245  0593  3003               	movlw	3	; select bank6/7
  9246  0594  0087               	movwf	7
  9247  0595  0181               	clrf	1
  9248  0596  0A81               	incf	1,f
  9249  0597                     l5383:	
  9250                           
  9251                           ;gdb_stub.c: 223: if (k=='3') watch_points[i].rw=0;
  9252  0597  0024               	movlb	4	; select bank4
  9253  0598  0852               	movf	gdb_process_command@k^(0+512),w
  9254  0599  3A33               	xorlw	51
  9255  059A  1D03               	skipz
  9256  059B  2DA8               	goto	l5387
  9257  059C  3005               	movlw	5
  9258  059D  0021               	movlb	1	; select bank1
  9259  059E  00A0               	movwf	___bmul@multiplicand^(0+128)
  9260  059F  0024               	movlb	4	; select bank4
  9261  05A0  0859               	movf	gdb_process_command@i^(0+512),w
  9262  05A1  2783  3180         	fcall	___bmul
  9263  05A3  3E64               	addlw	(_watch_points+4)& (0+255)
  9264  05A4  0086               	movwf	6
  9265  05A5  3003               	movlw	3	; select bank6/7
  9266  05A6  0087               	movwf	7
  9267  05A7  0181               	clrf	1
  9268  05A8                     l5387:	
  9269                           
  9270                           ;gdb_stub.c: 224: if (k=='4') watch_points[i].rw=2;
  9271  05A8  0024               	movlb	4	; select bank4
  9272  05A9  0852               	movf	gdb_process_command@k^(0+512),w
  9273  05AA  3A34               	xorlw	52
  9274  05AB  1D03               	skipz
  9275  05AC  2E11               	goto	l5425
  9276  05AD  3005               	movlw	5
  9277  05AE  0021               	movlb	1	; select bank1
  9278  05AF  00A0               	movwf	___bmul@multiplicand^(0+128)
  9279  05B0  0024               	movlb	4	; select bank4
  9280  05B1  0859               	movf	gdb_process_command@i^(0+512),w
  9281  05B2  2783  3180         	fcall	___bmul
  9282  05B4  3E64               	addlw	(_watch_points+4)& (0+255)
  9283  05B5  0086               	movwf	6
  9284  05B6  3003               	movlw	3	; select bank6/7
  9285  05B7  0087               	movwf	7
  9286  05B8  3002               	movlw	2
  9287  05B9  0081               	movwf	1
  9288  05BA  2E11               	goto	l5425
  9289  05BB                     l5391:	
  9290  05BB  0AD9               	incf	gdb_process_command@i^(0+512),f
  9291  05BC  2D54               	goto	l5371
  9292  05BD                     l5395:	
  9293                           ;gdb_stub.c: 226: }
  9294                           ;gdb_stub.c: 227: }
  9295                           ;gdb_stub.c: 228: }
  9296                           ;gdb_stub.c: 229: }
  9297                           
  9298                           
  9299                           ;gdb_stub.c: 230: else
  9300                           ;gdb_stub.c: 231: {
  9301                           ;gdb_stub.c: 232: for (i=0;i<4;i++)
  9302  05BD  01D9               	clrf	gdb_process_command@i^(0+512)
  9303  05BE  2DC0               	goto	l5397
  9304  05BF                     l5405:	
  9305  05BF  0AD9               	incf	gdb_process_command@i^(0+512),f
  9306  05C0                     l5397:	
  9307  05C0  3004               	movlw	4
  9308  05C1  0259               	subwf	gdb_process_command@i^(0+512),w
  9309  05C2  1803               	btfsc	3,0
  9310  05C3  2DE5               	goto	l5409
  9311                           
  9312                           ;gdb_stub.c: 233: {
  9313                           ;gdb_stub.c: 234: if (break_points[i]==x) { j=1; break; }
  9314  05C4  0859               	movf	gdb_process_command@i^(0+512),w
  9315  05C5  0709               	addwf	9,w
  9316  05C6  0709               	addwf	9,w
  9317  05C7  3EA0               	addlw	_break_points& (0+255)
  9318  05C8  0086               	movwf	6
  9319  05C9  3003               	movlw	3	; select bank7/8
  9320  05CA  0087               	movwf	7
  9321  05CB  3F40               	moviw [0]fsr1
  9322  05CC  00C3               	movwf	??_gdb_process_command^(0+512)
  9323  05CD  3F41               	moviw [1]fsr1
  9324  05CE  00C4               	movwf	(??_gdb_process_command^(0+512)+1)
  9325  05CF  3F42               	moviw [2]fsr1
  9326  05D0  00C5               	movwf	(??_gdb_process_command^(0+512)+2)
  9327  05D1  3F43               	moviw [3]fsr1
  9328  05D2  00C6               	movwf	(??_gdb_process_command^(0+512)+3)
  9329  05D3  0857               	movf	(gdb_process_command@x+3)^(0+512),w
  9330  05D4  0646               	xorwf	(??_gdb_process_command+3)^(0+512),w
  9331  05D5  1D03               	skipz
  9332  05D6  2DE1               	goto	u4895
  9333  05D7  0856               	movf	(gdb_process_command@x+2)^(0+512),w
  9334  05D8  0645               	xorwf	(??_gdb_process_command+2)^(0+512),w
  9335  05D9  1D03               	skipz
  9336  05DA  2DE1               	goto	u4895
  9337  05DB  0855               	movf	(gdb_process_command@x+1)^(0+512),w
  9338  05DC  0644               	xorwf	(??_gdb_process_command+1)^(0+512),w
  9339  05DD  1D03               	skipz
  9340  05DE  2DE1               	goto	u4895
  9341  05DF  0854               	movf	gdb_process_command@x^(0+512),w
  9342  05E0  0643               	xorwf	??_gdb_process_command^(0+512),w
  9343  05E1                     u4895:	
  9344  05E1  1D03               	skipz
  9345  05E2  2DBF               	goto	l5405
  9346  05E3  01D3               	clrf	gdb_process_command@j^(0+512)
  9347  05E4  0AD3               	incf	gdb_process_command@j^(0+512),f
  9348  05E5                     l5409:	
  9349                           
  9350                           ;gdb_stub.c: 235: }
  9351                           ;gdb_stub.c: 236: if (j==0)
  9352  05E5  08D3               	movf	gdb_process_command@j^(0+512),f
  9353  05E6  1D03               	skipz
  9354  05E7  2E11               	goto	l5425
  9355                           
  9356                           ;gdb_stub.c: 237: {
  9357                           ;gdb_stub.c: 238: for (i=0;i<4;i++)
  9358  05E8  01D9               	clrf	gdb_process_command@i^(0+512)
  9359  05E9  2DEB               	goto	l5413
  9360  05EA                     l5421:	
  9361  05EA  0AD9               	incf	gdb_process_command@i^(0+512),f
  9362  05EB                     l5413:	
  9363  05EB  3004               	movlw	4
  9364  05EC  0259               	subwf	gdb_process_command@i^(0+512),w
  9365  05ED  1803               	btfsc	3,0
  9366  05EE  2E11               	goto	l5425
  9367                           
  9368                           ;gdb_stub.c: 239: {
  9369                           ;gdb_stub.c: 240: if (break_points[i]==0) { break_points[i]=x; break; }
  9370  05EF  0859               	movf	gdb_process_command@i^(0+512),w
  9371  05F0  0709               	addwf	9,w
  9372  05F1  0709               	addwf	9,w
  9373  05F2  3EA0               	addlw	_break_points& (0+255)
  9374  05F3  0086               	movwf	6
  9375  05F4  3003               	movlw	3	; select bank7/8
  9376  05F5  0087               	movwf	7
  9377  05F6  3F40               	moviw [0]fsr1
  9378  05F7  00C3               	movwf	??_gdb_process_command^(0+512)
  9379  05F8  3F41               	moviw [1]fsr1
  9380  05F9  00C4               	movwf	(??_gdb_process_command^(0+512)+1)
  9381  05FA  3F42               	moviw [2]fsr1
  9382  05FB  00C5               	movwf	(??_gdb_process_command^(0+512)+2)
  9383  05FC  3F43               	moviw [3]fsr1
  9384  05FD  00C6               	movwf	(??_gdb_process_command^(0+512)+3)
  9385  05FE  0846               	movf	(??_gdb_process_command+3)^(0+512),w
  9386  05FF  0445               	iorwf	(??_gdb_process_command+2)^(0+512),w
  9387  0600  0444               	iorwf	(??_gdb_process_command+1)^(0+512),w
  9388  0601  0443               	iorwf	??_gdb_process_command^(0+512),w
  9389  0602  1D03               	skipz
  9390  0603  2DEA               	goto	l5421
  9391  0604  0859               	movf	gdb_process_command@i^(0+512),w
  9392  0605  0709               	addwf	9,w
  9393  0606  0709               	addwf	9,w
  9394  0607  3EA0               	addlw	_break_points& (0+255)
  9395  0608  0086               	movwf	6
  9396  0609  0854               	movf	gdb_process_command@x^(0+512),w
  9397  060A  3FC0               	movwi [0]fsr1
  9398  060B  0855               	movf	(gdb_process_command@x+1)^(0+512),w
  9399  060C  3FC1               	movwi [1]fsr1
  9400  060D  0856               	movf	(gdb_process_command@x+2)^(0+512),w
  9401  060E  3FC2               	movwi [2]fsr1
  9402  060F  0857               	movf	(gdb_process_command@x+3)^(0+512),w
  9403  0610  3FC3               	movwi [3]fsr1
  9404  0611                     l5425:	
  9405                           
  9406                           ;gdb_stub.c: 241: }
  9407                           ;gdb_stub.c: 242: }
  9408                           ;gdb_stub.c: 243: }
  9409                           ;gdb_stub.c: 244: bdm_update_breakpoints();
  9410  0611  3190  2072  3180   	fcall	_bdm_update_breakpoints
  9411                           
  9412                           ;gdb_stub.c: 245: gdb_send('+',"OK");
  9413  0614  30B1               	movlw	low (STR_5| (0+32768))
  9414  0615  0024               	movlb	4	; select bank4
  9415  0616  00B5               	movwf	gdb_send@reply^(0+512)
  9416  0617  3099               	movlw	high (STR_5| (0+32768))
  9417  0618  00B6               	movwf	(gdb_send@reply^(0+512)+1)
  9418  0619  302B               	movlw	43
  9419  061A  3196  2ED1         	ljmp	_gdb_send
  9420  061C                     l5427:	
  9421                           ;gdb_stub.c: 246: }
  9422                           
  9423                           
  9424                           ;gdb_stub.c: 247: else if (msg[0]=='z')
  9425  061C  0858               	movf	gdb_process_command@msg^(0+512),w
  9426  061D  0086               	movwf	6
  9427  061E  3003               	movlw	3	; select bank6/7
  9428  061F  0087               	movwf	7
  9429  0620  0801               	movf	1,w
  9430  0621  3A7A               	xorlw	122
  9431  0622  1D03               	skipz
  9432  0623  2EC9               	goto	l5471
  9433                           
  9434                           ;gdb_stub.c: 248: {
  9435                           ;gdb_stub.c: 249: k=msg[1];
  9436  0624  0858               	movf	gdb_process_command@msg^(0+512),w
  9437  0625  0086               	movwf	6
  9438  0626  3F41               	moviw [1]fsr1
  9439  0627  00D2               	movwf	gdb_process_command@k^(0+512)
  9440                           
  9441                           ;gdb_stub.c: 250: x=gdb_extract_bytes(msg_len-3, 2, msg);
  9442  0628  3002               	movlw	2
  9443  0629  0021               	movlb	1	; select bank1
  9444  062A  00A0               	movwf	gdb_extract_bytes@e^(0+128)
  9445  062B  0024               	movlb	4	; select bank4
  9446  062C  0858               	movf	gdb_process_command@msg^(0+512),w
  9447  062D  0021               	movlb	1	; select bank1
  9448  062E  00A1               	movwf	gdb_extract_bytes@msg^(0+128)
  9449  062F  0024               	movlb	4	; select bank4
  9450  0630  0842               	movf	gdb_process_command@msg_len^(0+512),w
  9451  0631  3EFD               	addlw	253
  9452  0632  2790  3180         	fcall	_gdb_extract_bytes
  9453  0634  0823               	movf	(?_gdb_extract_bytes+3)^(0+128),w
  9454  0635  0024               	movlb	4	; select bank4
  9455  0636  00D7               	movwf	(gdb_process_command@x+3)^(0+512)
  9456  0637  0021               	movlb	1	; select bank1
  9457  0638  0822               	movf	(?_gdb_extract_bytes+2)^(0+128),w
  9458  0639  0024               	movlb	4	; select bank4
  9459  063A  00D6               	movwf	(gdb_process_command@x+2)^(0+512)
  9460  063B  0021               	movlb	1	; select bank1
  9461  063C  0821               	movf	(?_gdb_extract_bytes+1)^(0+128),w
  9462  063D  0024               	movlb	4	; select bank4
  9463  063E  00D5               	movwf	(gdb_process_command@x+1)^(0+512)
  9464  063F  0021               	movlb	1	; select bank1
  9465  0640  0820               	movf	?_gdb_extract_bytes^(0+128),w
  9466  0641  0024               	movlb	4	; select bank4
  9467  0642  00D4               	movwf	gdb_process_command@x^(0+512)
  9468                           
  9469                           ;gdb_stub.c: 252: j=0;
  9470  0643  01D3               	clrf	gdb_process_command@j^(0+512)
  9471                           
  9472                           ;gdb_stub.c: 253: if (k=='2' || k=='3' || k=='4')
  9473  0644  0852               	movf	gdb_process_command@k^(0+512),w
  9474  0645  3A32               	xorlw	50
  9475  0646  1903               	skipnz
  9476  0647  2E50               	goto	l5441
  9477  0648  0852               	movf	gdb_process_command@k^(0+512),w
  9478  0649  3A33               	xorlw	51
  9479  064A  1903               	skipnz
  9480  064B  2E50               	goto	l5441
  9481  064C  0852               	movf	gdb_process_command@k^(0+512),w
  9482  064D  3A34               	xorlw	52
  9483  064E  1D03               	skipz
  9484  064F  2E8C               	goto	l5455
  9485  0650                     l5441:	
  9486                           
  9487                           ;gdb_stub.c: 254: {
  9488                           ;gdb_stub.c: 255: for (i=0;i<2;i++)
  9489  0650  01D9               	clrf	gdb_process_command@i^(0+512)
  9490  0651                     l5443:	
  9491  0651  3002               	movlw	2
  9492  0652  0259               	subwf	gdb_process_command@i^(0+512),w
  9493  0653  1803               	btfsc	3,0
  9494  0654  2EBE               	goto	l5469
  9495                           
  9496                           ;gdb_stub.c: 256: {
  9497                           ;gdb_stub.c: 257: if ( watch_points[i].addr==x) { watch_points[i].addr=0; break; }
  9498  0655  3005               	movlw	5
  9499  0656  0021               	movlb	1	; select bank1
  9500  0657  00A0               	movwf	___bmul@multiplicand^(0+128)
  9501  0658  0024               	movlb	4	; select bank4
  9502  0659  0859               	movf	gdb_process_command@i^(0+512),w
  9503  065A  2783  3180         	fcall	___bmul
  9504  065C  3E60               	addlw	_watch_points& (0+255)
  9505  065D  0086               	movwf	6
  9506  065E  3003               	movlw	3	; select bank6/7
  9507  065F  0087               	movwf	7
  9508  0660  3F40               	moviw [0]fsr1
  9509  0661  0024               	movlb	4	; select bank4
  9510  0662  00C3               	movwf	??_gdb_process_command^(0+512)
  9511  0663  3F41               	moviw [1]fsr1
  9512  0664  00C4               	movwf	(??_gdb_process_command^(0+512)+1)
  9513  0665  3F42               	moviw [2]fsr1
  9514  0666  00C5               	movwf	(??_gdb_process_command^(0+512)+2)
  9515  0667  3F43               	moviw [3]fsr1
  9516  0668  00C6               	movwf	(??_gdb_process_command^(0+512)+3)
  9517  0669  0857               	movf	(gdb_process_command@x+3)^(0+512),w
  9518  066A  0646               	xorwf	(??_gdb_process_command+3)^(0+512),w
  9519  066B  1D03               	skipz
  9520  066C  2E77               	goto	u4985
  9521  066D  0856               	movf	(gdb_process_command@x+2)^(0+512),w
  9522  066E  0645               	xorwf	(??_gdb_process_command+2)^(0+512),w
  9523  066F  1D03               	skipz
  9524  0670  2E77               	goto	u4985
  9525  0671  0855               	movf	(gdb_process_command@x+1)^(0+512),w
  9526  0672  0644               	xorwf	(??_gdb_process_command+1)^(0+512),w
  9527  0673  1D03               	skipz
  9528  0674  2E77               	goto	u4985
  9529  0675  0854               	movf	gdb_process_command@x^(0+512),w
  9530  0676  0643               	xorwf	??_gdb_process_command^(0+512),w
  9531  0677                     u4985:	
  9532  0677  1D03               	skipz
  9533  0678  2E8A               	goto	l5451
  9534  0679  3005               	movlw	5
  9535  067A  0021               	movlb	1	; select bank1
  9536  067B  00A0               	movwf	___bmul@multiplicand^(0+128)
  9537  067C  0024               	movlb	4	; select bank4
  9538  067D  0859               	movf	gdb_process_command@i^(0+512),w
  9539  067E  2783  3180         	fcall	___bmul
  9540  0680  3E60               	addlw	_watch_points& (0+255)
  9541  0681  0086               	movwf	6
  9542  0682  3003               	movlw	3	; select bank6/7
  9543  0683  0087               	movwf	7
  9544  0684  3000               	movlw	0
  9545  0685  3FC0               	movwi [0]fsr1
  9546  0686  3FC1               	movwi [1]fsr1
  9547  0687  3FC2               	movwi [2]fsr1
  9548  0688  3FC3               	movwi [3]fsr1
  9549  0689  2EBE               	goto	l5469
  9550  068A                     l5451:	
  9551  068A  0AD9               	incf	gdb_process_command@i^(0+512),f
  9552  068B  2E51               	goto	l5443
  9553  068C                     l5455:	
  9554                           
  9555                           ;gdb_stub.c: 260: else
  9556                           ;gdb_stub.c: 261: {
  9557                           ;gdb_stub.c: 262: for (i=0;i<4;i++)
  9558  068C  01D9               	clrf	gdb_process_command@i^(0+512)
  9559  068D  2E8F               	goto	l5457
  9560  068E                     l5465:	
  9561  068E  0AD9               	incf	gdb_process_command@i^(0+512),f
  9562  068F                     l5457:	
  9563  068F  3004               	movlw	4
  9564  0690  0259               	subwf	gdb_process_command@i^(0+512),w
  9565  0691  1803               	btfsc	3,0
  9566  0692  2EBE               	goto	l5469
  9567                           
  9568                           ;gdb_stub.c: 263: {
  9569                           ;gdb_stub.c: 264: if (break_points[i]==x) { break_points[i]=0; break; }
  9570  0693  0859               	movf	gdb_process_command@i^(0+512),w
  9571  0694  0709               	addwf	9,w
  9572  0695  0709               	addwf	9,w
  9573  0696  3EA0               	addlw	_break_points& (0+255)
  9574  0697  0086               	movwf	6
  9575  0698  3003               	movlw	3	; select bank7/8
  9576  0699  0087               	movwf	7
  9577  069A  3F40               	moviw [0]fsr1
  9578  069B  00C3               	movwf	??_gdb_process_command^(0+512)
  9579  069C  3F41               	moviw [1]fsr1
  9580  069D  00C4               	movwf	(??_gdb_process_command^(0+512)+1)
  9581  069E  3F42               	moviw [2]fsr1
  9582  069F  00C5               	movwf	(??_gdb_process_command^(0+512)+2)
  9583  06A0  3F43               	moviw [3]fsr1
  9584  06A1  00C6               	movwf	(??_gdb_process_command^(0+512)+3)
  9585  06A2  0857               	movf	(gdb_process_command@x+3)^(0+512),w
  9586  06A3  0646               	xorwf	(??_gdb_process_command+3)^(0+512),w
  9587  06A4  1D03               	skipz
  9588  06A5  2EB0               	goto	u5005
  9589  06A6  0856               	movf	(gdb_process_command@x+2)^(0+512),w
  9590  06A7  0645               	xorwf	(??_gdb_process_command+2)^(0+512),w
  9591  06A8  1D03               	skipz
  9592  06A9  2EB0               	goto	u5005
  9593  06AA  0855               	movf	(gdb_process_command@x+1)^(0+512),w
  9594  06AB  0644               	xorwf	(??_gdb_process_command+1)^(0+512),w
  9595  06AC  1D03               	skipz
  9596  06AD  2EB0               	goto	u5005
  9597  06AE  0854               	movf	gdb_process_command@x^(0+512),w
  9598  06AF  0643               	xorwf	??_gdb_process_command^(0+512),w
  9599  06B0                     u5005:	
  9600  06B0  1D03               	skipz
  9601  06B1  2E8E               	goto	l5465
  9602  06B2  0859               	movf	gdb_process_command@i^(0+512),w
  9603  06B3  0709               	addwf	9,w
  9604  06B4  0709               	addwf	9,w
  9605  06B5  3EA0               	addlw	_break_points& (0+255)
  9606  06B6  0086               	movwf	6
  9607  06B7  3003               	movlw	3	; select bank7/8
  9608  06B8  0087               	movwf	7
  9609  06B9  3000               	movlw	0
  9610  06BA  3FC0               	movwi [0]fsr1
  9611  06BB  3FC1               	movwi [1]fsr1
  9612  06BC  3FC2               	movwi [2]fsr1
  9613  06BD  3FC3               	movwi [3]fsr1
  9614  06BE                     l5469:	
  9615                           
  9616                           ;gdb_stub.c: 265: }
  9617                           ;gdb_stub.c: 266: }
  9618                           ;gdb_stub.c: 267: bdm_update_breakpoints();
  9619  06BE  3190  2072  3180   	fcall	_bdm_update_breakpoints
  9620                           
  9621                           ;gdb_stub.c: 268: gdb_send('+',"OK");
  9622  06C1  30B1               	movlw	low (STR_5| (0+32768))
  9623  06C2  0024               	movlb	4	; select bank4
  9624  06C3  00B5               	movwf	gdb_send@reply^(0+512)
  9625  06C4  3099               	movlw	high (STR_5| (0+32768))
  9626  06C5  00B6               	movwf	(gdb_send@reply^(0+512)+1)
  9627  06C6  302B               	movlw	43
  9628  06C7  3196  2ED1         	ljmp	_gdb_send
  9629  06C9                     l5471:	
  9630                           ;gdb_stub.c: 269: }
  9631                           
  9632                           
  9633                           ;gdb_stub.c: 270: else if (msg[0]=='s')
  9634  06C9  0858               	movf	gdb_process_command@msg^(0+512),w
  9635  06CA  0086               	movwf	6
  9636  06CB  3003               	movlw	3	; select bank6/7
  9637  06CC  0087               	movwf	7
  9638  06CD  0801               	movf	1,w
  9639  06CE  3A73               	xorlw	115
  9640  06CF  1D03               	skipz
  9641  06D0  2ED7               	goto	l5477
  9642                           
  9643                           ;gdb_stub.c: 271: {
  9644                           ;gdb_stub.c: 272: bdm_continue_single_step();
  9645  06D1  319A  2283         	fcall	_bdm_continue_single_step
  9646                           
  9647                           ;gdb_stub.c: 273: check_freeze=2;
  9648  06D3  3002               	movlw	2
  9649  06D4  0025               	movlb	5	; select bank5
  9650  06D5  00ED               	movwf	_check_freeze^(0+640)
  9651                           
  9652                           ;gdb_stub.c: 274: }
  9653  06D6  0008               	return
  9654  06D7                     l5477:	
  9655                           
  9656                           ;gdb_stub.c: 275: else if (msg[0]=='c')
  9657  06D7  0858               	movf	gdb_process_command@msg^(0+512),w
  9658  06D8  0086               	movwf	6
  9659  06D9  3003               	movlw	3	; select bank6/7
  9660  06DA  0087               	movwf	7
  9661  06DB  0801               	movf	1,w
  9662  06DC  3A63               	xorlw	99
  9663  06DD  1D03               	skipz
  9664  06DE  2EE5               	goto	l5483
  9665                           
  9666                           ;gdb_stub.c: 276: {
  9667                           ;gdb_stub.c: 277: bdm_continue();
  9668  06DF  319A  22ED         	fcall	_bdm_continue
  9669                           
  9670                           ;gdb_stub.c: 279: check_freeze=1;
  9671  06E1  0025               	movlb	5	; select bank5
  9672  06E2  01ED               	clrf	_check_freeze^(0+640)
  9673  06E3  0AED               	incf	_check_freeze^(0+640),f
  9674                           
  9675                           ;gdb_stub.c: 280: }
  9676  06E4  0008               	return
  9677  06E5                     l5483:	
  9678                           
  9679                           ;gdb_stub.c: 281: else if (msg[0]=='H' && msg[1]=='c')
  9680  06E5  0858               	movf	gdb_process_command@msg^(0+512),w
  9681  06E6  0086               	movwf	6
  9682  06E7  3003               	movlw	3	; select bank6/7
  9683  06E8  0087               	movwf	7
  9684  06E9  0801               	movf	1,w
  9685  06EA  3A48               	xorlw	72
  9686  06EB  1D03               	skipz
  9687  06EC  2EFA               	goto	l5489
  9688  06ED  0A58               	incf	gdb_process_command@msg^(0+512),w
  9689  06EE  0086               	movwf	6
  9690  06EF  0801               	movf	1,w
  9691  06F0  3A63               	xorlw	99
  9692  06F1  1D03               	skipz
  9693  06F2  2EFA               	goto	l5489
  9694                           
  9695                           ;gdb_stub.c: 282: {
  9696                           ;gdb_stub.c: 283: gdb_send('+',"OK");
  9697  06F3  30B1               	movlw	low (STR_5| (0+32768))
  9698  06F4  00B5               	movwf	gdb_send@reply^(0+512)
  9699  06F5  3099               	movlw	high (STR_5| (0+32768))
  9700  06F6  00B6               	movwf	(gdb_send@reply^(0+512)+1)
  9701  06F7  302B               	movlw	43
  9702  06F8  3196  2ED1         	ljmp	_gdb_send
  9703  06FA                     l5489:	
  9704                           ;gdb_stub.c: 284: }
  9705                           
  9706                           
  9707                           ;gdb_stub.c: 285: else
  9708                           ;gdb_stub.c: 286: gdb_send('+',"");
  9709  06FA  30A8               	movlw	low ((STR_3+72)| (0+32768))
  9710  06FB  00B5               	movwf	gdb_send@reply^(0+512)
  9711  06FC  3099               	movlw	high ((STR_3+72)| (0+32768))
  9712  06FD  00B6               	movwf	(gdb_send@reply^(0+512)+1)
  9713  06FE  302B               	movlw	43
  9714  06FF  3196  2ED1         	ljmp	_gdb_send
  9715  0701                     __end_of_gdb_process_command:	
  9716  0701                     __ptext32:	
  9717 ;; *************** function _bdm_set_spr *****************
  9718 ;; Defined at:
  9719 ;;		line 316 in file "mpc_bdm.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;  reg             4   10[BANK3 ] unsigned long 
  9722 ;;  value           4   14[BANK3 ] unsigned long 
  9723 ;; Auto vars:     Size  Location     Type
  9724 ;;  in              5    5[BANK4 ] struct bdm_in_s
  9725 ;;  out             5    0[BANK4 ] struct bdm_out_s
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  2   10[BANK3 ] int 
  9728 ;; Registers used:
  9729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9730 ;; Tracked objects:
  9731 ;;		On entry : 1F/3
  9732 ;;		On exit  : 1F/1
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9735 ;;      Params:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  9736 ;;      Locals:         0       0       0       0       0      10       0       0       0       0       0       0       
      +0       0
  9737 ;;      Temps:          0       0       0       0      12       0       0       0       0       0       0       0       
      +0       0
  9738 ;;      Totals:         0       0       0       0      20      10       0       0       0       0       0       0       
      +0       0
  9739 ;;Total ram usage:       30 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; Hardware stack levels required when called:   12
  9742 ;; This function calls:
  9743 ;;		_bdm_clk_serial
  9744 ;;		_bdm_restore_regs
  9745 ;;		_bdm_save_regs
  9746 ;;		_bdm_set_gpr
  9747 ;; This function is called by:
  9748 ;;		_bdm_continue
  9749 ;;		_bdm_continue_single_step
  9750 ;;		_bdm_update_breakpoints
  9751 ;;		_gdb_process_command
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           
  9756                           ;psect for function _bdm_set_spr
  9757  0701                     _bdm_set_spr:	
  9758  0701                     l4255:	
  9759                           ;incstack = 0
  9760                           ; Regs used in _bdm_set_spr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9761                           
  9762                           
  9763                           ;mpc_bdm.c: 319: bdm_in_t in;
  9764                           ;mpc_bdm.c: 320: bdm_out_t out;
  9765                           ;mpc_bdm.c: 337: bdm_save_regs();
  9766  0701  319E  260F  3180   	fcall	_bdm_save_regs
  9767                           
  9768                           ;mpc_bdm.c: 339: bdm_set_gpr( 0, value );
  9769  0704  0021               	movlb	1	; select bank1
  9770  0705  01C4               	clrf	bdm_set_gpr@reg_nr^(0+128)
  9771  0706  01C5               	clrf	(bdm_set_gpr@reg_nr+1)^(0+128)
  9772  0707  01C6               	clrf	(bdm_set_gpr@reg_nr+2)^(0+128)
  9773  0708  01C7               	clrf	(bdm_set_gpr@reg_nr+3)^(0+128)
  9774  0709  0023               	movlb	3	; select bank3
  9775  070A  085C               	movf	(bdm_set_spr@value+3)^(0+384),w
  9776  070B  0021               	movlb	1	; select bank1
  9777  070C  00CB               	movwf	(bdm_set_gpr@value+3)^(0+128)
  9778  070D  0023               	movlb	3	; select bank3
  9779  070E  085B               	movf	(bdm_set_spr@value+2)^(0+384),w
  9780  070F  0021               	movlb	1	; select bank1
  9781  0710  00CA               	movwf	(bdm_set_gpr@value+2)^(0+128)
  9782  0711  0023               	movlb	3	; select bank3
  9783  0712  085A               	movf	(bdm_set_spr@value+1)^(0+384),w
  9784  0713  0021               	movlb	1	; select bank1
  9785  0714  00C9               	movwf	(bdm_set_gpr@value+1)^(0+128)
  9786  0715  0023               	movlb	3	; select bank3
  9787  0716  0859               	movf	bdm_set_spr@value^(0+384),w
  9788  0717  0021               	movlb	1	; select bank1
  9789  0718  00C8               	movwf	bdm_set_gpr@value^(0+128)
  9790  0719  319D  25C4  3180   	fcall	_bdm_set_gpr
  9791                           
  9792                           ;mpc_bdm.c: 342: in.prefix = 0x0;
  9793  071C  30FC               	movlw	-4
  9794  071D  0024               	movlb	4	; select bank4
  9795  071E  05A5               	andwf	bdm_set_spr@in^(0+512),f
  9796                           
  9797                           ;mpc_bdm.c: 344: in.data = ((((reg&0x1f) << 5) | ((reg >> 5)&0x1f)) << 11);
  9798  071F  301F               	movlw	31
  9799  0720  0023               	movlb	3	; select bank3
  9800  0721  00DD               	movwf	??_bdm_set_spr^(0+384)
  9801  0722  01DE               	clrf	(??_bdm_set_spr^(0+384)+1)
  9802  0723  01DF               	clrf	(??_bdm_set_spr^(0+384)+2)
  9803  0724  01E0               	clrf	(??_bdm_set_spr^(0+384)+3)
  9804  0725  0855               	movf	bdm_set_spr@reg^(0+384),w
  9805  0726  00E1               	movwf	(??_bdm_set_spr+4)^(0+384)
  9806  0727  0856               	movf	(bdm_set_spr@reg+1)^(0+384),w
  9807  0728  00E2               	movwf	((??_bdm_set_spr+4)^(0+384)+1)
  9808  0729  0857               	movf	(bdm_set_spr@reg+2)^(0+384),w
  9809  072A  00E3               	movwf	((??_bdm_set_spr+4)^(0+384)+2)
  9810  072B  0858               	movf	(bdm_set_spr@reg+3)^(0+384),w
  9811  072C  00E4               	movwf	((??_bdm_set_spr+4)^(0+384)+3)
  9812  072D  3005               	movlw	5
  9813  072E                     u3425:	
  9814  072E  36E4               	lsrf	((??_bdm_set_spr+4)^(0+384)+3),f
  9815  072F  0CE3               	rrf	((??_bdm_set_spr+4)^(0+384)+2),f
  9816  0730  0CE2               	rrf	((??_bdm_set_spr+4)^(0+384)+1),f
  9817  0731  0CE1               	rrf	(??_bdm_set_spr+4)^(0+384),f
  9818  0732  0B89               	decfsz	9,f
  9819  0733  2F2E               	goto	u3425
  9820  0734  0861               	movf	(??_bdm_set_spr+4)^(0+384),w
  9821  0735  05DD               	andwf	??_bdm_set_spr^(0+384),f
  9822  0736  0862               	movf	(??_bdm_set_spr+5)^(0+384),w
  9823  0737  05DE               	andwf	(??_bdm_set_spr^(0+384)+1),f
  9824  0738  0863               	movf	(??_bdm_set_spr+6)^(0+384),w
  9825  0739  05DF               	andwf	(??_bdm_set_spr^(0+384)+2),f
  9826  073A  0864               	movf	(??_bdm_set_spr+7)^(0+384),w
  9827  073B  05E0               	andwf	(??_bdm_set_spr^(0+384)+3),f
  9828  073C  301F               	movlw	31
  9829  073D  0555               	andwf	bdm_set_spr@reg^(0+384),w
  9830  073E  00E5               	movwf	(??_bdm_set_spr+8)^(0+384)
  9831  073F  3000               	movlw	0
  9832  0740  01E6               	clrf	((??_bdm_set_spr+8)^(0+384)+1)
  9833  0741  01E7               	clrf	((??_bdm_set_spr+8)^(0+384)+2)
  9834  0742  0558               	andwf	(bdm_set_spr@reg+3)^(0+384),w
  9835  0743  00E8               	movwf	((??_bdm_set_spr+8)^(0+384)+3)
  9836  0744  3005               	movlw	5
  9837  0745                     u3435:	
  9838  0745  35E5               	lslf	(??_bdm_set_spr+8)^(0+384),f
  9839  0746  0DE6               	rlf	((??_bdm_set_spr+8)^(0+384)+1),f
  9840  0747  0DE7               	rlf	((??_bdm_set_spr+8)^(0+384)+2),f
  9841  0748  0DE8               	rlf	((??_bdm_set_spr+8)^(0+384)+3),f
  9842  0749  0B89               	decfsz	9,f
  9843  074A  2F45               	goto	u3435
  9844  074B  0865               	movf	(??_bdm_set_spr+8)^(0+384),w
  9845  074C  04DD               	iorwf	??_bdm_set_spr^(0+384),f
  9846  074D  0866               	movf	(??_bdm_set_spr+9)^(0+384),w
  9847  074E  04DE               	iorwf	(??_bdm_set_spr^(0+384)+1),f
  9848  074F  0867               	movf	(??_bdm_set_spr+10)^(0+384),w
  9849  0750  04DF               	iorwf	(??_bdm_set_spr^(0+384)+2),f
  9850  0751  0868               	movf	(??_bdm_set_spr+11)^(0+384),w
  9851  0752  04E0               	iorwf	(??_bdm_set_spr^(0+384)+3),f
  9852  0753  300B               	movlw	11
  9853  0754                     u3445:	
  9854  0754  35DD               	lslf	??_bdm_set_spr^(0+384),f
  9855  0755  0DDE               	rlf	(??_bdm_set_spr^(0+384)+1),f
  9856  0756  0DDF               	rlf	(??_bdm_set_spr^(0+384)+2),f
  9857  0757  0DE0               	rlf	(??_bdm_set_spr^(0+384)+3),f
  9858  0758  0B89               	decfsz	9,f
  9859  0759  2F54               	goto	u3445
  9860  075A  0860               	movf	(??_bdm_set_spr+3)^(0+384),w
  9861  075B  27EE  3180         	fcall	PL361	;call to abstracted procedure
  9862                           
  9863                           ;mpc_bdm.c: 345: in.data = in.data + 0x7c0003a6;
  9864  075D  30A6               	movlw	166
  9865  075E  0023               	movlb	3	; select bank3
  9866  075F  00DD               	movwf	??_bdm_set_spr^(0+384)
  9867  0760  3003               	movlw	3
  9868  0761  00DE               	movwf	(??_bdm_set_spr^(0+384)+1)
  9869  0762  307C               	movlw	124
  9870  0763  01DF               	clrf	(??_bdm_set_spr^(0+384)+2)
  9871  0764  00E0               	movwf	(??_bdm_set_spr^(0+384)+3)
  9872  0765  3026               	movlw	(bdm_set_spr@in& (0+255)+1)
  9873  0766  0086               	movwf	6
  9874  0767  3002               	movlw	2	; select bank4/5
  9875  0768  0087               	movwf	7
  9876  0769  3F40               	moviw [0]fsr1
  9877  076A  07DD               	addwf	??_bdm_set_spr^(0+384),f
  9878  076B  3F41               	moviw [1]fsr1
  9879  076C  3DDE               	addwfc	(??_bdm_set_spr^(0+384)+1),f
  9880  076D  3F42               	moviw [2]fsr1
  9881  076E  3DDF               	addwfc	(??_bdm_set_spr^(0+384)+2),f
  9882  076F  3F43               	moviw [3]fsr1
  9883  0770  3DE0               	addwfc	(??_bdm_set_spr^(0+384)+3),f
  9884  0771  0860               	movf	(??_bdm_set_spr+3)^(0+384),w
  9885  0772  27EE               	fcall	PL361	;call to abstracted procedure
  9886                           
  9887                           ;mpc_bdm.c: 346: if( bdm_clk_serial( &in, &out ) < 0 ){
  9888  0773  3025               	movlw	low bdm_set_spr@in
  9889  0774  0021               	movlb	1	; select bank1
  9890  0775  00A8               	movwf	bdm_clk_serial@in^(0+128)
  9891  0776  3002               	movlw	high bdm_set_spr@in
  9892  0777  00A9               	movwf	(bdm_clk_serial@in+1)^(0+128)
  9893  0778  3020               	movlw	low bdm_set_spr@out
  9894  0779  00AA               	movwf	bdm_clk_serial@out^(0+128)
  9895  077A  3002               	movlw	high bdm_set_spr@out
  9896  077B  00AB               	movwf	(bdm_clk_serial@out+1)^(0+128)
  9897  077C  3191  21D6  3180   	fcall	_bdm_clk_serial
  9898  077F  1BAB               	btfsc	(?_bdm_clk_serial+3)^(0+128),7
  9899  0780  0008               	return
  9900                           
  9901                           ;mpc_bdm.c: 348: }
  9902                           ;mpc_bdm.c: 351: bdm_restore_regs();
  9903  0781  319E  2E3D         	ljmp	l3785
  9904  0783                     __end_of_bdm_set_spr:	
  9905  0783                     __ptext25:	
  9906 ;; *************** function ___bmul *****************
  9907 ;; Defined at:
  9908 ;;		line 4 in file "/Applications/microchip/xc8/v1.33old/sources/common/Umul8.c"
  9909 ;; Parameters:    Size  Location     Type
  9910 ;;  multiplier      1    wreg     unsigned char 
  9911 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  9912 ;; Auto vars:     Size  Location     Type
  9913 ;;  multiplier      1    2[BANK1 ] unsigned char 
  9914 ;;  product         1    1[BANK1 ] unsigned char 
  9915 ;; Return value:  Size  Location     Type
  9916 ;;                  1    wreg      unsigned char 
  9917 ;; Registers used:
  9918 ;;		wreg, status,2, status,0
  9919 ;; Tracked objects:
  9920 ;;		On entry : 1A/1
  9921 ;;		On exit  : 1F/1
  9922 ;;		Unchanged: 0/0
  9923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9924 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9925 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9927 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9928 ;;Total ram usage:        3 bytes
  9929 ;; Hardware stack levels used:    1
  9930 ;; Hardware stack levels required when called:    8
  9931 ;; This function calls:
  9932 ;;		Nothing
  9933 ;; This function is called by:
  9934 ;;		_init_endpoints
  9935 ;;		_stall_ep_in
  9936 ;;		_handle_standard_control_request
  9937 ;;		_usb_service
  9938 ;;		_usb_get_in_buffer
  9939 ;;		_usb_send_in_buffer
  9940 ;;		_usb_halt_ep_in
  9941 ;;		_usb_in_endpoint_halted
  9942 ;;		_usb_get_out_buffer
  9943 ;;		_usb_arm_out_endpoint
  9944 ;;		_usb_halt_ep_out
  9945 ;;		_usb_out_endpoint_halted
  9946 ;;		_bdm_update_breakpoints
  9947 ;;		_gdb_process_command
  9948 ;;		i1_init_endpoints
  9949 ;;		i1_usb_in_endpoint_halted
  9950 ;; This function uses a non-reentrant model
  9951 ;;
  9952                           
  9953                           
  9954                           ;psect for function ___bmul
  9955  0783                     ___bmul:	
  9956                           
  9957                           ;incstack = 0
  9958                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9959                           ;___bmul@multiplier stored from wreg
  9960  0783  0021               	movlb	1	; select bank1
  9961  0784  00A2               	movwf	___bmul@multiplier^(0+128)
  9962  0785  01A1               	clrf	___bmul@product^(0+128)
  9963  0786                     l3789:	
  9964  0786  0820               	movf	___bmul@multiplicand^(0+128),w
  9965  0787  1822               	btfsc	___bmul@multiplier^(0+128),0
  9966  0788  07A1               	addwf	___bmul@product^(0+128),f
  9967  0789  35A0               	lslf	___bmul@multiplicand^(0+128),f
  9968  078A  36A2               	lsrf	___bmul@multiplier^(0+128),f
  9969  078B  08A2               	movf	___bmul@multiplier^(0+128),f
  9970  078C  1D03               	skipz
  9971  078D  2F86               	goto	l3789
  9972  078E  0821               	movf	___bmul@product^(0+128),w
  9973  078F  0008               	return
  9974  0790                     __end_of___bmul:	
  9975  0790                     __ptext22:	
  9976 ;; *************** function _gdb_extract_bytes *****************
  9977 ;; Defined at:
  9978 ;;		line 395 in file "gdb_stub.c"
  9979 ;; Parameters:    Size  Location     Type
  9980 ;;  s               1    wreg     unsigned char 
  9981 ;;  e               1    0[BANK1 ] unsigned char 
  9982 ;;  msg             1    1[BANK1 ] PTR unsigned char 
  9983 ;;		 -> main@msg(64), 
  9984 ;; Auto vars:     Size  Location     Type
  9985 ;;  s               1    8[BANK1 ] unsigned char 
  9986 ;;  x               4    9[BANK1 ] unsigned long 
  9987 ;;  k               1   15[BANK1 ] unsigned char 
  9988 ;;  i               1   14[BANK1 ] unsigned char 
  9989 ;;  j               1   13[BANK1 ] unsigned char 
  9990 ;; Return value:  Size  Location     Type
  9991 ;;                  4    0[BANK1 ] unsigned long 
  9992 ;; Registers used:
  9993 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9994 ;; Tracked objects:
  9995 ;;		On entry : 1F/4
  9996 ;;		On exit  : 1F/1
  9997 ;;		Unchanged: 0/0
  9998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9999 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10000 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10001 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10002 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 10003 ;;Total ram usage:       16 bytes
 10004 ;; Hardware stack levels used:    1
 10005 ;; Hardware stack levels required when called:    8
 10006 ;; This function calls:
 10007 ;;		Nothing
 10008 ;; This function is called by:
 10009 ;;		_gdb_process_command
 10010 ;; This function uses a non-reentrant model
 10011 ;;
 10012                           
 10013                           
 10014                           ;psect for function _gdb_extract_bytes
 10015  0790                     _gdb_extract_bytes:	
 10016                           
 10017                           ;incstack = 0
 10018                           ; Regs used in _gdb_extract_bytes: [wreg+fsr1l+fsr1h+status,2+status,0]
 10019                           ;gdb_extract_bytes@s stored from wreg
 10020  0790  0021               	movlb	1	; select bank1
 10021  0791  00A8               	movwf	gdb_extract_bytes@s^(0+128)
 10022                           
 10023                           ;gdb_stub.c: 397: unsigned char i,j,k;
 10024                           ;gdb_stub.c: 398: unsigned long x;
 10025                           ;gdb_stub.c: 400: j=0;
 10026  0792  01AD               	clrf	gdb_extract_bytes@j^(0+128)
 10027                           
 10028                           ;gdb_stub.c: 401: x=0;
 10029  0793  01A9               	clrf	gdb_extract_bytes@x^(0+128)
 10030  0794  01AA               	clrf	(gdb_extract_bytes@x+1)^(0+128)
 10031  0795  01AB               	clrf	(gdb_extract_bytes@x+2)^(0+128)
 10032  0796  01AC               	clrf	(gdb_extract_bytes@x+3)^(0+128)
 10033                           
 10034                           ;gdb_stub.c: 402: for (i=s;i>e;i--)
 10035  0797  00AE               	movwf	gdb_extract_bytes@i^(0+128)
 10036  0798                     l1011:	
 10037  0798  082E               	movf	gdb_extract_bytes@i^(0+128),w
 10038  0799  0220               	subwf	gdb_extract_bytes@e^(0+128),w
 10039  079A  1803               	btfsc	3,0
 10040  079B  2FC4               	goto	l4771
 10041                           
 10042                           ;gdb_stub.c: 403: {
 10043                           ;gdb_stub.c: 404: k=msg[i];
 10044  079C  082E               	movf	gdb_extract_bytes@i^(0+128),w
 10045  079D  0721               	addwf	gdb_extract_bytes@msg^(0+128),w
 10046  079E  00A4               	movwf	??_gdb_extract_bytes^(0+128)
 10047  079F  0086               	movwf	6
 10048  07A0  3003               	movlw	3	; select bank6/7
 10049  07A1  0087               	movwf	7
 10050  07A2  0801               	movf	1,w
 10051  07A3  00AF               	movwf	gdb_extract_bytes@k^(0+128)
 10052                           
 10053                           ;gdb_stub.c: 405: if (k > '9') k -= 7;
 10054  07A4  303A               	movlw	58
 10055  07A5  022F               	subwf	gdb_extract_bytes@k^(0+128),w
 10056  07A6  1C03               	skipc
 10057  07A7  2FAA               	goto	l1013
 10058  07A8  3007               	movlw	7
 10059  07A9  02AF               	subwf	gdb_extract_bytes@k^(0+128),f
 10060  07AA                     l1013:	
 10061                           
 10062                           ;gdb_stub.c: 406: (unsigned long)x=(unsigned long)x + (unsigned long)((unsigned long)(k&
      +                          0xf) << j);
 10063  07AA  082F               	movf	gdb_extract_bytes@k^(0+128),w
 10064  07AB  390F               	andlw	15
 10065  07AC  00A4               	movwf	??_gdb_extract_bytes^(0+128)
 10066  07AD  01A5               	clrf	(??_gdb_extract_bytes^(0+128)+1)
 10067  07AE  01A6               	clrf	(??_gdb_extract_bytes^(0+128)+2)
 10068  07AF  01A7               	clrf	(??_gdb_extract_bytes^(0+128)+3)
 10069  07B0  0A2D               	incf	gdb_extract_bytes@j^(0+128),w
 10070  07B1  2FB6               	goto	u4040
 10071  07B2                     u4045:	
 10072  07B2  35A4               	lslf	??_gdb_extract_bytes^(0+128),f
 10073  07B3  0DA5               	rlf	(??_gdb_extract_bytes^(0+128)+1),f
 10074  07B4  0DA6               	rlf	(??_gdb_extract_bytes^(0+128)+2),f
 10075  07B5  0DA7               	rlf	(??_gdb_extract_bytes^(0+128)+3),f
 10076  07B6                     u4040:	
 10077  07B6  0B89               	decfsz	9,f
 10078  07B7  2FB2               	goto	u4045
 10079  07B8  0824               	movf	??_gdb_extract_bytes^(0+128),w
 10080  07B9  07A9               	addwf	gdb_extract_bytes@x^(0+128),f
 10081  07BA  0825               	movf	(??_gdb_extract_bytes+1)^(0+128),w
 10082  07BB  3DAA               	addwfc	(gdb_extract_bytes@x+1)^(0+128),f
 10083  07BC  0826               	movf	(??_gdb_extract_bytes+2)^(0+128),w
 10084  07BD  3DAB               	addwfc	(gdb_extract_bytes@x+2)^(0+128),f
 10085  07BE  0827               	movf	(??_gdb_extract_bytes+3)^(0+128),w
 10086  07BF  3DAC               	addwfc	(gdb_extract_bytes@x+3)^(0+128),f
 10087                           
 10088                           ;gdb_stub.c: 407: j=j+4;
 10089  07C0  3004               	movlw	4
 10090  07C1  07AD               	addwf	gdb_extract_bytes@j^(0+128),f
 10091  07C2  03AE               	decf	gdb_extract_bytes@i^(0+128),f
 10092  07C3  2F98               	goto	l1011
 10093  07C4                     l4771:	
 10094                           
 10095                           ;gdb_stub.c: 408: }
 10096                           ;gdb_stub.c: 409: return(x);
 10097  07C4  082C               	movf	(gdb_extract_bytes@x+3)^(0+128),w
 10098  07C5  00A3               	movwf	(?_gdb_extract_bytes+3)^(0+128)
 10099  07C6  082B               	movf	(gdb_extract_bytes@x+2)^(0+128),w
 10100  07C7  00A2               	movwf	(?_gdb_extract_bytes+2)^(0+128)
 10101  07C8  082A               	movf	(gdb_extract_bytes@x+1)^(0+128),w
 10102  07C9  00A1               	movwf	(?_gdb_extract_bytes+1)^(0+128)
 10103  07CA  0829               	movf	gdb_extract_bytes@x^(0+128),w
 10104  07CB  00A0               	movwf	?_gdb_extract_bytes^(0+128)
 10105  07CC  0008               	return
 10106  07CD                     __end_of_gdb_extract_bytes:	
 10107  07CD                     __ptext28:	
 10108 ;; *************** function _bdm_init *****************
 10109 ;; Defined at:
 10110 ;;		line 472 in file "mpc_bdm.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;		None
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;		None
 10115 ;; Return value:  Size  Location     Type
 10116 ;;		None               void
 10117 ;; Registers used:
 10118 ;;		wreg
 10119 ;; Tracked objects:
 10120 ;;		On entry : 19/2
 10121 ;;		On exit  : 0/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10126 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10128 ;;Total ram usage:        3 bytes
 10129 ;; Hardware stack levels used:    1
 10130 ;; Hardware stack levels required when called:    8
 10131 ;; This function calls:
 10132 ;;		Nothing
 10133 ;; This function is called by:
 10134 ;;		_main
 10135 ;;		_gdb_process_command
 10136 ;; This function uses a non-reentrant model
 10137 ;;
 10138                           
 10139                           
 10140                           ;psect for function _bdm_init
 10141  07CD                     _bdm_init:	
 10142                           
 10143                           ;mpc_bdm.c: 474: LATCbits.LATC6=0;
 10144                           
 10145                           ;incstack = 0
 10146                           ; Regs used in _bdm_init: [wreg]
 10147  07CD  0022               	movlb	2	; select bank2
 10148  07CE  130E               	bcf	14,6	;volatile
 10149                           
 10150                           ;mpc_bdm.c: 475: LATCbits.LATC3=0;
 10151  07CF  118E               	bcf	14,3	;volatile
 10152                           
 10153                           ;mpc_bdm.c: 476: _delay((unsigned long)((20)*(48000000L/4000.0)));
 10154  07D0  3002               	movlw	2
 10155  07D1  0021               	movlb	1	; select bank1
 10156  07D2  00A2               	movwf	(??_bdm_init^(0+128)+2)
 10157  07D3  3038               	movlw	56
 10158  07D4  00A1               	movwf	(??_bdm_init^(0+128)+1)
 10159  07D5  30AD               	movlw	173
 10160  07D6  00A0               	movwf	??_bdm_init^(0+128)
 10161  07D7                     u5387:	
 10162  07D7  0BA0               	decfsz	??_bdm_init^(0+128),f
 10163  07D8  2FD7               	goto	u5387
 10164  07D9  0BA1               	decfsz	(??_bdm_init^(0+128)+1),f
 10165  07DA  2FD7               	goto	u5387
 10166  07DB  0BA2               	decfsz	(??_bdm_init^(0+128)+2),f
 10167  07DC  2FD7               	goto	u5387
 10168                           
 10169                           ;mpc_bdm.c: 477: LATCbits.LATC6=1;
 10170  07DD  0022               	movlb	2	; select bank2
 10171  07DE  170E               	bsf	14,6	;volatile
 10172                           
 10173                           ;mpc_bdm.c: 478: LATCbits.LATC3=1;
 10174  07DF  158E               	bsf	14,3	;volatile
 10175                           
 10176                           ;mpc_bdm.c: 479: _delay((unsigned long)((20)*(48000000L/4000.0)));
 10177  07E0  3002               	movlw	2
 10178  07E1  0021               	movlb	1	; select bank1
 10179  07E2  00A2               	movwf	(??_bdm_init^(0+128)+2)
 10180  07E3  3038               	movlw	56
 10181  07E4  00A1               	movwf	(??_bdm_init^(0+128)+1)
 10182  07E5  30AD               	movlw	173
 10183  07E6  00A0               	movwf	??_bdm_init^(0+128)
 10184  07E7                     u5397:	
 10185  07E7  0BA0               	decfsz	??_bdm_init^(0+128),f
 10186  07E8  2FE7               	goto	u5397
 10187  07E9  0BA1               	decfsz	(??_bdm_init^(0+128)+1),f
 10188  07EA  2FE7               	goto	u5397
 10189  07EB  0BA2               	decfsz	(??_bdm_init^(0+128)+2),f
 10190  07EC  2FE7               	goto	u5397
 10191  07ED  0008               	return
 10192  07EE                     __end_of_bdm_init:	
 10193  07EE                     PL361:	
 10194  07EE  0024               	movlb	4	; select bank4
 10195  07EF  00A9               	movwf	((bdm_set_spr@in+3)^(0+512)+1)
 10196  07F0  0023               	movlb	3	; select bank3
 10197  07F1  085F               	movf	(??_bdm_set_spr+2)^(0+384),w
 10198  07F2  0024               	movlb	4	; select bank4
 10199  07F3  00A8               	movwf	((bdm_set_spr@in+2)^(0+512)+1)
 10200  07F4  0023               	movlb	3	; select bank3
 10201  07F5  085E               	movf	(??_bdm_set_spr+1)^(0+384),w
 10202  07F6  0024               	movlb	4	; select bank4
 10203  07F7  00A7               	movwf	((bdm_set_spr@in+1)^(0+512)+1)
 10204  07F8  0023               	movlb	3	; select bank3
 10205  07F9  085D               	movf	??_bdm_set_spr^(0+384),w
 10206  07FA  0024               	movlb	4	; select bank4
 10207  07FB  00A6               	movwf	(bdm_set_spr@in^(0+512)+1)
 10208  07FC  0008               	return
 10209  07FD                     __end_ofPL361:	
 10210                           
 10211                           	psect	text11
 10212  1E79                     __ptext11:	
 10213 ;; *************** function _gdb_send_start *****************
 10214 ;; Defined at:
 10215 ;;		line 306 in file "gdb_stub.c"
 10216 ;; Parameters:    Size  Location     Type
 10217 ;;  reply_type      1    wreg     unsigned char 
 10218 ;;  chksum          1    9[BANK1 ] PTR unsigned char 
 10219 ;;		 -> qchksum(1), 
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;  reply_type      1   12[BANK1 ] unsigned char 
 10222 ;;  qbuf            2   13[BANK1 ] PTR unsigned char 
 10223 ;;		 -> ep_buffers(155), NULL(0), 
 10224 ;; Return value:  Size  Location     Type
 10225 ;;		None               void
 10226 ;; Registers used:
 10227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10228 ;; Tracked objects:
 10229 ;;		On entry : 1F/1
 10230 ;;		On exit  : 1E/0
 10231 ;;		Unchanged: 0/0
 10232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10233 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10234 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10235 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10236 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10237 ;;Total ram usage:        6 bytes
 10238 ;; Hardware stack levels used:    1
 10239 ;; Hardware stack levels required when called:   11
 10240 ;; This function calls:
 10241 ;;		_usb_get_configuration
 10242 ;;		_usb_get_in_buffer
 10243 ;;		_usb_in_endpoint_busy
 10244 ;;		_usb_in_endpoint_halted
 10245 ;;		_usb_send_in_buffer
 10246 ;; This function is called by:
 10247 ;;		_gdb_process_command
 10248 ;; This function uses a non-reentrant model
 10249 ;;
 10250                           
 10251                           
 10252                           ;psect for function _gdb_send_start
 10253  1E79                     _gdb_send_start:	
 10254                           
 10255                           ;incstack = 0
 10256                           ; Regs used in _gdb_send_start: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10257                           ;gdb_send_start@reply_type stored from wreg
 10258  1E79  00AC               	movwf	gdb_send_start@reply_type^(0+128)
 10259                           
 10260                           ;gdb_stub.c: 308: unsigned char *qbuf = usb_get_in_buffer(2);
 10261  1E7A  3002               	movlw	2
 10262  1E7B  2797               	fcall	_usb_get_in_buffer
 10263  1E7C  0824               	movf	(?_usb_get_in_buffer+1)^(0+128),w
 10264  1E7D  00AE               	movwf	(gdb_send_start@qbuf+1)^(0+128)
 10265  1E7E  0823               	movf	?_usb_get_in_buffer^(0+128),w
 10266  1E7F  00AD               	movwf	gdb_send_start@qbuf^(0+128)
 10267  1E80                     l4695:	
 10268                           ;gdb_stub.c: 310: while (usb_in_endpoint_busy(2) || usb_in_endpoint_halted(2)) {}
 10269                           
 10270  1E80  3002               	movlw	2
 10271  1E81                     L13:	
 10272  1E81  3197  27AE  319E   	fcall	_usb_in_endpoint_busy
 10273  1E84  3800               	iorlw	0
 10274  1E85  3002               	movlw	2
 10275  1E86  1D03               	skipz
 10276  1E87  2E81               	goto	L13
 10277  1E88  2712  319E         	fcall	_usb_in_endpoint_halted
 10278  1E8A  3800               	iorlw	0
 10279  1E8B  1D03               	skipz
 10280  1E8C  2E80               	goto	l4695
 10281                           
 10282                           ;gdb_stub.c: 312: *chksum = 0;
 10283  1E8D  0829               	movf	gdb_send_start@chksum^(0+128),w
 10284  1E8E  0086               	movwf	6
 10285  1E8F  3002               	movlw	2	; select bank4/5
 10286  1E90  0087               	movwf	7
 10287  1E91  0181               	clrf	1
 10288                           
 10289                           ;gdb_stub.c: 313: qbuf[0]=reply_type;
 10290  1E92  082D               	movf	gdb_send_start@qbuf^(0+128),w
 10291  1E93  0086               	movwf	6
 10292  1E94  082E               	movf	(gdb_send_start@qbuf+1)^(0+128),w
 10293  1E95  0087               	movwf	7
 10294  1E96  082C               	movf	gdb_send_start@reply_type^(0+128),w
 10295  1E97  0081               	movwf	1
 10296                           
 10297                           ;gdb_stub.c: 314: qbuf[1]='$';
 10298  1E98  082D               	movf	gdb_send_start@qbuf^(0+128),w
 10299  1E99  3E01               	addlw	1
 10300  1E9A  00AA               	movwf	??_gdb_send_start^(0+128)
 10301  1E9B  3000               	movlw	0
 10302  1E9C  3D2E               	addwfc	(gdb_send_start@qbuf+1)^(0+128),w
 10303  1E9D  00AB               	movwf	(??_gdb_send_start+1)^(0+128)
 10304  1E9E  082A               	movf	??_gdb_send_start^(0+128),w
 10305  1E9F  0086               	movwf	6
 10306  1EA0  082B               	movf	(??_gdb_send_start+1)^(0+128),w
 10307  1EA1  0087               	movwf	7
 10308  1EA2  3024               	movlw	36
 10309  1EA3  0081               	movwf	1
 10310                           
 10311                           ;gdb_stub.c: 315: if ((usb_get_configuration() != 0) && !usb_in_endpoint_halted(2) && !u
      +                          sb_in_endpoint_busy(2))
 10312  1EA4  3197  27AB  319E   	fcall	_usb_get_configuration
 10313  1EA7  3A00               	xorlw	0
 10314  1EA8  1903               	skipnz
 10315  1EA9  0008               	return
 10316  1EAA  3002               	movlw	2
 10317  1EAB  2712  319E         	fcall	_usb_in_endpoint_halted
 10318  1EAD  3800               	iorlw	0
 10319  1EAE  1D03               	skipz
 10320  1EAF  0008               	return
 10321  1EB0  3002               	movlw	2
 10322  1EB1  3197  27AE  319E   	fcall	_usb_in_endpoint_busy
 10323  1EB4  3800               	iorlw	0
 10324  1EB5  1D03               	skipz
 10325  1EB6  0008               	return
 10326                           
 10327                           ;gdb_stub.c: 316: usb_send_in_buffer(2, 2);
 10328  1EB7  3002               	movlw	2
 10329  1EB8  00A4               	movwf	usb_send_in_buffer@len^(0+128)
 10330  1EB9  01A5               	clrf	(usb_send_in_buffer@len+1)^(0+128)
 10331  1EBA  2FA7               	ljmp	_usb_send_in_buffer
 10332  1EBB                     __end_of_gdb_send_start:	
 10333  1EBB                     __ptext12:	
 10334 ;; *************** function _gdb_send_end *****************
 10335 ;; Defined at:
 10336 ;;		line 334 in file "gdb_stub.c"
 10337 ;; Parameters:    Size  Location     Type
 10338 ;;  chksum          1    wreg     PTR unsigned char 
 10339 ;;		 -> qchksum(1), 
 10340 ;; Auto vars:     Size  Location     Type
 10341 ;;  chksum          1   23[BANK4 ] PTR unsigned char 
 10342 ;;		 -> qchksum(1), 
 10343 ;;  qbuf            2   21[BANK4 ] PTR unsigned char 
 10344 ;;		 -> ep_buffers(155), NULL(0), 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;		None               void
 10347 ;; Registers used:
 10348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10349 ;; Tracked objects:
 10350 ;;		On entry : 1F/4
 10351 ;;		On exit  : 1E/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10355 ;;      Locals:         0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0
 10356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10357 ;;      Totals:         0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0
 10358 ;;Total ram usage:        3 bytes
 10359 ;; Hardware stack levels used:    1
 10360 ;; Hardware stack levels required when called:   11
 10361 ;; This function calls:
 10362 ;;		_gdb_hexstr
 10363 ;;		_usb_get_configuration
 10364 ;;		_usb_get_in_buffer
 10365 ;;		_usb_in_endpoint_busy
 10366 ;;		_usb_in_endpoint_halted
 10367 ;;		_usb_send_in_buffer
 10368 ;; This function is called by:
 10369 ;;		_gdb_process_command
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           
 10374                           ;psect for function _gdb_send_end
 10375  1EBB                     _gdb_send_end:	
 10376                           
 10377                           ;incstack = 0
 10378                           ; Regs used in _gdb_send_end: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10379                           ;gdb_send_end@chksum stored from wreg
 10380  1EBB  00B7               	movwf	gdb_send_end@chksum^(0+512)
 10381                           
 10382                           ;gdb_stub.c: 336: unsigned char *qbuf = usb_get_in_buffer(2);
 10383  1EBC  3002               	movlw	2
 10384  1EBD  2797               	fcall	_usb_get_in_buffer
 10385  1EBE  0824               	movf	(?_usb_get_in_buffer+1)^(0+128),w
 10386  1EBF  0024               	movlb	4	; select bank4
 10387  1EC0  00B6               	movwf	(gdb_send_end@qbuf+1)^(0+512)
 10388  1EC1  0021               	movlb	1	; select bank1
 10389  1EC2  0823               	movf	?_usb_get_in_buffer^(0+128),w
 10390  1EC3  0024               	movlb	4	; select bank4
 10391  1EC4  00B5               	movwf	gdb_send_end@qbuf^(0+512)
 10392                           
 10393                           ;gdb_stub.c: 337: *chksum = *chksum % 0x100;
 10394  1EC5  0837               	movf	gdb_send_end@chksum^(0+512),w
 10395  1EC6  0086               	movwf	6
 10396  1EC7  3002               	movlw	2	; select bank4/5
 10397  1EC8  0087               	movwf	7
 10398  1EC9  0837               	movf	gdb_send_end@chksum^(0+512),w
 10399  1ECA  0084               	movwf	4
 10400  1ECB  3002               	movlw	2	; select bank4/5
 10401  1ECC  0085               	movwf	5
 10402  1ECD  0800               	movf	0,w
 10403  1ECE  0081               	movwf	1
 10404  1ECF                     l4741:	
 10405                           ;gdb_stub.c: 339: while (usb_in_endpoint_busy(2) || usb_in_endpoint_halted(2)) {}
 10406                           
 10407  1ECF  3002               	movlw	2
 10408  1ED0                     L14:	
 10409  1ED0  3197  27AE  319E   	fcall	_usb_in_endpoint_busy
 10410  1ED3  3800               	iorlw	0
 10411  1ED4  3002               	movlw	2
 10412  1ED5  1D03               	skipz
 10413  1ED6  2ED0               	goto	L14
 10414  1ED7  2712  319E         	fcall	_usb_in_endpoint_halted
 10415  1ED9  3800               	iorlw	0
 10416  1EDA  1D03               	skipz
 10417  1EDB  2ECF               	goto	l4741
 10418                           
 10419                           ;gdb_stub.c: 341: qbuf[0]='#';
 10420  1EDC  0024               	movlb	4	; select bank4
 10421  1EDD  0835               	movf	gdb_send_end@qbuf^(0+512),w
 10422  1EDE  0086               	movwf	6
 10423  1EDF  0836               	movf	(gdb_send_end@qbuf+1)^(0+512),w
 10424  1EE0  0087               	movwf	7
 10425  1EE1  3023               	movlw	35
 10426  1EE2  0081               	movwf	1
 10427                           
 10428                           ;gdb_stub.c: 342: gdb_hexstr(qbuf, *chksum, 1, 1);
 10429  1EE3  0836               	movf	(gdb_send_end@qbuf+1)^(0+512),w
 10430  1EE4  0023               	movlb	3	; select bank3
 10431  1EE5  00E9               	movwf	(gdb_hexstr@buf+1)^(0+384)
 10432  1EE6  0024               	movlb	4	; select bank4
 10433  1EE7  0835               	movf	gdb_send_end@qbuf^(0+512),w
 10434  1EE8  0023               	movlb	3	; select bank3
 10435  1EE9  00E8               	movwf	gdb_hexstr@buf^(0+384)
 10436  1EEA  0024               	movlb	4	; select bank4
 10437  1EEB  0837               	movf	gdb_send_end@chksum^(0+512),w
 10438  1EEC  0086               	movwf	6
 10439  1EED  3002               	movlw	2	; select bank4/5
 10440  1EEE  0087               	movwf	7
 10441  1EEF  0801               	movf	1,w
 10442  1EF0  0023               	movlb	3	; select bank3
 10443  1EF1  00EA               	movwf	gdb_hexstr@val^(0+384)
 10444  1EF2  01EB               	clrf	(gdb_hexstr@val+1)^(0+384)
 10445  1EF3  01EC               	clrf	(gdb_hexstr@val+2)^(0+384)
 10446  1EF4  01ED               	clrf	(gdb_hexstr@val+3)^(0+384)
 10447  1EF5  01EE               	clrf	gdb_hexstr@len^(0+384)
 10448  1EF6  0AEE               	incf	gdb_hexstr@len^(0+384),f
 10449  1EF7  01EF               	clrf	gdb_hexstr@offset^(0+384)
 10450  1EF8  0AEF               	incf	gdb_hexstr@offset^(0+384),f
 10451  1EF9  2720               	fcall	_gdb_hexstr
 10452                           
 10453                           ;gdb_stub.c: 344: if ((usb_get_configuration() != 0) && !usb_in_endpoint_halted(2) && !u
      +                          sb_in_endpoint_busy(2))
 10454  1EFA  3197  27AB  319E   	fcall	_usb_get_configuration
 10455  1EFD  3A00               	xorlw	0
 10456  1EFE  1903               	skipnz
 10457  1EFF  0008               	return
 10458  1F00  3002               	movlw	2
 10459  1F01  2712  319E         	fcall	_usb_in_endpoint_halted
 10460  1F03  3800               	iorlw	0
 10461  1F04  1D03               	skipz
 10462  1F05  0008               	return
 10463  1F06  3002               	movlw	2
 10464  1F07  3197  27AE  319E   	fcall	_usb_in_endpoint_busy
 10465  1F0A  3800               	iorlw	0
 10466  1F0B  1D03               	skipz
 10467  1F0C  0008               	return
 10468                           
 10469                           ;gdb_stub.c: 345: usb_send_in_buffer(2, 3);
 10470  1F0D  3003               	movlw	3
 10471  1F0E  00A4               	movwf	usb_send_in_buffer@len^(0+128)
 10472  1F0F  3002               	movlw	2
 10473  1F10  01A5               	clrf	(usb_send_in_buffer@len+1)^(0+128)
 10474  1F11  2FA7               	ljmp	_usb_send_in_buffer
 10475  1F12                     __end_of_gdb_send_end:	
 10476  1F12                     __ptext16:	
 10477 ;; *************** function _usb_in_endpoint_halted *****************
 10478 ;; Defined at:
 10479 ;;		line 1566 in file "usb/src/usb.c"
 10480 ;; Parameters:    Size  Location     Type
 10481 ;;  endpoint        1    wreg     unsigned char 
 10482 ;; Auto vars:     Size  Location     Type
 10483 ;;  endpoint        1    3[BANK1 ] unsigned char 
 10484 ;; Return value:  Size  Location     Type
 10485 ;;                  1    wreg      unsigned char 
 10486 ;; Registers used:
 10487 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10488 ;; Tracked objects:
 10489 ;;		On entry : 1E/1
 10490 ;;		On exit  : 1F/1
 10491 ;;		Unchanged: 0/0
 10492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10494 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10496 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10497 ;;Total ram usage:        1 bytes
 10498 ;; Hardware stack levels used:    1
 10499 ;; Hardware stack levels required when called:    9
 10500 ;; This function calls:
 10501 ;;		___bmul
 10502 ;; This function is called by:
 10503 ;;		_usb_send_in_buffer
 10504 ;;		_gdb_send_start
 10505 ;;		_gdb_send_data
 10506 ;;		_gdb_send_end
 10507 ;;		_gdb_send
 10508 ;; This function uses a non-reentrant model
 10509 ;;
 10510                           
 10511                           
 10512                           ;psect for function _usb_in_endpoint_halted
 10513  1F12                     _usb_in_endpoint_halted:	
 10514                           
 10515                           ;incstack = 0
 10516                           ; Regs used in _usb_in_endpoint_halted: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 10517                           ;usb_in_endpoint_halted@endpoint stored from wreg
 10518  1F12  0021               	movlb	1	; select bank1
 10519  1F13  00A3               	movwf	usb_in_endpoint_halted@endpoint^(0+128)
 10520                           
 10521                           ;usb.c: 1568: return ep_buf[endpoint].flags & 0x2;
 10522  1F14  3007               	movlw	7
 10523  1F15  00A0               	movwf	___bmul@multiplicand^(0+128)
 10524  1F16  0823               	movf	usb_in_endpoint_halted@endpoint^(0+128),w
 10525  1F17  3187  2783         	fcall	___bmul
 10526  1F19  3EC0               	addlw	(_ep_buf+6)& (0+255)
 10527  1F1A  0086               	movwf	6
 10528  1F1B  3003               	movlw	3	; select bank7/8
 10529  1F1C  0087               	movwf	7
 10530  1F1D  0801               	movf	1,w
 10531  1F1E  3902               	andlw	2
 10532  1F1F  0008               	return
 10533  1F20                     __end_of_usb_in_endpoint_halted:	
 10534  1F20                     __ptext21:	
 10535 ;; *************** function _gdb_hexstr *****************
 10536 ;; Defined at:
 10537 ;;		line 292 in file "gdb_stub.c"
 10538 ;; Parameters:    Size  Location     Type
 10539 ;;  buf             2   29[BANK3 ] PTR unsigned char 
 10540 ;;		 -> gdb_process_command@msg_out(64), ep_buffers(155), NULL(0), 
 10541 ;;  val             4   31[BANK3 ] unsigned long 
 10542 ;;  len             1   35[BANK3 ] unsigned char 
 10543 ;;  offset          1   36[BANK3 ] unsigned char 
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;  m               4   12[BANK4 ] unsigned long 
 10546 ;;  i               1   20[BANK4 ] unsigned char 
 10547 ;;  a               1   19[BANK4 ] unsigned char 
 10548 ;;  j               1   18[BANK4 ] unsigned char 
 10549 ;; Return value:  Size  Location     Type
 10550 ;;		None               void
 10551 ;; Registers used:
 10552 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10553 ;; Tracked objects:
 10554 ;;		On entry : 1F/3
 10555 ;;		On exit  : 1F/4
 10556 ;;		Unchanged: 0/0
 10557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10558 ;;      Params:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
 10559 ;;      Locals:         0       0       0       0       0       9       0       0       0       0       0       0       
      +0       0
 10560 ;;      Temps:          0       0       0       0       0      12       0       0       0       0       0       0       
      +0       0
 10561 ;;      Totals:         0       0       0       0       8      21       0       0       0       0       0       0       
      +0       0
 10562 ;;Total ram usage:       29 bytes
 10563 ;; Hardware stack levels used:    1
 10564 ;; Hardware stack levels required when called:    8
 10565 ;; This function calls:
 10566 ;;		Nothing
 10567 ;; This function is called by:
 10568 ;;		_gdb_process_command
 10569 ;;		_gdb_send_end
 10570 ;;		_gdb_send
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           
 10575                           ;psect for function _gdb_hexstr
 10576  1F20                     _gdb_hexstr:	
 10577                           
 10578                           ;gdb_stub.c: 294: unsigned char i,j,a;
 10579                           ;gdb_stub.c: 295: unsigned long m=0xf;
 10580                           
 10581                           ;incstack = 0
 10582                           ; Regs used in _gdb_hexstr: [wreg+fsr1l+fsr1h+status,2+status,0]
 10583  1F20  300F               	movlw	15
 10584  1F21  0024               	movlb	4	; select bank4
 10585  1F22  00AC               	movwf	gdb_hexstr@m^(0+512)
 10586  1F23  01AD               	clrf	(gdb_hexstr@m+1)^(0+512)
 10587  1F24  01AE               	clrf	(gdb_hexstr@m+2)^(0+512)
 10588  1F25  01AF               	clrf	(gdb_hexstr@m+3)^(0+512)
 10589                           
 10590                           ;gdb_stub.c: 297: j=len*2;
 10591  1F26  0023               	movlb	3	; select bank3
 10592  1F27  356E               	lslf	gdb_hexstr@len^(0+384),w
 10593  1F28  0024               	movlb	4	; select bank4
 10594  1F29  00B2               	movwf	gdb_hexstr@j^(0+512)
 10595                           
 10596                           ;gdb_stub.c: 298: buf[offset+j]=0;
 10597  1F2A  27ED  319E         	fcall	PL355	;call to abstracted procedure
 10598  1F2C  0086               	movwf	6
 10599  1F2D  0821               	movf	(??_gdb_hexstr+1)^(0+512),w
 10600  1F2E  3D25               	addwfc	(??_gdb_hexstr+5)^(0+512),w
 10601  1F2F  0087               	movwf	7
 10602  1F30  0181               	clrf	1
 10603                           
 10604                           ;gdb_stub.c: 299: for (i=0;i<j;i++)
 10605  1F31  01B4               	clrf	gdb_hexstr@i^(0+512)
 10606  1F32                     l4317:	
 10607  1F32  0832               	movf	gdb_hexstr@j^(0+512),w
 10608  1F33  0234               	subwf	gdb_hexstr@i^(0+512),w
 10609  1F34  1803               	btfsc	3,0
 10610  1F35  0008               	return
 10611                           
 10612                           ;gdb_stub.c: 300: {
 10613                           ;gdb_stub.c: 301: a=(val&(m<<(i*4)))>>(i*4);
 10614  1F36  0023               	movlb	3	; select bank3
 10615  1F37  086A               	movf	gdb_hexstr@val^(0+384),w
 10616  1F38  0024               	movlb	4	; select bank4
 10617  1F39  00A0               	movwf	??_gdb_hexstr^(0+512)
 10618  1F3A  0023               	movlb	3	; select bank3
 10619  1F3B  086B               	movf	(gdb_hexstr@val+1)^(0+384),w
 10620  1F3C  0024               	movlb	4	; select bank4
 10621  1F3D  00A1               	movwf	(??_gdb_hexstr^(0+512)+1)
 10622  1F3E  0023               	movlb	3	; select bank3
 10623  1F3F  086C               	movf	(gdb_hexstr@val+2)^(0+384),w
 10624  1F40  0024               	movlb	4	; select bank4
 10625  1F41  00A2               	movwf	(??_gdb_hexstr^(0+512)+2)
 10626  1F42  0023               	movlb	3	; select bank3
 10627  1F43  086D               	movf	(gdb_hexstr@val+3)^(0+384),w
 10628  1F44  0024               	movlb	4	; select bank4
 10629  1F45  00A3               	movwf	(??_gdb_hexstr^(0+512)+3)
 10630  1F46  082C               	movf	gdb_hexstr@m^(0+512),w
 10631  1F47  00A4               	movwf	(??_gdb_hexstr+4)^(0+512)
 10632  1F48  082D               	movf	(gdb_hexstr@m+1)^(0+512),w
 10633  1F49  00A5               	movwf	((??_gdb_hexstr+4)^(0+512)+1)
 10634  1F4A  082E               	movf	(gdb_hexstr@m+2)^(0+512),w
 10635  1F4B  00A6               	movwf	((??_gdb_hexstr+4)^(0+512)+2)
 10636  1F4C  082F               	movf	(gdb_hexstr@m+3)^(0+512),w
 10637  1F4D  00A7               	movwf	((??_gdb_hexstr+4)^(0+512)+3)
 10638  1F4E  0834               	movf	gdb_hexstr@i^(0+512),w
 10639  1F4F  0709               	addwf	9,w
 10640  1F50  0709               	addwf	9,w
 10641  1F51  0A89               	incf	9,f
 10642  1F52  2F57               	goto	u3480
 10643  1F53                     u3485:	
 10644  1F53  35A4               	lslf	(??_gdb_hexstr+4)^(0+512),f
 10645  1F54  0DA5               	rlf	((??_gdb_hexstr+4)^(0+512)+1),f
 10646  1F55  0DA6               	rlf	((??_gdb_hexstr+4)^(0+512)+2),f
 10647  1F56  0DA7               	rlf	((??_gdb_hexstr+4)^(0+512)+3),f
 10648  1F57                     u3480:	
 10649  1F57  0B89               	decfsz	9,f
 10650  1F58  2F53               	goto	u3485
 10651  1F59  0824               	movf	(??_gdb_hexstr+4)^(0+512),w
 10652  1F5A  05A0               	andwf	??_gdb_hexstr^(0+512),f
 10653  1F5B  0825               	movf	(??_gdb_hexstr+5)^(0+512),w
 10654  1F5C  05A1               	andwf	(??_gdb_hexstr^(0+512)+1),f
 10655  1F5D  0826               	movf	(??_gdb_hexstr+6)^(0+512),w
 10656  1F5E  05A2               	andwf	(??_gdb_hexstr^(0+512)+2),f
 10657  1F5F  0827               	movf	(??_gdb_hexstr+7)^(0+512),w
 10658  1F60  05A3               	andwf	(??_gdb_hexstr^(0+512)+3),f
 10659  1F61  0834               	movf	gdb_hexstr@i^(0+512),w
 10660  1F62  0709               	addwf	9,w
 10661  1F63  0709               	addwf	9,w
 10662  1F64  0A89               	incf	9,f
 10663  1F65  2F6B               	goto	u3490
 10664  1F66                     u3495:	
 10665  1F66  1003               	clrc
 10666  1F67  0CA3               	rrf	(??_gdb_hexstr^(0+512)+3),f
 10667  1F68  0CA2               	rrf	(??_gdb_hexstr^(0+512)+2),f
 10668  1F69  0CA1               	rrf	(??_gdb_hexstr^(0+512)+1),f
 10669  1F6A  0CA0               	rrf	??_gdb_hexstr^(0+512),f
 10670  1F6B                     u3490:	
 10671  1F6B  3EFF               	addlw	-1
 10672  1F6C  1D03               	skipz
 10673  1F6D  2F66               	goto	u3495
 10674  1F6E  0820               	movf	??_gdb_hexstr^(0+512),w
 10675  1F6F  00B3               	movwf	gdb_hexstr@a^(0+512)
 10676                           
 10677                           ;gdb_stub.c: 302: buf[offset+j-i-1] = (a<10)?'0'+a:'a'+(a-10);
 10678  1F70  300A               	movlw	10
 10679  1F71  0233               	subwf	gdb_hexstr@a^(0+512),w
 10680  1F72  0833               	movf	gdb_hexstr@a^(0+512),w
 10681  1F73  00B0               	movwf	_gdb_hexstr$1711^(0+512)
 10682  1F74  1C03               	skipc
 10683  1F75  2F78               	goto	L19
 10684  1F76  3057               	movlw	87
 10685  1F77  2F79               	goto	L18
 10686  1F78                     L19:	
 10687  1F78  3030               	movlw	48
 10688  1F79                     L18:	
 10689  1F79  01B1               	clrf	(_gdb_hexstr$1711+1)^(0+512)
 10690  1F7A  07B0               	addwf	_gdb_hexstr$1711^(0+512),f
 10691  1F7B  1803               	skipnc
 10692  1F7C  0AB1               	incf	(_gdb_hexstr$1711+1)^(0+512),f
 10693  1F7D  0832               	movf	gdb_hexstr@j^(0+512),w
 10694  1F7E  27ED  319E         	fcall	PL355	;call to abstracted procedure
 10695  1F80  00A6               	movwf	(??_gdb_hexstr+6)^(0+512)
 10696  1F81  0821               	movf	(??_gdb_hexstr+1)^(0+512),w
 10697  1F82  3D25               	addwfc	(??_gdb_hexstr+5)^(0+512),w
 10698  1F83  00A7               	movwf	(??_gdb_hexstr+7)^(0+512)
 10699  1F84  00A9               	movwf	((??_gdb_hexstr+8)^(0+512)+1)
 10700  1F85  0834               	movf	gdb_hexstr@i^(0+512),w
 10701  1F86  0226               	subwf	(??_gdb_hexstr+6)^(0+512),w
 10702  1F87  00A8               	movwf	(??_gdb_hexstr+8)^(0+512)
 10703  1F88  1C03               	skipc
 10704  1F89  03A9               	decf	((??_gdb_hexstr+8)^(0+512)+1),f
 10705  1F8A  3EFF               	addlw	255
 10706  1F8B  00AA               	movwf	(??_gdb_hexstr+10)^(0+512)
 10707  1F8C  30FF               	movlw	255
 10708  1F8D  3D29               	addwfc	(??_gdb_hexstr+9)^(0+512),w
 10709  1F8E  00AB               	movwf	(??_gdb_hexstr+11)^(0+512)
 10710  1F8F  082A               	movf	(??_gdb_hexstr+10)^(0+512),w
 10711  1F90  0086               	movwf	6
 10712  1F91  082B               	movf	(??_gdb_hexstr+11)^(0+512),w
 10713  1F92  0087               	movwf	7
 10714  1F93  0830               	movf	_gdb_hexstr$1711^(0+512),w
 10715  1F94  0081               	movwf	1
 10716  1F95  0AB4               	incf	gdb_hexstr@i^(0+512),f
 10717  1F96  2F32               	goto	l4317
 10718  1F97                     __end_of_gdb_hexstr:	
 10719  1F97                     __ptext18:	
 10720 ;; *************** function _usb_get_in_buffer *****************
 10721 ;; Defined at:
 10722 ;;		line 1491 in file "usb/src/usb.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;  endpoint        1    wreg     unsigned char 
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;  endpoint        1    6[BANK1 ] unsigned char 
 10727 ;; Return value:  Size  Location     Type
 10728 ;;                  2    3[BANK1 ] PTR unsigned char 
 10729 ;; Registers used:
 10730 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10731 ;; Tracked objects:
 10732 ;;		On entry : 1A/1
 10733 ;;		On exit  : 1F/1
 10734 ;;		Unchanged: 0/0
 10735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10736 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10737 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10739 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10740 ;;Total ram usage:        4 bytes
 10741 ;; Hardware stack levels used:    1
 10742 ;; Hardware stack levels required when called:    9
 10743 ;; This function calls:
 10744 ;;		___bmul
 10745 ;; This function is called by:
 10746 ;;		_gdb_send_start
 10747 ;;		_gdb_send_data
 10748 ;;		_gdb_send_end
 10749 ;;		_gdb_send
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           
 10754                           ;psect for function _usb_get_in_buffer
 10755  1F97                     _usb_get_in_buffer:	
 10756                           
 10757                           ;incstack = 0
 10758                           ; Regs used in _usb_get_in_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10759                           ;usb_get_in_buffer@endpoint stored from wreg
 10760  1F97  0021               	movlb	1	; select bank1
 10761  1F98  00A6               	movwf	usb_get_in_buffer@endpoint^(0+128)
 10762                           
 10763                           ;usb.c: 1499: return ep_buf[endpoint].in;
 10764  1F99  3007               	movlw	7
 10765  1F9A  00A0               	movwf	___bmul@multiplicand^(0+128)
 10766  1F9B  0826               	movf	usb_get_in_buffer@endpoint^(0+128),w
 10767  1F9C  3187  2783         	fcall	___bmul
 10768  1F9E  3EBC               	addlw	(_ep_buf+2)& (0+255)
 10769  1F9F  0086               	movwf	6
 10770  1FA0  3003               	movlw	3	; select bank7/8
 10771  1FA1  0087               	movwf	7
 10772  1FA2  3F40               	moviw [0]fsr1
 10773  1FA3  00A3               	movwf	?_usb_get_in_buffer^(0+128)
 10774  1FA4  3F41               	moviw [1]fsr1
 10775  1FA5  00A4               	movwf	(?_usb_get_in_buffer+1)^(0+128)
 10776  1FA6  0008               	return
 10777  1FA7                     __end_of_usb_get_in_buffer:	
 10778  1FA7                     __ptext15:	
 10779 ;; *************** function _usb_send_in_buffer *****************
 10780 ;; Defined at:
 10781 ;;		line 1503 in file "usb/src/usb.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;  endpoint        1    wreg     unsigned char 
 10784 ;;  len             2    4[BANK1 ] unsigned int 
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;  endpoint        1    7[BANK1 ] unsigned char 
 10787 ;;  bd              1    8[BANK1 ] PTR struct buffer_descri
 10788 ;;		 -> bds(24), 
 10789 ;;  pid             1    6[BANK1 ] unsigned char 
 10790 ;; Return value:  Size  Location     Type
 10791 ;;		None               void
 10792 ;; Registers used:
 10793 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10794 ;; Tracked objects:
 10795 ;;		On entry : 1F/1
 10796 ;;		On exit  : 1E/0
 10797 ;;		Unchanged: 0/0
 10798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10799 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10802 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10803 ;;Total ram usage:        5 bytes
 10804 ;; Hardware stack levels used:    1
 10805 ;; Hardware stack levels required when called:   10
 10806 ;; This function calls:
 10807 ;;		___bmul
 10808 ;;		_usb_in_endpoint_halted
 10809 ;; This function is called by:
 10810 ;;		_gdb_send_start
 10811 ;;		_gdb_send_data
 10812 ;;		_gdb_send_end
 10813 ;;		_gdb_send
 10814 ;; This function uses a non-reentrant model
 10815 ;;
 10816                           
 10817                           
 10818                           ;psect for function _usb_send_in_buffer
 10819  1FA7                     _usb_send_in_buffer:	
 10820                           
 10821                           ;incstack = 0
 10822                           ; Regs used in _usb_send_in_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10823                           ;usb_send_in_buffer@endpoint stored from wreg
 10824  1FA7  00A7               	movwf	usb_send_in_buffer@endpoint^(0+128)
 10825                           
 10826                           ;usb.c: 1509: if (g_configuration > 0 && !usb_in_endpoint_halted(endpoint)) {
 10827  1FA8  0020               	movlb	0	; select bank0
 10828  1FA9  086F               	movf	_g_configuration,w
 10829  1FAA  1903               	btfsc	3,2
 10830  1FAB  0008               	return
 10831  1FAC  0021               	movlb	1	; select bank1
 10832  1FAD  0827               	movf	usb_send_in_buffer@endpoint^(0+128),w
 10833  1FAE  2712  319E         	fcall	_usb_in_endpoint_halted
 10834  1FB0  3800               	iorlw	0
 10835  1FB1  1903               	btfsc	3,2
 10836  1FB2  2FB5               	goto	l4237
 10837  1FB3  0020               	movlb	0	; select bank0
 10838  1FB4  0008               	return
 10839  1FB5                     l4237:	
 10840                           
 10841                           ;usb.c: 1510: uint8_t pid;
 10842                           ;usb.c: 1511: struct buffer_descriptor *bd;
 10843                           ;usb.c: 1529: bd = &bds[(endpoint) * 2 + 1];
 10844  1FB5  0827               	movf	usb_send_in_buffer@endpoint^(0+128),w
 10845  1FB6  0709               	addwf	9,w
 10846  1FB7  0709               	addwf	9,w
 10847  1FB8  0709               	addwf	9,w
 10848  1FB9  3E24               	addlw	36
 10849  1FBA  00A8               	movwf	usb_send_in_buffer@bd^(0+128)
 10850                           
 10851                           ;usb.c: 1530: pid = (ep_buf[endpoint].flags & 0x8)? 1 : 0;
 10852  1FBB  3007               	movlw	7
 10853  1FBC  00A0               	movwf	___bmul@multiplicand^(0+128)
 10854  1FBD  0827               	movf	usb_send_in_buffer@endpoint^(0+128),w
 10855  1FBE  3187  2783  319E   	fcall	___bmul
 10856  1FC1  3EC0               	addlw	(_ep_buf+6)& (0+255)
 10857  1FC2  0086               	movwf	6
 10858  1FC3  3003               	movlw	3	; select bank7/8
 10859  1FC4  0087               	movwf	7
 10860  1FC5  3000               	movlw	0
 10861  1FC6  1981               	btfsc	1,3
 10862  1FC7  3001               	movlw	1
 10863  1FC8  00A6               	movwf	usb_send_in_buffer@pid^(0+128)
 10864                           
 10865                           ;usb.c: 1531: bd->STAT.BDnSTAT = 0;
 10866  1FC9  0828               	movf	usb_send_in_buffer@bd^(0+128),w
 10867  1FCA  0086               	movwf	6
 10868  1FCB  0187               	clrf	7
 10869  1FCC  0181               	clrf	1
 10870                           
 10871                           ;usb.c: 1533: if (pid)
 10872  1FCD  0826               	movf	usb_send_in_buffer@pid^(0+128),w
 10873  1FCE  1903               	btfsc	3,2
 10874  1FCF  2FD8               	goto	l4247
 10875  1FD0  0A28               	incf	usb_send_in_buffer@bd^(0+128),w
 10876  1FD1  0086               	movwf	6
 10877  1FD2  0824               	movf	usb_send_in_buffer@len^(0+128),w
 10878  1FD3  0081               	movwf	1
 10879  1FD4  0828               	movf	usb_send_in_buffer@bd^(0+128),w
 10880  1FD5  0086               	movwf	6
 10881  1FD6  30C8               	movlw	200
 10882  1FD7  2FE0               	goto	L17
 10883  1FD8                     l4247:	
 10884  1FD8  0A28               	incf	usb_send_in_buffer@bd^(0+128),w
 10885  1FD9  0086               	movwf	6
 10886  1FDA  0187               	clrf	7
 10887  1FDB  0824               	movf	usb_send_in_buffer@len^(0+128),w
 10888  1FDC  0081               	movwf	1
 10889  1FDD  0828               	movf	usb_send_in_buffer@bd^(0+128),w
 10890  1FDE  0086               	movwf	6
 10891  1FDF  3088               	movlw	136
 10892  1FE0                     L17:	
 10893  1FE0  0081               	movwf	1
 10894                           
 10895                           ;usb.c: 1540: ep_buf[endpoint].flags ^= 0x8;
 10896  1FE1  3007               	movlw	7
 10897  1FE2  00A0               	movwf	___bmul@multiplicand^(0+128)
 10898  1FE3  0827               	movf	usb_send_in_buffer@endpoint^(0+128),w
 10899  1FE4  3187  2783         	fcall	___bmul
 10900  1FE6  3EC0               	addlw	(_ep_buf+6)& (0+255)
 10901  1FE7  0086               	movwf	6
 10902  1FE8  3003               	movlw	3	; select bank7/8
 10903  1FE9  0087               	movwf	7
 10904  1FEA  3008               	movlw	8
 10905  1FEB  0681               	xorwf	1,f
 10906  1FEC  0008               	return
 10907  1FED                     __end_of_usb_send_in_buffer:	
 10908  1FED                     PL355:	
 10909  1FED  00A0               	movwf	??_gdb_hexstr^(0+512)
 10910  1FEE  01A1               	clrf	(??_gdb_hexstr^(0+512)+1)
 10911  1FEF  0023               	movlb	3	; select bank3
 10912  1FF0  086F               	movf	gdb_hexstr@offset^(0+384),w
 10913  1FF1  0024               	movlb	4	; select bank4
 10914  1FF2  00A2               	movwf	(??_gdb_hexstr+2)^(0+512)
 10915  1FF3  01A3               	clrf	((??_gdb_hexstr+2)^(0+512)+1)
 10916  1FF4  0023               	movlb	3	; select bank3
 10917  1FF5  0768               	addwf	gdb_hexstr@buf^(0+384),w
 10918  1FF6  0024               	movlb	4	; select bank4
 10919  1FF7  00A4               	movwf	(??_gdb_hexstr+4)^(0+512)
 10920  1FF8  0823               	movf	(??_gdb_hexstr+3)^(0+512),w
 10921  1FF9  0023               	movlb	3	; select bank3
 10922  1FFA  3D69               	addwfc	(gdb_hexstr@buf+1)^(0+384),w
 10923  1FFB  0024               	movlb	4	; select bank4
 10924  1FFC  00A5               	movwf	(??_gdb_hexstr+5)^(0+512)
 10925  1FFD  0820               	movf	??_gdb_hexstr^(0+512),w
 10926  1FFE  0724               	addwf	(??_gdb_hexstr+4)^(0+512),w
 10927  1FFF  0008               	return
 10928  2000                     __end_ofPL355:	
 10929                           
 10930                           	psect	text13
 10931  1405                     __ptext13:	
 10932 ;; *************** function _gdb_send_data *****************
 10933 ;; Defined at:
 10934 ;;		line 319 in file "gdb_stub.c"
 10935 ;; Parameters:    Size  Location     Type
 10936 ;;  reply           1    wreg     PTR unsigned char 
 10937 ;;		 -> gdb_process_command@msg_out(64), 
 10938 ;;  chksum          1   11[BANK1 ] PTR unsigned char 
 10939 ;;		 -> qchksum(1), 
 10940 ;; Auto vars:     Size  Location     Type
 10941 ;;  reply           1   15[BANK1 ] PTR unsigned char 
 10942 ;;		 -> gdb_process_command@msg_out(64), 
 10943 ;;  qbuf            2   13[BANK1 ] PTR unsigned char 
 10944 ;;		 -> ep_buffers(155), NULL(0), 
 10945 ;;  k               1   16[BANK1 ] unsigned char 
 10946 ;; Return value:  Size  Location     Type
 10947 ;;		None               void
 10948 ;; Registers used:
 10949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10950 ;; Tracked objects:
 10951 ;;		On entry : 1F/1
 10952 ;;		On exit  : 1E/0
 10953 ;;		Unchanged: 0/0
 10954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10955 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10957 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10958 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10959 ;;Total ram usage:        6 bytes
 10960 ;; Hardware stack levels used:    1
 10961 ;; Hardware stack levels required when called:   11
 10962 ;; This function calls:
 10963 ;;		_memcpy
 10964 ;;		_usb_get_configuration
 10965 ;;		_usb_get_in_buffer
 10966 ;;		_usb_in_endpoint_busy
 10967 ;;		_usb_in_endpoint_halted
 10968 ;;		_usb_send_in_buffer
 10969 ;; This function is called by:
 10970 ;;		_gdb_process_command
 10971 ;; This function uses a non-reentrant model
 10972 ;;
 10973                           
 10974                           
 10975                           ;psect for function _gdb_send_data
 10976  1405                     _gdb_send_data:	
 10977                           
 10978                           ;incstack = 0
 10979                           ; Regs used in _gdb_send_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10980                           ;gdb_send_data@reply stored from wreg
 10981  1405  00AF               	movwf	gdb_send_data@reply^(0+128)
 10982                           
 10983                           ;gdb_stub.c: 321: unsigned char *qbuf = usb_get_in_buffer(2);
 10984  1406  3002               	movlw	2
 10985  1407  319F  2797  3194   	fcall	_usb_get_in_buffer
 10986  140A  0824               	movf	(?_usb_get_in_buffer+1)^(0+128),w
 10987  140B  00AE               	movwf	(gdb_send_data@qbuf+1)^(0+128)
 10988  140C  0823               	movf	?_usb_get_in_buffer^(0+128),w
 10989  140D  00AD               	movwf	gdb_send_data@qbuf^(0+128)
 10990                           
 10991                           ;gdb_stub.c: 322: unsigned char k = 0;
 10992  140E  01B0               	clrf	gdb_send_data@k^(0+128)
 10993  140F                     l4717:	
 10994                           ;gdb_stub.c: 324: while (usb_in_endpoint_busy(2) || usb_in_endpoint_halted(2)) {}
 10995                           
 10996  140F  3002               	movlw	2
 10997  1410                     L15:	
 10998  1410  27AE  3194         	fcall	_usb_in_endpoint_busy
 10999  1412  3800               	iorlw	0
 11000  1413  3002               	movlw	2
 11001  1414  1D03               	skipz
 11002  1415  2C10               	goto	L15
 11003  1416  319F  2712  3194   	fcall	_usb_in_endpoint_halted
 11004  1419  3800               	iorlw	0
 11005  141A  1903               	btfsc	3,2
 11006  141B  2C2A               	goto	l4725
 11007  141C  2C0F               	goto	l4717
 11008  141D                     l4721:	
 11009                           
 11010                           ;gdb_stub.c: 327: *chksum+=reply[k++];
 11011  141D  082B               	movf	gdb_send_data@chksum^(0+128),w
 11012  141E  0086               	movwf	6
 11013  141F  3002               	movlw	2	; select bank4/5
 11014  1420  0087               	movwf	7
 11015  1421  0830               	movf	gdb_send_data@k^(0+128),w
 11016  1422  072F               	addwf	gdb_send_data@reply^(0+128),w
 11017  1423  00AC               	movwf	??_gdb_send_data^(0+128)
 11018  1424  0084               	movwf	4
 11019  1425  3002               	movlw	2	; select bank4/5
 11020  1426  0085               	movwf	5
 11021  1427  0800               	movf	0,w
 11022  1428  0781               	addwf	1,f
 11023  1429  0AB0               	incf	gdb_send_data@k^(0+128),f
 11024  142A                     l4725:	
 11025  142A  0830               	movf	gdb_send_data@k^(0+128),w
 11026  142B  072F               	addwf	gdb_send_data@reply^(0+128),w
 11027  142C  00AC               	movwf	??_gdb_send_data^(0+128)
 11028  142D  0086               	movwf	6
 11029  142E  3002               	movlw	2	; select bank4/5
 11030  142F  0087               	movwf	7
 11031  1430  0881               	movf	1,f
 11032  1431  1D03               	skipz
 11033  1432  2C1D               	goto	l4721
 11034                           
 11035                           ;gdb_stub.c: 328: memcpy(qbuf, reply, k);
 11036  1433  082E               	movf	(gdb_send_data@qbuf+1)^(0+128),w
 11037  1434  00A1               	movwf	(memcpy@d1+1)^(0+128)
 11038  1435  082D               	movf	gdb_send_data@qbuf^(0+128),w
 11039  1436  00A0               	movwf	memcpy@d1^(0+128)
 11040  1437  082F               	movf	gdb_send_data@reply^(0+128),w
 11041  1438  00A2               	movwf	memcpy@s1^(0+128)
 11042  1439  3002               	movlw	2
 11043  143A  00A3               	movwf	(memcpy@s1+1)^(0+128)
 11044  143B  0830               	movf	gdb_send_data@k^(0+128),w
 11045  143C  00A4               	movwf	memcpy@n^(0+128)
 11046  143D  01A5               	clrf	(memcpy@n+1)^(0+128)
 11047  143E  2787  3194         	fcall	_memcpy
 11048                           
 11049                           ;gdb_stub.c: 330: if ((usb_get_configuration() != 0) && !usb_in_endpoint_halted(2) && !u
      +                          sb_in_endpoint_busy(2))
 11050  1440  27AB  3194         	fcall	_usb_get_configuration
 11051  1442  3A00               	xorlw	0
 11052  1443  1903               	skipnz
 11053  1444  0008               	return
 11054  1445  3002               	movlw	2
 11055  1446  319F  2712  3194   	fcall	_usb_in_endpoint_halted
 11056  1449  3800               	iorlw	0
 11057  144A  1D03               	skipz
 11058  144B  0008               	return
 11059  144C  3002               	movlw	2
 11060  144D  27AE  3194         	fcall	_usb_in_endpoint_busy
 11061  144F  3800               	iorlw	0
 11062  1450  1D03               	skipz
 11063  1451  0008               	return
 11064                           
 11065                           ;gdb_stub.c: 331: usb_send_in_buffer(2, k);
 11066  1452  0830               	movf	gdb_send_data@k^(0+128),w
 11067  1453  00A4               	movwf	usb_send_in_buffer@len^(0+128)
 11068  1454  3002               	movlw	2
 11069  1455  01A5               	clrf	(usb_send_in_buffer@len+1)^(0+128)
 11070  1456  319F  2FA7         	ljmp	_usb_send_in_buffer
 11071  1458                     __end_of_gdb_send_data:	
 11072  1458                     start_initialization:	
 11073  1458                     __initialization:		;BIGRAM
 11074                           
 11075                           ; Clear objects allocated to BIGRAM
 11076  1458  3090               	movlw	144
 11077  1459  0084               	movwf	4
 11078  145A  3023               	movlw	35
 11079  145B  0085               	movwf	5
 11080  145C  3060               	movlw	96
 11081  145D  00FE               	movwf	126
 11082  145E  01FF               	clrf	127
 11083  145F  3188  2015  3194   	fcall	clear_ram0
 11084                           
 11085                           ; Clear objects allocated to BANK0
 11086  1462  01E9               	clrf	__pbssBANK0& (0+127)
 11087  1463  01EA               	clrf	(__pbssBANK0+1)& (0+127)
 11088  1464  01EB               	clrf	(__pbssBANK0+2)& (0+127)
 11089  1465  01EC               	clrf	(__pbssBANK0+3)& (0+127)
 11090  1466  01ED               	clrf	(__pbssBANK0+4)& (0+127)
 11091  1467  01EE               	clrf	(__pbssBANK0+5)& (0+127)
 11092  1468  01EF               	clrf	(__pbssBANK0+6)& (0+127)
 11093                           
 11094                           ; Clear objects allocated to BANK5
 11095  1469  0025               	movlb	5	; select bank5
 11096  146A  3060               	movlw	low __pbssBANK6
 11097  146B  01ED               	clrf	__pbssBANK5& (0+127)
 11098  146C  01EE               	clrf	(__pbssBANK5+1)& (0+127)
 11099  146D  01EF               	clrf	(__pbssBANK5+2)& (0+127)
 11100                           
 11101                           ; Clear objects allocated to BANK6
 11102  146E  0084               	movwf	4
 11103  146F  3003               	movlw	high __pbssBANK6
 11104  1470  0085               	movwf	5
 11105  1471  300E               	movlw	14
 11106  1472  00FE               	movwf	126
 11107  1473  3000               	movlw	0
 11108  1474  00FF               	movwf	127
 11109  1475  3188  2015  3194   	fcall	clear_ram0
 11110                           
 11111                           ; Clear objects allocated to BANK7
 11112  1478  30A0               	movlw	low __pbssBANK7
 11113  1479  0084               	movwf	4
 11114  147A  3003               	movlw	high __pbssBANK7
 11115  147B  0085               	movwf	5
 11116  147C  301A               	movlw	26
 11117  147D  00FE               	movwf	126
 11118  147E  3000               	movlw	0
 11119  147F  00FF               	movwf	127
 11120  1480  3188  2015  3194   	fcall	clear_ram0
 11121                           
 11122                           ;initializer for _ep0_buf
 11123  1483  3080               	movlw	128
 11124  1484  00E8               	movwf	__pdataBANK5& (0+127)
 11125  1485  3020               	movlw	32
 11126  1486  00E9               	movwf	(__pdataBANK5+1)& (0+127)
 11127  1487  3088               	movlw	136
 11128  1488  00EA               	movwf	(__pdataBANK5+2)& (0+127)
 11129  1489  3020               	movlw	32
 11130  148A  00EB               	movwf	(__pdataBANK5+3)& (0+127)
 11131  148B  3000               	movlw	0
 11132  148C  00EC               	movwf	(__pdataBANK5+4)& (0+127)
 11133                           
 11134                           ; Initialize objects allocated to BANK6
 11135  148D  0026               	movlb	6	; select bank6
 11136                           
 11137                           ;initializer for _usb_application_config_descs
 11138  148E  3078               	movlw	low (_configuration_1| (0+32768))
 11139  148F  00EE               	movwf	__pdataBANK6& (0+127)
 11140  1490  3098               	movlw	high (_configuration_1| (0+32768))
 11141  1491  00EF               	movwf	(__pdataBANK6+1)& (0+127)
 11142                           
 11143                           ; Initialize objects allocated to BANK7
 11144  1492  0027               	movlb	7	; select bank7
 11145                           
 11146                           ;initializer for _ep_buf
 11147  1493  3000               	movlw	0
 11148  1494  00BA               	movwf	__pdataBANK7& (0+127)
 11149  1495  00BB               	movwf	(__pdataBANK7+1)& (0+127)
 11150  1496  00BC               	movwf	(__pdataBANK7+2)& (0+127)
 11151  1497  00BD               	movwf	(__pdataBANK7+3)& (0+127)
 11152  1498  00BE               	movwf	(__pdataBANK7+4)& (0+127)
 11153  1499  00BF               	movwf	(__pdataBANK7+5)& (0+127)
 11154  149A  00C0               	movwf	(__pdataBANK7+6)& (0+127)
 11155  149B  3090               	movlw	144
 11156  149C  00C1               	movwf	(__pdataBANK7+7)& (0+127)
 11157  149D  3020               	movlw	32
 11158  149E  00C2               	movwf	(__pdataBANK7+8)& (0+127)
 11159  149F  3091               	movlw	145
 11160  14A0  00C3               	movwf	(__pdataBANK7+9)& (0+127)
 11161  14A1  3020               	movlw	32
 11162  14A2  00C4               	movwf	(__pdataBANK7+10)& (0+127)
 11163  14A3  3001               	movlw	1
 11164  14A4  00C5               	movwf	(__pdataBANK7+11)& (0+127)
 11165  14A5  300A               	movlw	10
 11166  14A6  00C6               	movwf	(__pdataBANK7+12)& (0+127)
 11167  14A7  3000               	movlw	0
 11168  14A8  00C7               	movwf	(__pdataBANK7+13)& (0+127)
 11169  14A9  309B               	movlw	155
 11170  14AA  00C8               	movwf	(__pdataBANK7+14)& (0+127)
 11171  14AB  3020               	movlw	32
 11172  14AC  00C9               	movwf	(__pdataBANK7+15)& (0+127)
 11173  14AD  30DB               	movlw	219
 11174  14AE  00CA               	movwf	(__pdataBANK7+16)& (0+127)
 11175  14AF  3020               	movlw	32
 11176  14B0  00CB               	movwf	(__pdataBANK7+17)& (0+127)
 11177  14B1  3040               	movlw	64
 11178  14B2  00CC               	movwf	(__pdataBANK7+18)& (0+127)
 11179  14B3  00CD               	movwf	(__pdataBANK7+19)& (0+127)
 11180  14B4  3000               	movlw	0
 11181  14B5  00CE               	movwf	(__pdataBANK7+20)& (0+127)
 11182  14B6                     end_of_initialization:	
 11183                           ;End of C runtime variable initialization code
 11184                           
 11185  14B6                     __end_of__initialization:	
 11186  14B6  107E               	bcf	126,0	;clear compiler interrupt flag
 11187  14B7  0020               	movlb	0
 11188  14B8  2CB9               	ljmp	_main	;jump to C main() function
 11189  14B9                     __pmaintext:	
 11190 ;;
 11191 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
 11192 ;;
 11193 ;; *************** function _main *****************
 11194 ;; Defined at:
 11195 ;;		line 36 in file "main.c"
 11196 ;; Parameters:    Size  Location     Type
 11197 ;;		None
 11198 ;; Auto vars:     Size  Location     Type
 11199 ;;  out_buf         2   64[BANK5 ] PTR const unsigned char 
 11200 ;;		 -> ep_buffers(155), NULL(0), 
 11201 ;;  out_buf_len     2   75[BANK4 ] unsigned int 
 11202 ;;  msg            64    0[BANK6 ] unsigned char [64]
 11203 ;;  msg_checksum    4   71[BANK4 ] unsigned long 
 11204 ;;  c               4   66[BANK4 ] unsigned long 
 11205 ;;  i               1   71[BANK5 ] unsigned char 
 11206 ;;  buf_start       1   70[BANK5 ] unsigned char 
 11207 ;;  buf_end         1   69[BANK5 ] unsigned char 
 11208 ;;  k               1   68[BANK5 ] unsigned char 
 11209 ;;  buf_end_foun    1   67[BANK5 ] unsigned char 
 11210 ;;  e               1   66[BANK5 ] unsigned char 
 11211 ;;  s               1   79[BANK4 ] unsigned char 
 11212 ;;  buf_start_fo    1   78[BANK4 ] unsigned char 
 11213 ;;  msg_len         1   77[BANK4 ] unsigned char 
 11214 ;;  checksum        1   70[BANK4 ] unsigned char 
 11215 ;; Return value:  Size  Location     Type
 11216 ;;		None               void
 11217 ;; Registers used:
 11218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11219 ;; Tracked objects:
 11220 ;;		On entry : 17F/0
 11221 ;;		On exit  : 1F/1
 11222 ;;		Unchanged: 0/0
 11223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11225 ;;      Locals:         0       0       0       0       0      14       8      64       0       0       0       0       
      +0       0
 11226 ;;      Temps:          0       0       0       0       0       8       0       0       0       0       0       0       
      +0       0
 11227 ;;      Totals:         0       0       0       0       0      22       8      64       0       0       0       0       
      +0       0
 11228 ;;Total ram usage:       94 bytes
 11229 ;; Hardware stack levels required when called:   16
 11230 ;; This function calls:
 11231 ;;		_ConfigureOscillator
 11232 ;;		_InitApp
 11233 ;;		_bdm_init
 11234 ;;		_bdm_interrupt
 11235 ;;		_bdm_nop
 11236 ;;		_gdb_ahex2bin
 11237 ;;		_gdb_process_command
 11238 ;;		_gdb_send
 11239 ;;		_led_flash
 11240 ;;		_usb_arm_out_endpoint
 11241 ;;		_usb_get_configuration
 11242 ;;		_usb_get_out_buffer
 11243 ;;		_usb_init
 11244 ;;		_usb_out_endpoint_halted
 11245 ;;		_usb_out_endpoint_has_data
 11246 ;; This function is called by:
 11247 ;;		Startup code after reset
 11248 ;; This function uses a non-reentrant model
 11249 ;;
 11250                           
 11251                           
 11252                           ;psect for function _main
 11253  14B9                     _main:	
 11254                           
 11255                           ;main.c: 38: unsigned char i,k,s,e;
 11256                           ;main.c: 39: unsigned char checksum;
 11257                           ;main.c: 40: unsigned long msg_checksum;
 11258                           ;main.c: 41: unsigned char msg[64]="";
 11259                           
 11260                           ;incstack = 0
 11261                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11262  14B9  3020               	movlw	low main@msg
 11263  14BA  0086               	movwf	6
 11264  14BB  3003               	movlw	high main@msg
 11265  14BC  0087               	movwf	7
 11266  14BD  3040               	movlw	64
 11267  14BE  0024               	movlb	4	; select bank4
 11268  14BF  00DA               	movwf	??_main^(0+512)
 11269  14C0  3000               	movlw	0
 11270  14C1                     u5050:	
 11271  14C1  001E               	movwi fsr1++
 11272  14C2  0BDA               	decfsz	??_main^(0+512),f
 11273  14C3  2CC1               	goto	u5050
 11274                           
 11275                           ;main.c: 48: unsigned long c;
 11276                           ;main.c: 53: ConfigureOscillator();
 11277  14C4  27B7  3194         	fcall	_ConfigureOscillator
 11278                           
 11279                           ;main.c: 55: InitApp();
 11280  14C6  27E6               	fcall	_InitApp
 11281                           
 11282                           ;main.c: 57: usb_init();
 11283  14C7  319B  239E  3194   	fcall	_usb_init
 11284                           
 11285                           ;main.c: 59: led_flash(3);
 11286  14CA  3003               	movlw	3
 11287  14CB  00A0               	movwf	led_flash@c^(0+128)
 11288  14CC  01A1               	clrf	(led_flash@c+1)^(0+128)
 11289  14CD  319A  223A  3194   	fcall	_led_flash
 11290                           
 11291                           ;main.c: 61: bdm_init();
 11292  14D0  3187  27CD  3194   	fcall	_bdm_init
 11293  14D3                     l5527:	
 11294                           
 11295                           ;main.c: 68: {
 11296                           ;main.c: 69: if (check_freeze > 0)
 11297  14D3  0025               	movlb	5	; select bank5
 11298  14D4  086D               	movf	_check_freeze^(0+640),w
 11299  14D5  1903               	btfsc	3,2
 11300  14D6  2D10               	goto	l5545
 11301                           
 11302                           ;main.c: 70: {
 11303                           ;main.c: 71: c=bdm_nop();
 11304  14D7  3188  2070  3194   	fcall	_bdm_nop
 11305  14DA  0847               	movf	(?_bdm_nop+3)^(0+128),w
 11306  14DB  0024               	movlb	4	; select bank4
 11307  14DC  00E5               	movwf	(main@c+3)^(0+512)
 11308  14DD  0021               	movlb	1	; select bank1
 11309  14DE  0846               	movf	(?_bdm_nop+2)^(0+128),w
 11310  14DF  0024               	movlb	4	; select bank4
 11311  14E0  00E4               	movwf	(main@c+2)^(0+512)
 11312  14E1  0021               	movlb	1	; select bank1
 11313  14E2  0845               	movf	(?_bdm_nop+1)^(0+128),w
 11314  14E3  0024               	movlb	4	; select bank4
 11315  14E4  00E3               	movwf	(main@c+1)^(0+512)
 11316  14E5  0021               	movlb	1	; select bank1
 11317  14E6  0844               	movf	?_bdm_nop^(0+128),w
 11318  14E7  0024               	movlb	4	; select bank4
 11319  14E8  00E2               	movwf	main@c^(0+512)
 11320                           
 11321                           ;main.c: 72: _delay((unsigned long)((10)*(48000000L/4000.0)));
 11322  14E9  309C               	movlw	156
 11323  14EA  00DB               	movwf	(??_main^(0+512)+1)
 11324  14EB  30D7               	movlw	215
 11325  14EC  00DA               	movwf	??_main^(0+512)
 11326  14ED                     u5317:	
 11327  14ED  0BDA               	decfsz	??_main^(0+512),f
 11328  14EE  2CED               	goto	u5317
 11329  14EF  0BDB               	decfsz	(??_main^(0+512)+1),f
 11330  14F0  2CED               	goto	u5317
 11331                           
 11332                           ;main.c: 73: if ((c&0x40) == 0x40)
 11333  14F1  0024               	movlb	4	; select bank4
 11334  14F2  1B62               	btfsc	main@c^(0+512),6
 11335  14F3  2CF6               	goto	l5535
 11336  14F4  0025               	movlb	5	; select bank5
 11337  14F5  2D10               	goto	l5545
 11338  14F6                     l5535:	
 11339                           
 11340                           ;main.c: 74: {
 11341                           ;main.c: 77: if (check_freeze == 1)
 11342  14F6  0025               	movlb	5	; select bank5
 11343  14F7  0B6D               	decfsz	_check_freeze^(0+640),w
 11344  14F8  2D01               	goto	l5539
 11345                           
 11346                           ;main.c: 78: gdb_send('+',"T05");
 11347  14F9  30AD               	movlw	low (STR_1| (0+32768))
 11348  14FA  0024               	movlb	4	; select bank4
 11349  14FB  00B5               	movwf	gdb_send@reply^(0+512)
 11350  14FC  3099               	movlw	high (STR_1| (0+32768))
 11351  14FD  00B6               	movwf	(gdb_send@reply^(0+512)+1)
 11352  14FE  302B               	movlw	43
 11353  14FF  26D1  3194         	fcall	_gdb_send
 11354  1501                     l5539:	
 11355                           
 11356                           ;main.c: 79: if (check_freeze == 2)
 11357  1501  0025               	movlb	5	; select bank5
 11358  1502  086D               	movf	_check_freeze^(0+640),w
 11359  1503  3A02               	xorlw	2
 11360  1504  1D03               	skipz
 11361  1505  2D0E               	goto	l5543
 11362                           
 11363                           ;main.c: 80: gdb_send('+',"S05");
 11364  1506  30A9               	movlw	low (STR_2| (0+32768))
 11365  1507  0024               	movlb	4	; select bank4
 11366  1508  00B5               	movwf	gdb_send@reply^(0+512)
 11367  1509  3099               	movlw	high (STR_2| (0+32768))
 11368  150A  00B6               	movwf	(gdb_send@reply^(0+512)+1)
 11369  150B  302B               	movlw	43
 11370  150C  26D1  3194         	fcall	_gdb_send
 11371  150E                     l5543:	
 11372                           
 11373                           ;main.c: 81: check_freeze=0;
 11374  150E  0025               	movlb	5	; select bank5
 11375  150F  01ED               	clrf	_check_freeze^(0+640)
 11376  1510                     l5545:	
 11377                           
 11378                           ;main.c: 82: }
 11379                           ;main.c: 83: }
 11380                           ;main.c: 85: if ((usb_get_configuration() != 0) && !usb_out_endpoint_halted(2) && usb_ou
      +                          t_endpoint_has_data(2))
 11381  1510  27AB  3194         	fcall	_usb_get_configuration
 11382  1512  3A00               	xorlw	0
 11383  1513  1903               	skipnz
 11384  1514  2CD3               	goto	l5527
 11385  1515  3002               	movlw	2
 11386  1516  27F2  3194         	fcall	_usb_out_endpoint_halted
 11387  1518  3800               	iorlw	0
 11388  1519  1D03               	skipz
 11389  151A  2CD3               	goto	l5527
 11390  151B  3002               	movlw	2
 11391  151C  3188  20A6  3194   	fcall	_usb_out_endpoint_has_data
 11392  151F  3A00               	xorlw	0
 11393  1520  1903               	skipnz
 11394  1521  2CD3               	goto	l5527
 11395                           
 11396                           ;main.c: 86: {
 11397                           ;main.c: 87: const unsigned char *out_buf;
 11398                           ;main.c: 88: size_t out_buf_len;
 11399                           ;main.c: 90: out_buf_len = usb_get_out_buffer(2, &out_buf);
 11400  1522  30E0               	movlw	main@out_buf& (0+255)
 11401  1523  00A3               	movwf	usb_get_out_buffer@buf^(0+128)
 11402  1524  3002               	movlw	2
 11403  1525  3188  20AF  3194   	fcall	_usb_get_out_buffer
 11404  1528  0024               	movlb	4	; select bank4
 11405  1529  00EB               	movwf	main@out_buf_len^(0+512)
 11406  152A  01EC               	clrf	(main@out_buf_len+1)^(0+512)
 11407                           
 11408                           ;main.c: 91: if (out_buf_len > 0)
 11409  152B  046C               	iorwf	(main@out_buf_len+1)^(0+512),w
 11410  152C  1903               	skipnz
 11411  152D  2D79               	goto	l5573
 11412                           
 11413                           ;main.c: 92: {
 11414                           ;main.c: 93: for (i=0;i<out_buf_len;i++)
 11415  152E  0025               	movlb	5	; select bank5
 11416  152F  01E7               	clrf	main@i^(0+640)
 11417  1530                     l5571:	
 11418  1530  0867               	movf	main@i^(0+640),w
 11419  1531  0024               	movlb	4	; select bank4
 11420  1532  00DA               	movwf	??_main^(0+512)
 11421  1533  01DB               	clrf	(??_main^(0+512)+1)
 11422  1534  086C               	movf	(main@out_buf_len+1)^(0+512),w
 11423  1535  025B               	subwf	(??_main+1)^(0+512),w
 11424  1536  1D03               	skipz
 11425  1537  2D3A               	goto	u5165
 11426  1538  086B               	movf	main@out_buf_len^(0+512),w
 11427  1539  025A               	subwf	??_main^(0+512),w
 11428  153A                     u5165:	
 11429  153A  1803               	btfsc	3,0
 11430  153B  2D79               	goto	l5573
 11431                           
 11432                           ;main.c: 94: {
 11433                           ;main.c: 95: if (gdb_buf_idx < 96-1)
 11434  153C  305F               	movlw	95
 11435  153D  0025               	movlb	5	; select bank5
 11436  153E  026E               	subwf	_gdb_buf_idx^(0+640),w
 11437  153F  1803               	skipnc
 11438  1540  2D75               	goto	l5567
 11439                           
 11440                           ;main.c: 96: {
 11441                           ;main.c: 97: if (out_buf[i]=='\x03') { bdm_interrupt(); }
 11442  1541  0867               	movf	main@i^(0+640),w
 11443  1542  0024               	movlb	4	; select bank4
 11444  1543  00DA               	movwf	??_main^(0+512)
 11445  1544  01DB               	clrf	(??_main^(0+512)+1)
 11446  1545  0025               	movlb	5	; select bank5
 11447  1546  0760               	addwf	main@out_buf^(0+640),w
 11448  1547  0086               	movwf	6
 11449  1548  0024               	movlb	4	; select bank4
 11450  1549  085B               	movf	(??_main+1)^(0+512),w
 11451  154A  0025               	movlb	5	; select bank5
 11452  154B  3D61               	addwfc	(main@out_buf+1)^(0+640),w
 11453  154C  0087               	movwf	7
 11454  154D  0801               	movf	1,w
 11455  154E  3A03               	xorlw	3
 11456  154F  1D03               	skipz
 11457  1550  2D54               	goto	l5563
 11458  1551  3188  2036  3194   	fcall	_bdm_interrupt
 11459  1554                     l5563:	
 11460                           
 11461                           ;main.c: 98: gdb_buf[gdb_buf_idx++] = out_buf[i];
 11462  1554  0025               	movlb	5	; select bank5
 11463  1555  0867               	movf	main@i^(0+640),w
 11464  1556  0024               	movlb	4	; select bank4
 11465  1557  00DA               	movwf	??_main^(0+512)
 11466  1558  01DB               	clrf	(??_main^(0+512)+1)
 11467  1559  0025               	movlb	5	; select bank5
 11468  155A  0760               	addwf	main@out_buf^(0+640),w
 11469  155B  0086               	movwf	6
 11470  155C  0024               	movlb	4	; select bank4
 11471  155D  085B               	movf	(??_main+1)^(0+512),w
 11472  155E  0025               	movlb	5	; select bank5
 11473  155F  3D61               	addwfc	(main@out_buf+1)^(0+640),w
 11474  1560  0087               	movwf	7
 11475  1561  0801               	movf	1,w
 11476  1562  0024               	movlb	4	; select bank4
 11477  1563  00DC               	movwf	(??_main+2)^(0+512)
 11478  1564  0025               	movlb	5	; select bank5
 11479  1565  086E               	movf	_gdb_buf_idx^(0+640),w
 11480  1566  3E90               	addlw	144
 11481  1567  0024               	movlb	4	; select bank4
 11482  1568  00DD               	movwf	(??_main+3)^(0+512)
 11483  1569  3023               	movlw	35
 11484  156A  01DE               	clrf	((??_main+3)^(0+512)+1)
 11485  156B  3DDE               	addwfc	((??_main+3)^(0+512)+1),f
 11486  156C  085D               	movf	(??_main+3)^(0+512),w
 11487  156D  0086               	movwf	6
 11488  156E  085E               	movf	(??_main+4)^(0+512),w
 11489  156F  0087               	movwf	7
 11490  1570  085C               	movf	(??_main+2)^(0+512),w
 11491  1571  0081               	movwf	1
 11492  1572  0025               	movlb	5	; select bank5
 11493  1573  0AEE               	incf	_gdb_buf_idx^(0+640),f
 11494                           
 11495                           ;main.c: 99: }
 11496  1574  2D77               	goto	l5569
 11497  1575                     l5567:	
 11498                           
 11499                           ;main.c: 100: else
 11500                           ;main.c: 101: {
 11501                           ;main.c: 102: gdb_buf_idx=0;
 11502  1575  01EE               	clrf	_gdb_buf_idx^(0+640)
 11503                           
 11504                           ;main.c: 106: goto no_msg;
 11505  1576  2ECC               	goto	l5671
 11506  1577                     l5569:	
 11507  1577  0AE7               	incf	main@i^(0+640),f
 11508  1578  2D30               	goto	l5571
 11509  1579                     l5573:	
 11510                           
 11511                           ;main.c: 107: }
 11512                           ;main.c: 108: }
 11513                           ;main.c: 109: }
 11514                           ;main.c: 111: gdb_buf[gdb_buf_idx]=0;
 11515  1579  0025               	movlb	5	; select bank5
 11516  157A  086E               	movf	_gdb_buf_idx^(0+640),w
 11517  157B  3E90               	addlw	144
 11518  157C  0086               	movwf	6
 11519  157D  3023               	movlw	35
 11520  157E  0187               	clrf	7
 11521  157F  3D87               	addwfc	7,f
 11522  1580  0181               	clrf	1
 11523                           
 11524                           ;main.c: 122: i=0;
 11525  1581  01E7               	clrf	main@i^(0+640)
 11526                           
 11527                           ;main.c: 123: buf_end_found=0;
 11528  1582  01E3               	clrf	main@buf_end_found^(0+640)
 11529                           
 11530                           ;main.c: 124: buf_start_found=0;
 11531  1583  0024               	movlb	4	; select bank4
 11532  1584  01EE               	clrf	main@buf_start_found^(0+512)
 11533                           
 11534                           ;main.c: 125: buf_start=0;
 11535  1585  0025               	movlb	5	; select bank5
 11536  1586  01E6               	clrf	main@buf_start^(0+640)
 11537                           
 11538                           ;main.c: 126: buf_end=0;
 11539  1587  01E5               	clrf	main@buf_end^(0+640)
 11540  1588                     l5651:	
 11541                           ;main.c: 127: while (i < gdb_buf_idx)
 11542                           
 11543  1588  086E               	movf	_gdb_buf_idx^(0+640),w
 11544  1589  0267               	subwf	main@i^(0+640),w
 11545  158A  1803               	btfsc	3,0
 11546  158B  2E80               	goto	l5653
 11547                           
 11548                           ;main.c: 128: {
 11549                           ;main.c: 133: for (s=i;s<gdb_buf_idx;s++)
 11550  158C  0867               	movf	main@i^(0+640),w
 11551  158D  0024               	movlb	4	; select bank4
 11552  158E  00EF               	movwf	main@s^(0+512)
 11553  158F  2D91               	goto	l5595
 11554  1590                     l5593:	
 11555  1590  0AEF               	incf	main@s^(0+512),f
 11556  1591                     l5595:	
 11557  1591  0025               	movlb	5	; select bank5
 11558  1592  086E               	movf	_gdb_buf_idx^(0+640),w
 11559  1593  0024               	movlb	4	; select bank4
 11560  1594  026F               	subwf	main@s^(0+512),w
 11561  1595  1803               	btfsc	3,0
 11562  1596  2DA7               	goto	l5597
 11563                           
 11564                           ;main.c: 134: {
 11565                           ;main.c: 135: if (gdb_buf[s]=='$') { buf_start=s; buf_start_found=1; break; }
 11566  1597  086F               	movf	main@s^(0+512),w
 11567  1598  3E90               	addlw	144
 11568  1599  0086               	movwf	6
 11569  159A  3023               	movlw	35
 11570  159B  0187               	clrf	7
 11571  159C  3D87               	addwfc	7,f
 11572  159D  0801               	movf	1,w
 11573  159E  3A24               	xorlw	36
 11574  159F  1D03               	skipz
 11575  15A0  2D90               	goto	l5593
 11576  15A1  086F               	movf	main@s^(0+512),w
 11577  15A2  0025               	movlb	5	; select bank5
 11578  15A3  00E6               	movwf	main@buf_start^(0+640)
 11579  15A4  0024               	movlb	4	; select bank4
 11580  15A5  01EE               	clrf	main@buf_start_found^(0+512)
 11581  15A6  0AEE               	incf	main@buf_start_found^(0+512),f
 11582  15A7                     l5597:	
 11583                           
 11584                           ;main.c: 136: }
 11585                           ;main.c: 139: for (e=i+1;e<gdb_buf_idx;e++)
 11586  15A7  0025               	movlb	5	; select bank5
 11587  15A8  0867               	movf	main@i^(0+640),w
 11588  15A9  3E01               	addlw	1
 11589  15AA  00E2               	movwf	main@e^(0+640)
 11590  15AB  2DAD               	goto	l5607
 11591  15AC                     l5605:	
 11592  15AC  0AE2               	incf	main@e^(0+640),f
 11593  15AD                     l5607:	
 11594  15AD  086E               	movf	_gdb_buf_idx^(0+640),w
 11595  15AE  0262               	subwf	main@e^(0+640),w
 11596  15AF  1803               	btfsc	3,0
 11597  15B0  2DBF               	goto	l5609
 11598                           
 11599                           ;main.c: 140: {
 11600                           ;main.c: 141: if (gdb_buf[e]=='#') { buf_end=e; buf_end_found=1; break; }
 11601  15B1  0862               	movf	main@e^(0+640),w
 11602  15B2  3E90               	addlw	144
 11603  15B3  0086               	movwf	6
 11604  15B4  3023               	movlw	35
 11605  15B5  0187               	clrf	7
 11606  15B6  3D87               	addwfc	7,f
 11607  15B7  0801               	movf	1,w
 11608  15B8  3A23               	xorlw	35
 11609  15B9  1D03               	skipz
 11610  15BA  2DAC               	goto	l5605
 11611  15BB  0862               	movf	main@e^(0+640),w
 11612  15BC  00E5               	movwf	main@buf_end^(0+640)
 11613  15BD  01E3               	clrf	main@buf_end_found^(0+640)
 11614  15BE  0AE3               	incf	main@buf_end_found^(0+640),f
 11615  15BF                     l5609:	
 11616                           
 11617                           ;main.c: 142: }
 11618                           ;main.c: 144: if (buf_start_found && buf_end_found && (buf_end-buf_start) > 0)
 11619  15BF  0024               	movlb	4	; select bank4
 11620  15C0  086E               	movf	main@buf_start_found^(0+512),w
 11621  15C1  1903               	btfsc	3,2
 11622  15C2  2E7D               	goto	l5649
 11623  15C3  0025               	movlb	5	; select bank5
 11624  15C4  0863               	movf	main@buf_end_found^(0+640),w
 11625  15C5  1903               	btfsc	3,2
 11626  15C6  2E7D               	goto	l5649
 11627  15C7  0865               	movf	main@buf_end^(0+640),w
 11628  15C8  0024               	movlb	4	; select bank4
 11629  15C9  00DA               	movwf	??_main^(0+512)
 11630  15CA  01DB               	clrf	(??_main^(0+512)+1)
 11631  15CB  085B               	movf	(??_main+1)^(0+512),w
 11632  15CC  00DD               	movwf	((??_main+2)^(0+512)+1)
 11633  15CD  0025               	movlb	5	; select bank5
 11634  15CE  0866               	movf	main@buf_start^(0+640),w
 11635  15CF  0024               	movlb	4	; select bank4
 11636  15D0  025A               	subwf	??_main^(0+512),w
 11637  15D1  00DC               	movwf	(??_main+2)^(0+512)
 11638  15D2  1C03               	skipc
 11639  15D3  03DD               	decf	((??_main+2)^(0+512)+1),f
 11640  15D4  085D               	movf	(??_main+3)^(0+512),w
 11641  15D5  3A80               	xorlw	128
 11642  15D6  00DE               	movwf	(??_main+4)^(0+512)
 11643  15D7  3080               	movlw	128
 11644  15D8  025E               	subwf	(??_main+4)^(0+512),w
 11645  15D9  1D03               	skipz
 11646  15DA  2DDD               	goto	u5235
 11647  15DB  3001               	movlw	1
 11648  15DC  025C               	subwf	(??_main+2)^(0+512),w
 11649  15DD                     u5235:	
 11650  15DD  1803               	btfsc	3,0
 11651  15DE  2DE1               	goto	l5615
 11652  15DF  0025               	movlb	5	; select bank5
 11653  15E0  2E7D               	goto	l5649
 11654  15E1                     l5615:	
 11655                           
 11656                           ;main.c: 145: {
 11657                           ;main.c: 147: checksum=gdb_ahex2bin (gdb_buf[buf_end+1], gdb_buf[buf_end+2]);
 11658  15E1  0025               	movlb	5	; select bank5
 11659  15E2  0865               	movf	main@buf_end^(0+640),w
 11660  15E3  0024               	movlb	4	; select bank4
 11661  15E4  00DA               	movwf	??_main^(0+512)
 11662  15E5  3092               	movlw	146
 11663  15E6  01DB               	clrf	(??_main^(0+512)+1)
 11664  15E7  00DC               	movwf	(??_main+2)^(0+512)
 11665  15E8  3023               	movlw	35
 11666  15E9  00DD               	movwf	((??_main+2)^(0+512)+1)
 11667  15EA  085A               	movf	??_main^(0+512),w
 11668  15EB  075C               	addwf	(??_main+2)^(0+512),w
 11669  15EC  0086               	movwf	6
 11670  15ED  085B               	movf	(??_main+1)^(0+512),w
 11671  15EE  3D5D               	addwfc	(??_main+3)^(0+512),w
 11672  15EF  0087               	movwf	7
 11673  15F0  0801               	movf	1,w
 11674  15F1  0021               	movlb	1	; select bank1
 11675  15F2  00A0               	movwf	gdb_ahex2bin@LSB^(0+128)
 11676  15F3  0025               	movlb	5	; select bank5
 11677  15F4  0865               	movf	main@buf_end^(0+640),w
 11678  15F5  0024               	movlb	4	; select bank4
 11679  15F6  00DE               	movwf	(??_main+4)^(0+512)
 11680  15F7  3091               	movlw	145
 11681  15F8  01DF               	clrf	((??_main+4)^(0+512)+1)
 11682  15F9  00E0               	movwf	(??_main+6)^(0+512)
 11683  15FA  3023               	movlw	35
 11684  15FB  00E1               	movwf	((??_main+6)^(0+512)+1)
 11685  15FC  085E               	movf	(??_main+4)^(0+512),w
 11686  15FD  0760               	addwf	(??_main+6)^(0+512),w
 11687  15FE  0086               	movwf	6
 11688  15FF  085F               	movf	(??_main+5)^(0+512),w
 11689  1600  3D61               	addwfc	(??_main+7)^(0+512),w
 11690  1601  0087               	movwf	7
 11691  1602  0801               	movf	1,w
 11692  1603  3188  2021  3194   	fcall	_gdb_ahex2bin
 11693  1606  0024               	movlb	4	; select bank4
 11694  1607  00E6               	movwf	main@checksum^(0+512)
 11695                           
 11696                           ;main.c: 152: msg_len=buf_end-buf_start-1;
 11697  1608  0025               	movlb	5	; select bank5
 11698  1609  0866               	movf	main@buf_start^(0+640),w
 11699  160A  0265               	subwf	main@buf_end^(0+640),w
 11700  160B  3EFF               	addlw	255
 11701  160C  0024               	movlb	4	; select bank4
 11702  160D  00ED               	movwf	main@msg_len^(0+512)
 11703                           
 11704                           ;main.c: 153: msg_checksum=0;
 11705  160E  01E7               	clrf	main@msg_checksum^(0+512)
 11706  160F  01E8               	clrf	(main@msg_checksum+1)^(0+512)
 11707  1610  01E9               	clrf	(main@msg_checksum+2)^(0+512)
 11708  1611  01EA               	clrf	(main@msg_checksum+3)^(0+512)
 11709                           
 11710                           ;main.c: 154: for (k=0;k<msg_len;k++)
 11711  1612  0025               	movlb	5	; select bank5
 11712  1613  01E4               	clrf	main@k^(0+640)
 11713  1614                     l5629:	
 11714  1614  0024               	movlb	4	; select bank4
 11715  1615  086D               	movf	main@msg_len^(0+512),w
 11716  1616  0025               	movlb	5	; select bank5
 11717  1617  0264               	subwf	main@k^(0+640),w
 11718                           
 11719                           ;main.c: 155: {
 11720                           ;main.c: 156: msg[k]=gdb_buf[buf_start+k+1];
 11721  1618  0864               	movf	main@k^(0+640),w
 11722  1619  1803               	btfsc	3,0
 11723  161A  2E4B               	goto	L1
 11724  161B  3E20               	addlw	main@msg& (0+255)
 11725  161C  0086               	movwf	6
 11726  161D  3003               	movlw	3	; select bank6/7
 11727  161E  0087               	movwf	7
 11728  161F  0864               	movf	main@k^(0+640),w
 11729  1620  0024               	movlb	4	; select bank4
 11730  1621  00DA               	movwf	??_main^(0+512)
 11731  1622  01DB               	clrf	(??_main^(0+512)+1)
 11732  1623  0025               	movlb	5	; select bank5
 11733  1624  0866               	movf	main@buf_start^(0+640),w
 11734  1625  0024               	movlb	4	; select bank4
 11735  1626  00DC               	movwf	(??_main+2)^(0+512)
 11736  1627  3091               	movlw	145
 11737  1628  01DD               	clrf	((??_main+2)^(0+512)+1)
 11738  1629  00DE               	movwf	(??_main+4)^(0+512)
 11739  162A  3023               	movlw	35
 11740  162B  00DF               	movwf	((??_main+4)^(0+512)+1)
 11741  162C  085C               	movf	(??_main+2)^(0+512),w
 11742  162D  075E               	addwf	(??_main+4)^(0+512),w
 11743  162E  00E0               	movwf	(??_main+6)^(0+512)
 11744  162F  085D               	movf	(??_main+3)^(0+512),w
 11745  1630  3D5F               	addwfc	(??_main+5)^(0+512),w
 11746  1631  00E1               	movwf	(??_main+7)^(0+512)
 11747  1632  085A               	movf	??_main^(0+512),w
 11748  1633  0760               	addwf	(??_main+6)^(0+512),w
 11749  1634  0084               	movwf	4
 11750  1635  085B               	movf	(??_main+1)^(0+512),w
 11751  1636  3D61               	addwfc	(??_main+7)^(0+512),w
 11752  1637  0085               	movwf	5
 11753  1638  0800               	movf	0,w
 11754  1639  0081               	movwf	1
 11755                           
 11756                           ;main.c: 157: msg_checksum+=msg[k];
 11757  163A  0025               	movlb	5	; select bank5
 11758  163B  0864               	movf	main@k^(0+640),w
 11759  163C  3E20               	addlw	main@msg& (0+255)
 11760  163D  0086               	movwf	6
 11761  163E  0801               	movf	1,w
 11762  163F  0024               	movlb	4	; select bank4
 11763  1640  07E7               	addwf	main@msg_checksum^(0+512),f
 11764  1641  3001               	movlw	1
 11765  1642  1803               	skipnc
 11766  1643  07E8               	addwf	(main@msg_checksum+1)^(0+512),f
 11767  1644  1803               	skipnc
 11768  1645  07E9               	addwf	(main@msg_checksum+2)^(0+512),f
 11769  1646  1803               	skipnc
 11770  1647  07EA               	addwf	(main@msg_checksum+3)^(0+512),f
 11771  1648  0025               	movlb	5	; select bank5
 11772  1649  0AE4               	incf	main@k^(0+640),f
 11773  164A  2E14               	goto	l5629
 11774  164B                     L1:	
 11775                           ;main.c: 158: }
 11776                           ;main.c: 159: msg[k]=0;
 11777                           
 11778  164B  3E20               	addlw	main@msg& (0+255)
 11779  164C  0086               	movwf	6
 11780  164D  3003               	movlw	3	; select bank6/7
 11781  164E  0087               	movwf	7
 11782  164F  30FF               	movlw	255
 11783  1650  0181               	clrf	1
 11784                           
 11785                           ;main.c: 160: msg_checksum=msg_checksum%0x100;
 11786  1651  0024               	movlb	4	; select bank4
 11787  1652  05E7               	andwf	main@msg_checksum^(0+512),f
 11788  1653  01E8               	clrf	(main@msg_checksum+1)^(0+512)
 11789  1654  01E9               	clrf	(main@msg_checksum+2)^(0+512)
 11790  1655  01EA               	clrf	(main@msg_checksum+3)^(0+512)
 11791                           
 11792                           ;main.c: 161: if (msg_checksum==checksum)
 11793  1656  0866               	movf	main@checksum^(0+512),w
 11794  1657  00DA               	movwf	??_main^(0+512)
 11795  1658  01DB               	clrf	(??_main^(0+512)+1)
 11796  1659  01DC               	clrf	(??_main^(0+512)+2)
 11797  165A  01DD               	clrf	(??_main^(0+512)+3)
 11798  165B  086A               	movf	(main@msg_checksum+3)^(0+512),w
 11799  165C  065D               	xorwf	(??_main+3)^(0+512),w
 11800  165D  1D03               	skipz
 11801  165E  2E69               	goto	u5255
 11802  165F  0869               	movf	(main@msg_checksum+2)^(0+512),w
 11803  1660  065C               	xorwf	(??_main+2)^(0+512),w
 11804  1661  1D03               	skipz
 11805  1662  2E69               	goto	u5255
 11806  1663  0868               	movf	(main@msg_checksum+1)^(0+512),w
 11807  1664  065B               	xorwf	(??_main+1)^(0+512),w
 11808  1665  1D03               	skipz
 11809  1666  2E69               	goto	u5255
 11810  1667  0867               	movf	main@msg_checksum^(0+512),w
 11811  1668  065A               	xorwf	??_main^(0+512),w
 11812  1669                     u5255:	
 11813  1669  1D03               	skipz
 11814  166A  2E76               	goto	l5643
 11815                           
 11816                           ;main.c: 162: {
 11817                           ;main.c: 166: LATBbits.LATB6=1;
 11818  166B  0022               	movlb	2	; select bank2
 11819  166C  170D               	bsf	13,6	;volatile
 11820                           
 11821                           ;main.c: 167: gdb_process_command(&msg, msg_len);
 11822  166D  0024               	movlb	4	; select bank4
 11823  166E  086D               	movf	main@msg_len^(0+512),w
 11824  166F  00C2               	movwf	gdb_process_command@msg_len^(0+512)
 11825  1670  3020               	movlw	main@msg& (0+255)
 11826  1671  3180  200C  3194   	fcall	_gdb_process_command
 11827                           
 11828                           ;main.c: 168: LATBbits.LATB6=0;
 11829  1674  0022               	movlb	2	; select bank2
 11830  1675  130D               	bcf	13,6	;volatile
 11831  1676                     l5643:	
 11832                           
 11833                           ;main.c: 169: }
 11834                           ;main.c: 170: buf_end_found=0;
 11835  1676  0025               	movlb	5	; select bank5
 11836  1677  01E3               	clrf	main@buf_end_found^(0+640)
 11837                           
 11838                           ;main.c: 171: buf_start_found=0;
 11839  1678  0024               	movlb	4	; select bank4
 11840  1679  01EE               	clrf	main@buf_start_found^(0+512)
 11841                           
 11842                           ;main.c: 172: i=buf_end;
 11843  167A  0025               	movlb	5	; select bank5
 11844  167B  0865               	movf	main@buf_end^(0+640),w
 11845  167C  00E7               	movwf	main@i^(0+640)
 11846  167D                     l5649:	
 11847                           
 11848                           ;main.c: 173: }
 11849                           ;main.c: 174: i++;
 11850  167D  0025               	movlb	5	; select bank5
 11851  167E  0AE7               	incf	main@i^(0+640),f
 11852  167F  2D88               	goto	l5651
 11853  1680                     l5653:	
 11854                           
 11855                           ;main.c: 179: }
 11856                           ;main.c: 184: if (!buf_end_found)
 11857  1680  08E3               	movf	main@buf_end_found^(0+640),f
 11858  1681  1D03               	skipz
 11859  1682  2EC4               	goto	l5665
 11860                           
 11861                           ;main.c: 185: {
 11862                           ;main.c: 186: for (i=0;i<gdb_buf_idx-buf_start;i++)
 11863  1683  01E7               	clrf	main@i^(0+640)
 11864  1684                     l5661:	
 11865  1684  086E               	movf	_gdb_buf_idx^(0+640),w
 11866  1685  0024               	movlb	4	; select bank4
 11867  1686  00DA               	movwf	??_main^(0+512)
 11868  1687  01DB               	clrf	(??_main^(0+512)+1)
 11869  1688  085B               	movf	(??_main+1)^(0+512),w
 11870  1689  00DD               	movwf	((??_main+2)^(0+512)+1)
 11871  168A  0025               	movlb	5	; select bank5
 11872  168B  0866               	movf	main@buf_start^(0+640),w
 11873  168C  0024               	movlb	4	; select bank4
 11874  168D  025A               	subwf	??_main^(0+512),w
 11875  168E  00DC               	movwf	(??_main+2)^(0+512)
 11876  168F  1C03               	skipc
 11877  1690  03DD               	decf	((??_main+2)^(0+512)+1),f
 11878  1691  085D               	movf	(??_main+3)^(0+512),w
 11879  1692  3A80               	xorlw	128
 11880  1693  3C80               	sublw	128
 11881  1694  1D03               	skipz
 11882  1695  2E99               	goto	u5285
 11883  1696  085C               	movf	(??_main+2)^(0+512),w
 11884  1697  0025               	movlb	5	; select bank5
 11885  1698  0267               	subwf	main@i^(0+640),w
 11886  1699                     u5285:	
 11887  1699  1803               	btfsc	3,0
 11888  169A  2EC1               	goto	l5663
 11889                           
 11890                           ;main.c: 187: gdb_buf[i]=gdb_buf[i+buf_start];
 11891  169B  0025               	movlb	5	; select bank5
 11892  169C  0866               	movf	main@buf_start^(0+640),w
 11893  169D  0024               	movlb	4	; select bank4
 11894  169E  00DA               	movwf	??_main^(0+512)
 11895  169F  01DB               	clrf	(??_main^(0+512)+1)
 11896  16A0  0025               	movlb	5	; select bank5
 11897  16A1  0867               	movf	main@i^(0+640),w
 11898  16A2  3E90               	addlw	144
 11899  16A3  0024               	movlb	4	; select bank4
 11900  16A4  00DC               	movwf	(??_main+2)^(0+512)
 11901  16A5  3023               	movlw	35
 11902  16A6  01DD               	clrf	((??_main+2)^(0+512)+1)
 11903  16A7  3DDD               	addwfc	((??_main+2)^(0+512)+1),f
 11904  16A8  085A               	movf	??_main^(0+512),w
 11905  16A9  075C               	addwf	(??_main+2)^(0+512),w
 11906  16AA  0086               	movwf	6
 11907  16AB  085B               	movf	(??_main+1)^(0+512),w
 11908  16AC  3D5D               	addwfc	(??_main+3)^(0+512),w
 11909  16AD  0087               	movwf	7
 11910  16AE  0801               	movf	1,w
 11911  16AF  00DE               	movwf	(??_main+4)^(0+512)
 11912  16B0  0025               	movlb	5	; select bank5
 11913  16B1  0867               	movf	main@i^(0+640),w
 11914  16B2  3E90               	addlw	144
 11915  16B3  0024               	movlb	4	; select bank4
 11916  16B4  00DF               	movwf	(??_main+5)^(0+512)
 11917  16B5  3023               	movlw	35
 11918  16B6  01E0               	clrf	((??_main+5)^(0+512)+1)
 11919  16B7  3DE0               	addwfc	((??_main+5)^(0+512)+1),f
 11920  16B8  085F               	movf	(??_main+5)^(0+512),w
 11921  16B9  0086               	movwf	6
 11922  16BA  0860               	movf	(??_main+6)^(0+512),w
 11923  16BB  0087               	movwf	7
 11924  16BC  085E               	movf	(??_main+4)^(0+512),w
 11925  16BD  0081               	movwf	1
 11926  16BE  0025               	movlb	5	; select bank5
 11927  16BF  0AE7               	incf	main@i^(0+640),f
 11928  16C0  2E84               	goto	l5661
 11929  16C1                     l5663:	
 11930                           
 11931                           ;main.c: 189: gdb_buf_idx=gdb_buf_idx-buf_start;
 11932  16C1  0025               	movlb	5	; select bank5
 11933  16C2  0866               	movf	main@buf_start^(0+640),w
 11934  16C3  02EE               	subwf	_gdb_buf_idx^(0+640),f
 11935  16C4                     l5665:	
 11936                           
 11937                           ;main.c: 191: }
 11938                           ;main.c: 194: if (!buf_start_found && !buf_end_found)
 11939  16C4  0024               	movlb	4	; select bank4
 11940  16C5  08EE               	movf	main@buf_start_found^(0+512),f
 11941  16C6  1D03               	skipz
 11942  16C7  2ECC               	goto	l5671
 11943  16C8  0025               	movlb	5	; select bank5
 11944  16C9  08E3               	movf	main@buf_end_found^(0+640),f
 11945  16CA  1903               	btfsc	3,2
 11946  16CB  2D75               	goto	l5567
 11947  16CC                     l5671:	
 11948                           
 11949                           ;main.c: 205: usb_arm_out_endpoint(2);
 11950  16CC  3002               	movlw	2
 11951  16CD  318F  27B6  3194   	fcall	_usb_arm_out_endpoint
 11952  16D0  2CD3               	goto	l5527
 11953  16D1                     __end_of_main:	
 11954  16D1                     __ptext14:	
 11955 ;; *************** function _gdb_send *****************
 11956 ;; Defined at:
 11957 ;;		line 353 in file "gdb_stub.c"
 11958 ;; Parameters:    Size  Location     Type
 11959 ;;  reply_type      1    wreg     unsigned char 
 11960 ;;  reply           2   21[BANK4 ] PTR unsigned char 
 11961 ;;		 -> STR_10(1), STR_9(3), STR_8(3), STR_7(3), 
 11962 ;;		 -> STR_6(3), STR_5(3), STR_4(4), STR_3(73), 
 11963 ;;		 -> gdb_process_command@msg_out(64), STR_2(4), STR_1(4), 
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;  reply_type      1   30[BANK4 ] unsigned char 
 11966 ;;  qbuf            2   31[BANK4 ] PTR unsigned char 
 11967 ;;		 -> ep_buffers(155), NULL(0), 
 11968 ;;  k               1   33[BANK4 ] unsigned char 
 11969 ;;  checksum        1   29[BANK4 ] unsigned char 
 11970 ;; Return value:  Size  Location     Type
 11971 ;;		None               void
 11972 ;; Registers used:
 11973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11974 ;; Tracked objects:
 11975 ;;		On entry : 1F/4
 11976 ;;		On exit  : 1E/0
 11977 ;;		Unchanged: 0/0
 11978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11979 ;;      Params:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0
 11980 ;;      Locals:         0       0       0       0       0       5       0       0       0       0       0       0       
      +0       0
 11981 ;;      Temps:          0       0       0       0       0       6       0       0       0       0       0       0       
      +0       0
 11982 ;;      Totals:         0       0       0       0       0      13       0       0       0       0       0       0       
      +0       0
 11983 ;;Total ram usage:       13 bytes
 11984 ;; Hardware stack levels used:    1
 11985 ;; Hardware stack levels required when called:   11
 11986 ;; This function calls:
 11987 ;;		_gdb_hexstr
 11988 ;;		_memcpy
 11989 ;;		_usb_get_configuration
 11990 ;;		_usb_get_in_buffer
 11991 ;;		_usb_in_endpoint_busy
 11992 ;;		_usb_in_endpoint_halted
 11993 ;;		_usb_send_in_buffer
 11994 ;; This function is called by:
 11995 ;;		_main
 11996 ;;		_gdb_process_command
 11997 ;; This function uses a non-reentrant model
 11998 ;;
 11999                           
 12000                           
 12001                           ;psect for function _gdb_send
 12002  16D1                     _gdb_send:	
 12003                           
 12004                           ;incstack = 0
 12005                           ; Regs used in _gdb_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12006                           ;gdb_send@reply_type stored from wreg
 12007  16D1  00BE               	movwf	gdb_send@reply_type^(0+512)
 12008                           
 12009                           ;gdb_stub.c: 355: unsigned char *qbuf = usb_get_in_buffer(2);
 12010  16D2  3002               	movlw	2
 12011  16D3  319F  2797  3194   	fcall	_usb_get_in_buffer
 12012  16D6  0824               	movf	(?_usb_get_in_buffer+1)^(0+128),w
 12013  16D7  0024               	movlb	4	; select bank4
 12014  16D8  00C0               	movwf	(gdb_send@qbuf+1)^(0+512)
 12015  16D9  0021               	movlb	1	; select bank1
 12016  16DA  0823               	movf	?_usb_get_in_buffer^(0+128),w
 12017  16DB  0024               	movlb	4	; select bank4
 12018  16DC  00BF               	movwf	gdb_send@qbuf^(0+512)
 12019                           
 12020                           ;gdb_stub.c: 356: unsigned char checksum,k;
 12021                           ;gdb_stub.c: 358: checksum=0;
 12022  16DD  01BD               	clrf	gdb_send@checksum^(0+512)
 12023                           
 12024                           ;gdb_stub.c: 359: k=0;
 12025  16DE  01C1               	clrf	gdb_send@k^(0+512)
 12026  16DF                     l994:	
 12027                           ;gdb_stub.c: 360: while (reply[k]!=0)
 12028                           
 12029  16DF  0836               	movf	(gdb_send@reply+1)^(0+512),w
 12030  16E0  27CE  3194         	fcall	PL371	;call to abstracted procedure
 12031  16E2  3800               	iorlw	0
 12032  16E3  1903               	btfsc	3,2
 12033  16E4  2EEB               	goto	l4511
 12034                           
 12035                           ;gdb_stub.c: 361: checksum+=reply[k++];
 12036  16E5  0836               	movf	(gdb_send@reply+1)^(0+512),w
 12037  16E6  27CE  3194         	fcall	PL371	;call to abstracted procedure
 12038  16E8  07BD               	addwf	gdb_send@checksum^(0+512),f
 12039  16E9  0AC1               	incf	gdb_send@k^(0+512),f
 12040  16EA  2EDF               	goto	l994
 12041  16EB                     l4511:	
 12042  16EB  3002               	movlw	2
 12043  16EC                     L16:	
 12044  16EC  27AE  3194         	fcall	_usb_in_endpoint_busy
 12045  16EE  3800               	iorlw	0
 12046  16EF  3002               	movlw	2
 12047  16F0  1D03               	skipz
 12048  16F1  2EEC               	goto	L16
 12049  16F2  319F  2712  3194   	fcall	_usb_in_endpoint_halted
 12050  16F5  3800               	iorlw	0
 12051  16F6  1D03               	skipz
 12052  16F7  2EEB               	goto	l4511
 12053                           
 12054                           ;gdb_stub.c: 367: if (reply_type != 0)
 12055  16F8  0024               	movlb	4	; select bank4
 12056  16F9  083E               	movf	gdb_send@reply_type^(0+512),w
 12057  16FA  1903               	btfsc	3,2
 12058  16FB  2F1E               	goto	l4527
 12059                           
 12060                           ;gdb_stub.c: 368: {
 12061                           ;gdb_stub.c: 369: qbuf[0]=reply_type;
 12062  16FC  083F               	movf	gdb_send@qbuf^(0+512),w
 12063  16FD  0086               	movwf	6
 12064  16FE  0840               	movf	(gdb_send@qbuf+1)^(0+512),w
 12065  16FF  0087               	movwf	7
 12066  1700  083E               	movf	gdb_send@reply_type^(0+512),w
 12067  1701  0081               	movwf	1
 12068                           
 12069                           ;gdb_stub.c: 370: qbuf[1]='$';
 12070  1702  083F               	movf	gdb_send@qbuf^(0+512),w
 12071  1703  3E01               	addlw	1
 12072  1704  00B7               	movwf	??_gdb_send^(0+512)
 12073  1705  3000               	movlw	0
 12074  1706  3D40               	addwfc	(gdb_send@qbuf+1)^(0+512),w
 12075  1707  00B8               	movwf	(??_gdb_send+1)^(0+512)
 12076  1708  0837               	movf	??_gdb_send^(0+512),w
 12077  1709  0086               	movwf	6
 12078  170A  0838               	movf	(??_gdb_send+1)^(0+512),w
 12079                           
 12080                           ;gdb_stub.c: 371: if (k!=0)
 12081  170B  27E1  3194         	fcall	PL415	;call to abstracted procedure
 12082  170D  1903               	btfsc	3,2
 12083  170E  2F1B               	goto	l4525
 12084                           
 12085                           ;gdb_stub.c: 372: memcpy(qbuf+2, reply, k);
 12086  170F  0840               	movf	(gdb_send@qbuf+1)^(0+512),w
 12087  1710  27DA  3194         	fcall	PL407	;call to abstracted procedure
 12088  1712  3002               	movlw	2
 12089  1713  07A0               	addwf	memcpy@d1^(0+128),f
 12090  1714  1803               	skipnc
 12091  1715  0AA1               	incf	(memcpy@d1+1)^(0+128),f
 12092  1716  0024               	movlb	4	; select bank4
 12093  1717  27C1  3194         	fcall	PL369	;call to abstracted procedure
 12094  1719  2787  3194         	fcall	_memcpy
 12095  171B                     l4525:	
 12096                           
 12097                           ;gdb_stub.c: 373: k++;
 12098  171B  0024               	movlb	4	; select bank4
 12099  171C  0AC1               	incf	gdb_send@k^(0+512),f
 12100                           
 12101                           ;gdb_stub.c: 374: }
 12102  171D  2F30               	goto	l4533
 12103  171E                     l4527:	
 12104                           
 12105                           ;gdb_stub.c: 375: else
 12106                           ;gdb_stub.c: 376: {
 12107                           ;gdb_stub.c: 377: qbuf[0]='$';
 12108  171E  083F               	movf	gdb_send@qbuf^(0+512),w
 12109  171F  0086               	movwf	6
 12110  1720  0840               	movf	(gdb_send@qbuf+1)^(0+512),w
 12111                           
 12112                           ;gdb_stub.c: 378: if (k!=0)
 12113  1721  27E1  3194         	fcall	PL415	;call to abstracted procedure
 12114  1723  1903               	btfsc	3,2
 12115  1724  2F30               	goto	l4533
 12116                           
 12117                           ;gdb_stub.c: 379: memcpy(qbuf+1, reply, k);
 12118  1725  0840               	movf	(gdb_send@qbuf+1)^(0+512),w
 12119  1726  27DA  3194         	fcall	PL407	;call to abstracted procedure
 12120  1728  0AA0               	incf	memcpy@d1^(0+128),f
 12121  1729  1903               	skipnz
 12122  172A  0AA1               	incf	(memcpy@d1+1)^(0+128),f
 12123  172B  0024               	movlb	4	; select bank4
 12124  172C  27C1  3194         	fcall	PL369	;call to abstracted procedure
 12125  172E  2787  3194         	fcall	_memcpy
 12126  1730                     l4533:	
 12127                           
 12128                           ;gdb_stub.c: 380: }
 12129                           ;gdb_stub.c: 381: qbuf[k+1]='#';
 12130  1730  0024               	movlb	4	; select bank4
 12131  1731  0841               	movf	gdb_send@k^(0+512),w
 12132  1732  00B7               	movwf	??_gdb_send^(0+512)
 12133  1733  01B8               	clrf	(??_gdb_send^(0+512)+1)
 12134  1734  073F               	addwf	gdb_send@qbuf^(0+512),w
 12135  1735  00B9               	movwf	(??_gdb_send+2)^(0+512)
 12136  1736  0838               	movf	(??_gdb_send+1)^(0+512),w
 12137  1737  3D40               	addwfc	(gdb_send@qbuf+1)^(0+512),w
 12138  1738  00BA               	movwf	(??_gdb_send+3)^(0+512)
 12139  1739  0839               	movf	(??_gdb_send+2)^(0+512),w
 12140  173A  3E01               	addlw	1
 12141  173B  00BB               	movwf	(??_gdb_send+4)^(0+512)
 12142  173C  3000               	movlw	0
 12143  173D  3D3A               	addwfc	(??_gdb_send+3)^(0+512),w
 12144  173E  00BC               	movwf	(??_gdb_send+5)^(0+512)
 12145  173F  083B               	movf	(??_gdb_send+4)^(0+512),w
 12146  1740  0086               	movwf	6
 12147  1741  083C               	movf	(??_gdb_send+5)^(0+512),w
 12148  1742  0087               	movwf	7
 12149  1743  3023               	movlw	35
 12150  1744  0081               	movwf	1
 12151                           
 12152                           ;gdb_stub.c: 382: gdb_hexstr(qbuf, checksum, 1, k+2);
 12153  1745  0840               	movf	(gdb_send@qbuf+1)^(0+512),w
 12154  1746  0023               	movlb	3	; select bank3
 12155  1747  00E9               	movwf	(gdb_hexstr@buf+1)^(0+384)
 12156  1748  0024               	movlb	4	; select bank4
 12157  1749  083F               	movf	gdb_send@qbuf^(0+512),w
 12158  174A  0023               	movlb	3	; select bank3
 12159  174B  00E8               	movwf	gdb_hexstr@buf^(0+384)
 12160  174C  0024               	movlb	4	; select bank4
 12161  174D  083D               	movf	gdb_send@checksum^(0+512),w
 12162  174E  0023               	movlb	3	; select bank3
 12163  174F  00EA               	movwf	gdb_hexstr@val^(0+384)
 12164  1750  01EB               	clrf	(gdb_hexstr@val+1)^(0+384)
 12165  1751  01EC               	clrf	(gdb_hexstr@val+2)^(0+384)
 12166  1752  01ED               	clrf	(gdb_hexstr@val+3)^(0+384)
 12167  1753  01EE               	clrf	gdb_hexstr@len^(0+384)
 12168  1754  0AEE               	incf	gdb_hexstr@len^(0+384),f
 12169  1755  0024               	movlb	4	; select bank4
 12170  1756  0841               	movf	gdb_send@k^(0+512),w
 12171  1757  3E02               	addlw	2
 12172  1758  0023               	movlb	3	; select bank3
 12173  1759  00EF               	movwf	gdb_hexstr@offset^(0+384)
 12174  175A  319F  2720  3194   	fcall	_gdb_hexstr
 12175                           
 12176                           ;gdb_stub.c: 384: k=0;
 12177  175D  01C1               	clrf	gdb_send@k^(0+512)
 12178  175E                     l4539:	
 12179                           ;gdb_stub.c: 386: while (qbuf[k++]!=0) {}
 12180                           
 12181  175E  0841               	movf	gdb_send@k^(0+512),w
 12182  175F  0AC1               	incf	gdb_send@k^(0+512),f
 12183  1760  00B7               	movwf	??_gdb_send^(0+512)
 12184  1761  01B8               	clrf	(??_gdb_send^(0+512)+1)
 12185  1762  073F               	addwf	gdb_send@qbuf^(0+512),w
 12186  1763  0086               	movwf	6
 12187  1764  0838               	movf	(??_gdb_send+1)^(0+512),w
 12188  1765  3D40               	addwfc	(gdb_send@qbuf+1)^(0+512),w
 12189  1766  0087               	movwf	7
 12190  1767  0881               	movf	1,f
 12191  1768  1D03               	skipz
 12192  1769  2F5E               	goto	l4539
 12193                           
 12194                           ;gdb_stub.c: 388: if ((usb_get_configuration() != 0) && !usb_in_endpoint_halted(2) && !u
      +                          sb_in_endpoint_busy(2))
 12195  176A  27AB  3194         	fcall	_usb_get_configuration
 12196  176C  3A00               	xorlw	0
 12197  176D  1903               	skipnz
 12198  176E  0008               	return
 12199  176F  3002               	movlw	2
 12200  1770  319F  2712  3194   	fcall	_usb_in_endpoint_halted
 12201  1773  3800               	iorlw	0
 12202  1774  1D03               	skipz
 12203  1775  0008               	return
 12204  1776  3002               	movlw	2
 12205  1777  27AE  3194         	fcall	_usb_in_endpoint_busy
 12206  1779  3800               	iorlw	0
 12207  177A  1D03               	skipz
 12208  177B  0008               	return
 12209                           
 12210                           ;gdb_stub.c: 389: usb_send_in_buffer(2, k-1);
 12211  177C  0024               	movlb	4	; select bank4
 12212  177D  0841               	movf	gdb_send@k^(0+512),w
 12213  177E  0021               	movlb	1	; select bank1
 12214  177F  00A4               	movwf	usb_send_in_buffer@len^(0+128)
 12215  1780  30FF               	movlw	255
 12216  1781  01A5               	clrf	(usb_send_in_buffer@len+1)^(0+128)
 12217  1782  07A4               	addwf	usb_send_in_buffer@len^(0+128),f
 12218  1783  3DA5               	addwfc	(usb_send_in_buffer@len+1)^(0+128),f
 12219  1784  3002               	movlw	2
 12220  1785  319F  2FA7         	ljmp	_usb_send_in_buffer
 12221  1787                     __end_of_gdb_send:	
 12222  1787                     __ptext20:	
 12223 ;; *************** function _memcpy *****************
 12224 ;; Defined at:
 12225 ;;		line 11 in file "/Applications/microchip/xc8/v1.33old/sources/common/memcpy.c"
 12226 ;; Parameters:    Size  Location     Type
 12227 ;;  d1              2    0[BANK1 ] PTR void 
 12228 ;;		 -> ep_buffers(155), NULL(0), 
 12229 ;;  s1              2    2[BANK1 ] PTR const void 
 12230 ;;		 -> STR_10(1), STR_9(3), STR_8(3), STR_7(3), 
 12231 ;;		 -> STR_6(3), STR_5(3), STR_4(4), STR_3(73), 
 12232 ;;		 -> gdb_process_command@msg_out(64), fake_serial_num(120), cdc_data_string(38), cdc_interface_string(28), 
 12233 ;;		 -> product_string(26), vendor_string(48), str00(4), configuration_1(70), 
 12234 ;;		 -> STR_2(4), STR_1(4), handle_standard_control_request@ret_644(1), handle_standard_control_request@ret_642(2), 
 12235 ;;		 -> handle_standard_control_request@ret(2), this_device_descriptor(18), g_configuration(1), ep_buffers(155), 
 12236 ;;		 -> NULL(0), 
 12237 ;;  n               2    4[BANK1 ] unsigned int 
 12238 ;; Auto vars:     Size  Location     Type
 12239 ;;  s               2    9[BANK1 ] PTR const unsigned char 
 12240 ;;		 -> STR_10(1), STR_9(3), STR_8(3), STR_7(3), 
 12241 ;;		 -> STR_6(3), STR_5(3), STR_4(4), STR_3(73), 
 12242 ;;		 -> gdb_process_command@msg_out(64), fake_serial_num(120), cdc_data_string(38), cdc_interface_string(28), 
 12243 ;;		 -> product_string(26), vendor_string(48), str00(4), configuration_1(70), 
 12244 ;;		 -> STR_2(4), STR_1(4), handle_standard_control_request@ret_644(1), handle_standard_control_request@ret_642(2), 
 12245 ;;		 -> handle_standard_control_request@ret(2), this_device_descriptor(18), g_configuration(1), ep_buffers(155), 
 12246 ;;		 -> NULL(0), 
 12247 ;;  d               2    7[BANK1 ] PTR unsigned char 
 12248 ;;		 -> ep_buffers(155), NULL(0), 
 12249 ;; Return value:  Size  Location     Type
 12250 ;;                  2    0[BANK1 ] PTR void 
 12251 ;; Registers used:
 12252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 12253 ;; Tracked objects:
 12254 ;;		On entry : 1F/1
 12255 ;;		On exit  : 1F/1
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12258 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12259 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12260 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12261 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;Total ram usage:       11 bytes
 12263 ;; Hardware stack levels used:    1
 12264 ;; Hardware stack levels required when called:    8
 12265 ;; This function calls:
 12266 ;;		Nothing
 12267 ;; This function is called by:
 12268 ;;		_gdb_send_data
 12269 ;;		_gdb_send
 12270 ;; This function uses a non-reentrant model
 12271 ;;
 12272                           
 12273                           
 12274                           ;psect for function _memcpy
 12275  1787                     _memcpy:	
 12276                           
 12277                           ;incstack = 0
 12278                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
 12279  1787  0823               	movf	(memcpy@s1+1)^(0+128),w
 12280  1788  00AA               	movwf	(memcpy@s+1)^(0+128)
 12281  1789  0822               	movf	memcpy@s1^(0+128),w
 12282  178A  00A9               	movwf	memcpy@s^(0+128)
 12283  178B  0821               	movf	(memcpy@d1+1)^(0+128),w
 12284  178C  00A8               	movwf	(memcpy@d+1)^(0+128)
 12285  178D  0820               	movf	memcpy@d1^(0+128),w
 12286  178E  00A7               	movwf	memcpy@d^(0+128)
 12287  178F                     l4065:	
 12288  178F  3001               	movlw	1
 12289  1790  02A4               	subwf	memcpy@n^(0+128),f
 12290  1791  3000               	movlw	0
 12291  1792  3BA5               	subwfb	(memcpy@n+1)^(0+128),f
 12292  1793  0A24               	incf	memcpy@n^(0+128),w
 12293  1794  1903               	skipnz
 12294  1795  0A25               	incf	(memcpy@n+1)^(0+128),w
 12295  1796  1903               	btfsc	3,2
 12296  1797  0008               	return
 12297  1798  0829               	movf	memcpy@s^(0+128),w
 12298  1799  0084               	movwf	4
 12299  179A  082A               	movf	(memcpy@s+1)^(0+128),w
 12300  179B  0085               	movwf	5
 12301  179C  0800               	movf	0,w	;code access
 12302  179D  00A6               	movwf	??_memcpy^(0+128)
 12303  179E  0827               	movf	memcpy@d^(0+128),w
 12304  179F  0086               	movwf	6
 12305  17A0  0828               	movf	(memcpy@d+1)^(0+128),w
 12306  17A1  0087               	movwf	7
 12307  17A2  0826               	movf	??_memcpy^(0+128),w
 12308  17A3  0081               	movwf	1
 12309  17A4  0AA9               	incf	memcpy@s^(0+128),f
 12310  17A5  1903               	skipnz
 12311  17A6  0AAA               	incf	(memcpy@s+1)^(0+128),f
 12312  17A7  0AA7               	incf	memcpy@d^(0+128),f
 12313  17A8  1903               	skipnz
 12314  17A9  0AA8               	incf	(memcpy@d+1)^(0+128),f
 12315  17AA  2F8F               	goto	l4065
 12316  17AB                     __end_of_memcpy:	
 12317  17AB                     __ptext19:	
 12318 ;; *************** function _usb_get_configuration *****************
 12319 ;; Defined at:
 12320 ;;		line 1486 in file "usb/src/usb.c"
 12321 ;; Parameters:    Size  Location     Type
 12322 ;;		None
 12323 ;; Auto vars:     Size  Location     Type
 12324 ;;		None
 12325 ;; Return value:  Size  Location     Type
 12326 ;;                  1    wreg      unsigned char 
 12327 ;; Registers used:
 12328 ;;		wreg
 12329 ;; Tracked objects:
 12330 ;;		On entry : 1A/5
 12331 ;;		On exit  : 1F/0
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12338 ;;Total ram usage:        0 bytes
 12339 ;; Hardware stack levels used:    1
 12340 ;; Hardware stack levels required when called:    8
 12341 ;; This function calls:
 12342 ;;		Nothing
 12343 ;; This function is called by:
 12344 ;;		_main
 12345 ;;		_gdb_send_start
 12346 ;;		_gdb_send_data
 12347 ;;		_gdb_send_end
 12348 ;;		_gdb_send
 12349 ;; This function uses a non-reentrant model
 12350 ;;
 12351                           
 12352                           
 12353                           ;psect for function _usb_get_configuration
 12354  17AB                     _usb_get_configuration:	
 12355                           
 12356                           ;usb.c: 1488: return g_configuration;
 12357                           
 12358                           ;incstack = 0
 12359                           ; Regs used in _usb_get_configuration: [wreg]
 12360  17AB  0020               	movlb	0	; select bank0
 12361  17AC  086F               	movf	_g_configuration,w
 12362  17AD  0008               	return
 12363  17AE                     __end_of_usb_get_configuration:	
 12364  17AE                     __ptext17:	
 12365 ;; *************** function _usb_in_endpoint_busy *****************
 12366 ;; Defined at:
 12367 ;;		line 1545 in file "usb/src/usb.c"
 12368 ;; Parameters:    Size  Location     Type
 12369 ;;  endpoint        1    wreg     unsigned char 
 12370 ;; Auto vars:     Size  Location     Type
 12371 ;;  endpoint        1    0[BANK1 ] unsigned char 
 12372 ;; Return value:  Size  Location     Type
 12373 ;;                  1    wreg      unsigned char 
 12374 ;; Registers used:
 12375 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12376 ;; Tracked objects:
 12377 ;;		On entry : 1A/1
 12378 ;;		On exit  : 1F/1
 12379 ;;		Unchanged: 0/0
 12380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12382 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12384 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12385 ;;Total ram usage:        1 bytes
 12386 ;; Hardware stack levels used:    1
 12387 ;; Hardware stack levels required when called:    8
 12388 ;; This function calls:
 12389 ;;		Nothing
 12390 ;; This function is called by:
 12391 ;;		_gdb_send_start
 12392 ;;		_gdb_send_data
 12393 ;;		_gdb_send_end
 12394 ;;		_gdb_send
 12395 ;; This function uses a non-reentrant model
 12396 ;;
 12397                           
 12398                           
 12399                           ;psect for function _usb_in_endpoint_busy
 12400  17AE                     _usb_in_endpoint_busy:	
 12401                           
 12402                           ;incstack = 0
 12403                           ; Regs used in _usb_in_endpoint_busy: [wreg+fsr1l+fsr1h+status,2+status,0]
 12404                           ;usb_in_endpoint_busy@endpoint stored from wreg
 12405  17AE  0021               	movlb	1	; select bank1
 12406  17AF  00A0               	movwf	usb_in_endpoint_busy@endpoint^(0+128)
 12407                           
 12408                           ;usb.c: 1551: return bds[(endpoint) * 2 + 1].STAT.UOWN;
 12409  17B0  319C  24F6         	fcall	PL399	;call to abstracted procedure
 12410  17B2  0187               	clrf	7
 12411  17B3  0D01               	rlf	1,w
 12412  17B4  0D01               	rlf	1,w
 12413  17B5  3901               	andlw	1
 12414  17B6  0008               	return
 12415  17B7                     __end_of_usb_in_endpoint_busy:	
 12416  17B7                     __ptext47:	
 12417 ;; *************** function _ConfigureOscillator *****************
 12418 ;; Defined at:
 12419 ;;		line 24 in file "system.c"
 12420 ;; Parameters:    Size  Location     Type
 12421 ;;		None
 12422 ;; Auto vars:     Size  Location     Type
 12423 ;;		None
 12424 ;; Return value:  Size  Location     Type
 12425 ;;		None               void
 12426 ;; Registers used:
 12427 ;;		None
 12428 ;; Tracked objects:
 12429 ;;		On entry : 17F/4
 12430 ;;		On exit  : 17F/1
 12431 ;;		Unchanged: 160/0
 12432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12437 ;;Total ram usage:        0 bytes
 12438 ;; Hardware stack levels used:    1
 12439 ;; Hardware stack levels required when called:    8
 12440 ;; This function calls:
 12441 ;;		Nothing
 12442 ;; This function is called by:
 12443 ;;		_main
 12444 ;; This function uses a non-reentrant model
 12445 ;;
 12446                           
 12447                           
 12448                           ;psect for function _ConfigureOscillator
 12449  17B7                     _ConfigureOscillator:	
 12450                           
 12451                           ;system.c: 26: SCS0=0;
 12452                           
 12453                           ;incstack = 0
 12454                           ; Regs used in _ConfigureOscillator: []
 12455  17B7  0021               	movlb	1	; select bank1
 12456  17B8  1019               	bcf	25,0	;volatile
 12457                           
 12458                           ;system.c: 27: SCS1=0;
 12459  17B9  1099               	bcf	25,1	;volatile
 12460                           
 12461                           ;system.c: 28: IRCF0 = 1;
 12462  17BA  1519               	bsf	25,2	;volatile
 12463                           
 12464                           ;system.c: 29: IRCF1 = 1;
 12465  17BB  1599               	bsf	25,3	;volatile
 12466                           
 12467                           ;system.c: 30: IRCF2 = 1;
 12468  17BC  1619               	bsf	25,4	;volatile
 12469                           
 12470                           ;system.c: 31: IRCF3 = 1;
 12471  17BD  1699               	bsf	25,5	;volatile
 12472                           
 12473                           ;system.c: 32: SPLLMULT =0;
 12474  17BE  1319               	bcf	25,6	;volatile
 12475                           
 12476                           ;system.c: 33: SPLLEN=1;
 12477  17BF  1799               	bsf	25,7	;volatile
 12478  17C0  0008               	return
 12479  17C1                     __end_of_ConfigureOscillator:	
 12480  17C1                     PL369:	
 12481  17C1  0836               	movf	(gdb_send@reply+1)^(0+512),w
 12482  17C2  0021               	movlb	1	; select bank1
 12483  17C3  00A3               	movwf	(memcpy@s1+1)^(0+128)
 12484  17C4  0024               	movlb	4	; select bank4
 12485  17C5  0835               	movf	gdb_send@reply^(0+512),w
 12486  17C6  0021               	movlb	1	; select bank1
 12487  17C7  00A2               	movwf	memcpy@s1^(0+128)
 12488  17C8  0024               	movlb	4	; select bank4
 12489  17C9  0841               	movf	gdb_send@k^(0+512),w
 12490  17CA  0021               	movlb	1	; select bank1
 12491  17CB  00A4               	movwf	memcpy@n^(0+128)
 12492  17CC  01A5               	clrf	(memcpy@n+1)^(0+128)
 12493  17CD  0008               	return
 12494  17CE                     __end_ofPL369:	
 12495  17CE                     PL371:	
 12496  17CE  00B8               	movwf	(??_gdb_send^(0+512)+1)
 12497  17CF  0835               	movf	gdb_send@reply^(0+512),w
 12498  17D0  00B7               	movwf	??_gdb_send^(0+512)
 12499  17D1  0841               	movf	gdb_send@k^(0+512),w
 12500  17D2  0737               	addwf	??_gdb_send^(0+512),w
 12501  17D3  0084               	movwf	4
 12502  17D4  0838               	movf	(??_gdb_send^(0+512)+1),w
 12503  17D5  1803               	skipnc
 12504  17D6  0A38               	incf	(??_gdb_send^(0+512)+1),w
 12505  17D7  0085               	movwf	5
 12506  17D8  0800               	movf	0,w	;code access
 12507  17D9  0008               	return
 12508  17DA                     __end_ofPL371:	
 12509  17DA                     PL407:	
 12510  17DA  0021               	movlb	1	; select bank1
 12511  17DB  00A1               	movwf	(memcpy@d1+1)^(0+128)
 12512  17DC  0024               	movlb	4	; select bank4
 12513  17DD  083F               	movf	gdb_send@qbuf^(0+512),w
 12514  17DE  0021               	movlb	1	; select bank1
 12515  17DF  00A0               	movwf	memcpy@d1^(0+128)
 12516  17E0  0008               	return
 12517  17E1                     __end_ofPL407:	
 12518  17E1                     PL415:	
 12519  17E1  0087               	movwf	7
 12520  17E2  3024               	movlw	36
 12521  17E3  0081               	movwf	1
 12522  17E4  0841               	movf	gdb_send@k^(0+512),w
 12523  17E5  0008               	return
 12524  17E6                     __end_ofPL415:	
 12525  17E6                     __ptext46:	
 12526 ;; *************** function _InitApp *****************
 12527 ;; Defined at:
 12528 ;;		line 29 in file "user.c"
 12529 ;; Parameters:    Size  Location     Type
 12530 ;;		None
 12531 ;; Auto vars:     Size  Location     Type
 12532 ;;		None
 12533 ;; Return value:  Size  Location     Type
 12534 ;;		None               void
 12535 ;; Registers used:
 12536 ;;		wreg, status,2, status,0
 12537 ;; Tracked objects:
 12538 ;;		On entry : 17F/1
 12539 ;;		On exit  : 17F/7
 12540 ;;		Unchanged: 160/0
 12541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12546 ;;Total ram usage:        0 bytes
 12547 ;; Hardware stack levels used:    1
 12548 ;; Hardware stack levels required when called:    8
 12549 ;; This function calls:
 12550 ;;		Nothing
 12551 ;; This function is called by:
 12552 ;;		_main
 12553 ;; This function uses a non-reentrant model
 12554 ;;
 12555                           
 12556                           
 12557                           ;psect for function _InitApp
 12558  17E6                     _InitApp:	
 12559                           
 12560                           ;user.c: 31: TRISA=1;
 12561                           
 12562                           ;incstack = 0
 12563                           ; Regs used in _InitApp: [wreg+status,2+status,0]
 12564  17E6  3001               	movlw	1
 12565  17E7  008C               	movwf	12	;volatile
 12566                           
 12567                           ;user.c: 32: TRISBbits.TRISB6=0;
 12568  17E8  130D               	bcf	13,6	;volatile
 12569                           
 12570                           ;user.c: 33: TRISC=0;
 12571  17E9  018E               	clrf	14	;volatile
 12572                           
 12573                           ;user.c: 35: OSCCONbits.IRCF = 0b1111;
 12574  17EA  303C               	movlw	60
 12575  17EB  0499               	iorwf	25,f	;volatile
 12576                           
 12577                           ;user.c: 38: ACTCONbits.ACTSRC = 1;
 12578  17EC  0027               	movlb	7	; select bank7
 12579  17ED  161B               	bsf	27,4	;volatile
 12580                           
 12581                           ;user.c: 39: ACTCONbits.ACTEN = 1;
 12582  17EE  179B               	bsf	27,7	;volatile
 12583                           
 12584                           ;user.c: 42: INTCONbits.PEIE = 1;
 12585  17EF  170B               	bsf	11,6	;volatile
 12586                           
 12587                           ;user.c: 43: INTCONbits.GIE = 1;
 12588  17F0  178B               	bsf	11,7	;volatile
 12589  17F1  0008               	return
 12590  17F2                     __end_of_InitApp:	
 12591  17F2                     __ptext2:	
 12592 ;; *************** function _usb_out_endpoint_halted *****************
 12593 ;; Defined at:
 12594 ;;		line 1644 in file "usb/src/usb.c"
 12595 ;; Parameters:    Size  Location     Type
 12596 ;;  endpoint        1    wreg     unsigned char 
 12597 ;; Auto vars:     Size  Location     Type
 12598 ;;  endpoint        1    3[BANK1 ] unsigned char 
 12599 ;; Return value:  Size  Location     Type
 12600 ;;                  1    wreg      unsigned char 
 12601 ;; Registers used:
 12602 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12603 ;; Tracked objects:
 12604 ;;		On entry : 1F/0
 12605 ;;		On exit  : 1F/1
 12606 ;;		Unchanged: 0/0
 12607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12609 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12611 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12612 ;;Total ram usage:        1 bytes
 12613 ;; Hardware stack levels used:    1
 12614 ;; Hardware stack levels required when called:    9
 12615 ;; This function calls:
 12616 ;;		___bmul
 12617 ;; This function is called by:
 12618 ;;		_main
 12619 ;; This function uses a non-reentrant model
 12620 ;;
 12621                           
 12622                           
 12623                           ;psect for function _usb_out_endpoint_halted
 12624  17F2                     _usb_out_endpoint_halted:	
 12625                           
 12626                           ;incstack = 0
 12627                           ; Regs used in _usb_out_endpoint_halted: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 12628                           ;usb_out_endpoint_halted@endpoint stored from wreg
 12629  17F2  0021               	movlb	1	; select bank1
 12630  17F3  00A3               	movwf	usb_out_endpoint_halted@endpoint^(0+128)
 12631                           
 12632                           ;usb.c: 1646: return ep_buf[endpoint].flags & 0x1;
 12633  17F4  3007               	movlw	7
 12634  17F5  00A0               	movwf	___bmul@multiplicand^(0+128)
 12635  17F6  0823               	movf	usb_out_endpoint_halted@endpoint^(0+128),w
 12636  17F7  3187  2783         	fcall	___bmul
 12637  17F9  3EC0               	addlw	(_ep_buf+6)& (0+255)
 12638  17FA  0086               	movwf	6
 12639  17FB  3003               	movlw	3	; select bank7/8
 12640  17FC  0087               	movwf	7
 12641  17FD  0801               	movf	1,w
 12642  17FE  3901               	andlw	1
 12643  17FF  0008               	return
 12644  1800                     __end_of_usb_out_endpoint_halted:	
 12645                           
 12646                           	psect	text26
 12647  1D09                     __ptext26:	
 12648 ;; *************** function _bdm_set_data *****************
 12649 ;; Defined at:
 12650 ;;		line 381 in file "mpc_bdm.c"
 12651 ;; Parameters:    Size  Location     Type
 12652 ;;  addr            4   10[BANK3 ] unsigned long 
 12653 ;;  val             4   14[BANK3 ] unsigned long 
 12654 ;;  size            1   18[BANK3 ] unsigned char 
 12655 ;; Auto vars:     Size  Location     Type
 12656 ;;  in              5   24[BANK3 ] struct bdm_in_s
 12657 ;;  out             5   19[BANK3 ] struct bdm_out_s
 12658 ;; Return value:  Size  Location     Type
 12659 ;;		None               void
 12660 ;; Registers used:
 12661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12662 ;; Tracked objects:
 12663 ;;		On entry : 1F/3
 12664 ;;		On exit  : 1F/1
 12665 ;;		Unchanged: 0/0
 12666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12667 ;;      Params:         0       0       0       0       9       0       0       0       0       0       0       0       
      +0       0
 12668 ;;      Locals:         0       0       0       0      10       0       0       0       0       0       0       0       
      +0       0
 12669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12670 ;;      Totals:         0       0       0       0      19       0       0       0       0       0       0       0       
      +0       0
 12671 ;;Total ram usage:       19 bytes
 12672 ;; Hardware stack levels used:    1
 12673 ;; Hardware stack levels required when called:   12
 12674 ;; This function calls:
 12675 ;;		_bdm_clk_serial
 12676 ;;		_bdm_restore_regs
 12677 ;;		_bdm_save_regs
 12678 ;;		_bdm_set_gpr
 12679 ;; This function is called by:
 12680 ;;		_gdb_process_command
 12681 ;; This function uses a non-reentrant model
 12682 ;;
 12683                           
 12684                           
 12685                           ;psect for function _bdm_set_data
 12686  1D09                     _bdm_set_data:	
 12687                           
 12688                           ;mpc_bdm.c: 383: bdm_in_t in;
 12689                           ;mpc_bdm.c: 384: bdm_out_t out;
 12690                           ;mpc_bdm.c: 386: bdm_save_regs();
 12691                           
 12692                           ;incstack = 0
 12693                           ; Regs used in _bdm_set_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12694  1D09  260F  319D         	fcall	_bdm_save_regs
 12695                           
 12696                           ;mpc_bdm.c: 387: bdm_set_gpr( 1, addr );
 12697  1D0B  2671  319D         	fcall	PL405	;call to abstracted procedure
 12698  1D0D  0858               	movf	(bdm_set_data@addr+3)^(0+384),w
 12699  1D0E  0021               	movlb	1	; select bank1
 12700  1D0F  00CB               	movwf	(bdm_set_gpr@value+3)^(0+128)
 12701  1D10  0023               	movlb	3	; select bank3
 12702  1D11  0857               	movf	(bdm_set_data@addr+2)^(0+384),w
 12703  1D12  0021               	movlb	1	; select bank1
 12704  1D13  00CA               	movwf	(bdm_set_gpr@value+2)^(0+128)
 12705  1D14  0023               	movlb	3	; select bank3
 12706  1D15  0856               	movf	(bdm_set_data@addr+1)^(0+384),w
 12707  1D16  0021               	movlb	1	; select bank1
 12708  1D17  00C9               	movwf	(bdm_set_gpr@value+1)^(0+128)
 12709  1D18  0023               	movlb	3	; select bank3
 12710  1D19  0855               	movf	bdm_set_data@addr^(0+384),w
 12711  1D1A  0021               	movlb	1	; select bank1
 12712  1D1B  00C8               	movwf	bdm_set_gpr@value^(0+128)
 12713  1D1C  25C4  319D         	fcall	_bdm_set_gpr
 12714                           
 12715                           ;mpc_bdm.c: 388: bdm_set_gpr( 0, val );
 12716  1D1E  01C4               	clrf	bdm_set_gpr@reg_nr^(0+128)
 12717  1D1F  01C5               	clrf	(bdm_set_gpr@reg_nr+1)^(0+128)
 12718  1D20  01C6               	clrf	(bdm_set_gpr@reg_nr+2)^(0+128)
 12719  1D21  01C7               	clrf	(bdm_set_gpr@reg_nr+3)^(0+128)
 12720  1D22  0023               	movlb	3	; select bank3
 12721  1D23  085C               	movf	(bdm_set_data@val+3)^(0+384),w
 12722  1D24  0021               	movlb	1	; select bank1
 12723  1D25  00CB               	movwf	(bdm_set_gpr@value+3)^(0+128)
 12724  1D26  0023               	movlb	3	; select bank3
 12725  1D27  085B               	movf	(bdm_set_data@val+2)^(0+384),w
 12726  1D28  0021               	movlb	1	; select bank1
 12727  1D29  00CA               	movwf	(bdm_set_gpr@value+2)^(0+128)
 12728  1D2A  0023               	movlb	3	; select bank3
 12729  1D2B  085A               	movf	(bdm_set_data@val+1)^(0+384),w
 12730  1D2C  0021               	movlb	1	; select bank1
 12731  1D2D  00C9               	movwf	(bdm_set_gpr@value+1)^(0+128)
 12732  1D2E  0023               	movlb	3	; select bank3
 12733  1D2F  0859               	movf	bdm_set_data@val^(0+384),w
 12734  1D30  0021               	movlb	1	; select bank1
 12735  1D31  00C8               	movwf	bdm_set_gpr@value^(0+128)
 12736  1D32  25C4  319D         	fcall	_bdm_set_gpr
 12737                           
 12738                           ;mpc_bdm.c: 390: in.prefix = 0x0;
 12739  1D34  30FC               	movlw	-4
 12740  1D35  0023               	movlb	3	; select bank3
 12741  1D36  05E3               	andwf	bdm_set_data@in^(0+384),f
 12742                           
 12743                           ;mpc_bdm.c: 391: switch(size)
 12744  1D37  2D43               	goto	l4605
 12745  1D38                     l4597:	
 12746  1D38  3090               	movlw	144
 12747  1D39  2D3D               	goto	L24
 12748  1D3A                     l4599:	
 12749  1D3A  30B0               	movlw	176
 12750  1D3B  2D3D               	goto	L24
 12751  1D3C                     l4601:	
 12752  1D3C  3098               	movlw	152
 12753  1D3D                     L24:	
 12754  1D3D  00E7               	movwf	((bdm_set_data@in+3)^(0+384)+1)
 12755  1D3E  3001               	movlw	1
 12756  1D3F  00E6               	movwf	((bdm_set_data@in+2)^(0+384)+1)
 12757  1D40  01E5               	clrf	((bdm_set_data@in+1)^(0+384)+1)
 12758  1D41  01E4               	clrf	(bdm_set_data@in^(0+384)+1)
 12759  1D42  2D4E               	goto	l4607
 12760  1D43                     l4605:	
 12761  1D43  085D               	movf	bdm_set_data@size^(0+384),w
 12762                           
 12763                           ; Switch size 1, requested type "space"
 12764                           ; Number of cases is 3, Range of values is 1 to 4
 12765                           ; switch strategies available:
 12766                           ; Name         Instructions Cycles
 12767                           ; simple_byte           10     6 (average)
 12768                           ; direct_byte           17     9 (fixed)
 12769                           ; jumptable            263     9 (fixed)
 12770                           ;	Chosen strategy is simple_byte
 12771  1D44  3A01               	xorlw	1	; case 1
 12772  1D45  1903               	skipnz
 12773  1D46  2D3C               	goto	l4601
 12774  1D47  3A03               	xorlw	3	; case 2
 12775  1D48  1903               	skipnz
 12776  1D49  2D3A               	goto	l4599
 12777  1D4A  3A06               	xorlw	6	; case 4
 12778  1D4B  1903               	skipnz
 12779  1D4C  2D38               	goto	l4597
 12780  1D4D  2D4E               	goto	l4607
 12781  1D4E                     l4607:	
 12782                           
 12783                           ;mpc_bdm.c: 398: if( bdm_clk_serial( &in, &out ) < 0 ){
 12784  1D4E  30E3               	movlw	low bdm_set_data@in
 12785  1D4F  0021               	movlb	1	; select bank1
 12786  1D50  00A8               	movwf	bdm_clk_serial@in^(0+128)
 12787  1D51  3001               	movlw	high bdm_set_data@in
 12788  1D52  00A9               	movwf	(bdm_clk_serial@in+1)^(0+128)
 12789  1D53  30DE               	movlw	low bdm_set_data@out
 12790  1D54  00AA               	movwf	bdm_clk_serial@out^(0+128)
 12791  1D55  3001               	movlw	high bdm_set_data@out
 12792  1D56  00AB               	movwf	(bdm_clk_serial@out+1)^(0+128)
 12793  1D57  3191  21D6  319D   	fcall	_bdm_clk_serial
 12794  1D5A  1BAB               	btfsc	(?_bdm_clk_serial+3)^(0+128),7
 12795  1D5B  0008               	return
 12796                           
 12797                           ;mpc_bdm.c: 400: }
 12798                           ;mpc_bdm.c: 402: bdm_restore_regs();
 12799  1D5C  2E3D               	ljmp	l3785
 12800  1D5D                     __end_of_bdm_set_data:	
 12801  1D5D                     __ptext29:	
 12802 ;; *************** function _bdm_get_data *****************
 12803 ;; Defined at:
 12804 ;;		line 355 in file "mpc_bdm.c"
 12805 ;; Parameters:    Size  Location     Type
 12806 ;;  addr            4   10[BANK3 ] unsigned long 
 12807 ;;  size            1   14[BANK3 ] unsigned char 
 12808 ;; Auto vars:     Size  Location     Type
 12809 ;;  in              5   24[BANK3 ] struct bdm_in_s
 12810 ;;  out             5   19[BANK3 ] struct bdm_out_s
 12811 ;;  val             4   15[BANK3 ] unsigned long 
 12812 ;; Return value:  Size  Location     Type
 12813 ;;                  4   10[BANK3 ] unsigned long 
 12814 ;; Registers used:
 12815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12816 ;; Tracked objects:
 12817 ;;		On entry : 1F/3
 12818 ;;		On exit  : 1F/3
 12819 ;;		Unchanged: 0/0
 12820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12821 ;;      Params:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
 12822 ;;      Locals:         0       0       0       0      14       0       0       0       0       0       0       0       
      +0       0
 12823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12824 ;;      Totals:         0       0       0       0      19       0       0       0       0       0       0       0       
      +0       0
 12825 ;;Total ram usage:       19 bytes
 12826 ;; Hardware stack levels used:    1
 12827 ;; Hardware stack levels required when called:   12
 12828 ;; This function calls:
 12829 ;;		_bdm_clk_serial
 12830 ;;		_bdm_get_gpr
 12831 ;;		_bdm_restore_regs
 12832 ;;		_bdm_save_regs
 12833 ;;		_bdm_set_gpr
 12834 ;; This function is called by:
 12835 ;;		_gdb_process_command
 12836 ;; This function uses a non-reentrant model
 12837 ;;
 12838                           
 12839                           
 12840                           ;psect for function _bdm_get_data
 12841  1D5D                     _bdm_get_data:	
 12842                           
 12843                           ;mpc_bdm.c: 357: unsigned long val;
 12844                           ;mpc_bdm.c: 358: bdm_in_t in;
 12845                           ;mpc_bdm.c: 359: bdm_out_t out;
 12846                           ;mpc_bdm.c: 361: bdm_save_regs();
 12847                           
 12848                           ;incstack = 0
 12849                           ; Regs used in _bdm_get_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12850  1D5D  260F  319D         	fcall	_bdm_save_regs
 12851                           
 12852                           ;mpc_bdm.c: 362: bdm_set_gpr( 1, addr );
 12853  1D5F  2671  319D         	fcall	PL405	;call to abstracted procedure
 12854  1D61  0858               	movf	(bdm_get_data@addr+3)^(0+384),w
 12855  1D62  0021               	movlb	1	; select bank1
 12856  1D63  00CB               	movwf	(bdm_set_gpr@value+3)^(0+128)
 12857  1D64  0023               	movlb	3	; select bank3
 12858  1D65  0857               	movf	(bdm_get_data@addr+2)^(0+384),w
 12859  1D66  0021               	movlb	1	; select bank1
 12860  1D67  00CA               	movwf	(bdm_set_gpr@value+2)^(0+128)
 12861  1D68  0023               	movlb	3	; select bank3
 12862  1D69  0856               	movf	(bdm_get_data@addr+1)^(0+384),w
 12863  1D6A  0021               	movlb	1	; select bank1
 12864  1D6B  00C9               	movwf	(bdm_set_gpr@value+1)^(0+128)
 12865  1D6C  0023               	movlb	3	; select bank3
 12866  1D6D  0855               	movf	bdm_get_data@addr^(0+384),w
 12867  1D6E  0021               	movlb	1	; select bank1
 12868  1D6F  00C8               	movwf	bdm_set_gpr@value^(0+128)
 12869  1D70  25C4  319D         	fcall	_bdm_set_gpr
 12870                           
 12871                           ;mpc_bdm.c: 364: in.prefix = 0x0;
 12872  1D72  30FC               	movlw	-4
 12873  1D73  0023               	movlb	3	; select bank3
 12874  1D74  05E3               	andwf	bdm_get_data@in^(0+384),f
 12875                           
 12876                           ;mpc_bdm.c: 365: switch(size)
 12877  1D75  2D81               	goto	l4579
 12878  1D76                     l4571:	
 12879  1D76  3080               	movlw	128
 12880  1D77  2D7B               	goto	L26
 12881  1D78                     l4573:	
 12882  1D78  30A0               	movlw	160
 12883  1D79  2D7B               	goto	L26
 12884  1D7A                     l4575:	
 12885  1D7A  3088               	movlw	136
 12886  1D7B                     L26:	
 12887  1D7B  00E7               	movwf	((bdm_get_data@in+3)^(0+384)+1)
 12888  1D7C  3001               	movlw	1
 12889  1D7D  00E6               	movwf	((bdm_get_data@in+2)^(0+384)+1)
 12890  1D7E  01E5               	clrf	((bdm_get_data@in+1)^(0+384)+1)
 12891  1D7F  01E4               	clrf	(bdm_get_data@in^(0+384)+1)
 12892  1D80  2D8C               	goto	l4581
 12893  1D81                     l4579:	
 12894  1D81  0859               	movf	bdm_get_data@size^(0+384),w
 12895                           
 12896                           ; Switch size 1, requested type "space"
 12897                           ; Number of cases is 3, Range of values is 1 to 4
 12898                           ; switch strategies available:
 12899                           ; Name         Instructions Cycles
 12900                           ; simple_byte           10     6 (average)
 12901                           ; direct_byte           17     9 (fixed)
 12902                           ; jumptable            263     9 (fixed)
 12903                           ;	Chosen strategy is simple_byte
 12904  1D82  3A01               	xorlw	1	; case 1
 12905  1D83  1903               	skipnz
 12906  1D84  2D7A               	goto	l4575
 12907  1D85  3A03               	xorlw	3	; case 2
 12908  1D86  1903               	skipnz
 12909  1D87  2D78               	goto	l4573
 12910  1D88  3A06               	xorlw	6	; case 4
 12911  1D89  1903               	skipnz
 12912  1D8A  2D76               	goto	l4571
 12913  1D8B  2D8C               	goto	l4581
 12914  1D8C                     l4581:	
 12915                           
 12916                           ;mpc_bdm.c: 372: if( bdm_clk_serial( &in, &out ) < 0 ){
 12917  1D8C  30E3               	movlw	low bdm_get_data@in
 12918  1D8D  0021               	movlb	1	; select bank1
 12919  1D8E  00A8               	movwf	bdm_clk_serial@in^(0+128)
 12920  1D8F  3001               	movlw	high bdm_get_data@in
 12921  1D90  00A9               	movwf	(bdm_clk_serial@in+1)^(0+128)
 12922  1D91  30DE               	movlw	low bdm_get_data@out
 12923  1D92  00AA               	movwf	bdm_clk_serial@out^(0+128)
 12924  1D93  3001               	movlw	high bdm_get_data@out
 12925  1D94  00AB               	movwf	(bdm_clk_serial@out+1)^(0+128)
 12926  1D95  3191  21D6  319D   	fcall	_bdm_clk_serial
 12927  1D98  1FAB               	btfss	(?_bdm_clk_serial+3)^(0+128),7
 12928  1D99  2DA4               	goto	l4587
 12929                           
 12930                           ;mpc_bdm.c: 373: return 0xDEADBEEF;
 12931  1D9A  30DE               	movlw	222
 12932  1D9B  0023               	movlb	3	; select bank3
 12933  1D9C  00D8               	movwf	(?_bdm_get_data+3)^(0+384)
 12934  1D9D  30AD               	movlw	173
 12935  1D9E  00D7               	movwf	(?_bdm_get_data+2)^(0+384)
 12936  1D9F  30BE               	movlw	190
 12937  1DA0  00D6               	movwf	(?_bdm_get_data+1)^(0+384)
 12938  1DA1  30EF               	movlw	239
 12939  1DA2  00D5               	movwf	?_bdm_get_data^(0+384)
 12940  1DA3  0008               	return
 12941  1DA4                     l4587:	
 12942                           
 12943                           ;mpc_bdm.c: 374: }
 12944                           ;mpc_bdm.c: 375: val = bdm_get_gpr( 0 );
 12945  1DA4  3193  23FB  319D   	fcall	PL413	;call to abstracted procedure
 12946  1DA7  3193  2309  319D   	fcall	_bdm_get_gpr
 12947  1DAA  0847               	movf	(?_bdm_get_gpr+3)^(0+128),w
 12948  1DAB  0023               	movlb	3	; select bank3
 12949  1DAC  00DD               	movwf	(bdm_get_data@val+3)^(0+384)
 12950  1DAD  0021               	movlb	1	; select bank1
 12951  1DAE  0846               	movf	(?_bdm_get_gpr+2)^(0+128),w
 12952  1DAF  0023               	movlb	3	; select bank3
 12953  1DB0  00DC               	movwf	(bdm_get_data@val+2)^(0+384)
 12954  1DB1  0021               	movlb	1	; select bank1
 12955  1DB2  0845               	movf	(?_bdm_get_gpr+1)^(0+128),w
 12956  1DB3  0023               	movlb	3	; select bank3
 12957  1DB4  00DB               	movwf	(bdm_get_data@val+1)^(0+384)
 12958  1DB5  0021               	movlb	1	; select bank1
 12959  1DB6  0844               	movf	?_bdm_get_gpr^(0+128),w
 12960  1DB7  0023               	movlb	3	; select bank3
 12961  1DB8  00DA               	movwf	bdm_get_data@val^(0+384)
 12962                           
 12963                           ;mpc_bdm.c: 377: bdm_restore_regs();
 12964  1DB9  263D               	fcall	_bdm_restore_regs
 12965                           
 12966                           ;mpc_bdm.c: 378: return val;
 12967  1DBA  0023               	movlb	3	; select bank3
 12968  1DBB  085D               	movf	(bdm_get_data@val+3)^(0+384),w
 12969  1DBC  00D8               	movwf	(?_bdm_get_data+3)^(0+384)
 12970  1DBD  085C               	movf	(bdm_get_data@val+2)^(0+384),w
 12971  1DBE  00D7               	movwf	(?_bdm_get_data+2)^(0+384)
 12972  1DBF  085B               	movf	(bdm_get_data@val+1)^(0+384),w
 12973  1DC0  00D6               	movwf	(?_bdm_get_data+1)^(0+384)
 12974  1DC1  085A               	movf	bdm_get_data@val^(0+384),w
 12975  1DC2  00D5               	movwf	?_bdm_get_data^(0+384)
 12976  1DC3  0008               	return
 12977  1DC4                     __end_of_bdm_get_data:	
 12978  1DC4                     __ptext38:	
 12979 ;; *************** function _bdm_set_gpr *****************
 12980 ;; Defined at:
 12981 ;;		line 230 in file "mpc_bdm.c"
 12982 ;; Parameters:    Size  Location     Type
 12983 ;;  reg_nr          4   36[BANK1 ] unsigned long 
 12984 ;;  value           4   40[BANK1 ] unsigned long 
 12985 ;; Auto vars:     Size  Location     Type
 12986 ;;  out             5    5[BANK3 ] struct bdm_out_s
 12987 ;;  in              5    0[BANK3 ] struct bdm_in_s
 12988 ;; Return value:  Size  Location     Type
 12989 ;;                  2   36[BANK1 ] int 
 12990 ;; Registers used:
 12991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12992 ;; Tracked objects:
 12993 ;;		On entry : 1F/1
 12994 ;;		On exit  : 1F/1
 12995 ;;		Unchanged: 0/0
 12996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12997 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12998 ;;      Locals:         0       0       0       0      10       0       0       0       0       0       0       0       
      +0       0
 12999 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13000 ;;      Totals:         0       0      12       0      10       0       0       0       0       0       0       0       
      +0       0
 13001 ;;Total ram usage:       22 bytes
 13002 ;; Hardware stack levels used:    1
 13003 ;; Hardware stack levels required when called:   10
 13004 ;; This function calls:
 13005 ;;		_bdm_clk_serial
 13006 ;; This function is called by:
 13007 ;;		_bdm_restore_regs
 13008 ;;		_bdm_set_spr
 13009 ;;		_bdm_get_data
 13010 ;;		_bdm_set_data
 13011 ;;		_gdb_process_command
 13012 ;; This function uses a non-reentrant model
 13013 ;;
 13014                           
 13015                           
 13016                           ;psect for function _bdm_set_gpr
 13017  1DC4                     _bdm_set_gpr:	
 13018  1DC4                     l3725:	
 13019                           ;incstack = 0
 13020                           ; Regs used in _bdm_set_gpr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13021                           
 13022                           
 13023                           ;mpc_bdm.c: 232: bdm_in_t in;
 13024                           ;mpc_bdm.c: 233: bdm_out_t out;
 13025                           ;mpc_bdm.c: 235: reg_nr &= ~0x2000;
 13026  1DC4  30FF               	movlw	255
 13027  1DC5  05C4               	andwf	bdm_set_gpr@reg_nr^(0+128),f
 13028  1DC6  30DF               	movlw	223
 13029  1DC7  05C5               	andwf	(bdm_set_gpr@reg_nr+1)^(0+128),f
 13030  1DC8  30FF               	movlw	255
 13031  1DC9  05C6               	andwf	(bdm_set_gpr@reg_nr+2)^(0+128),f
 13032  1DCA  05C7               	andwf	(bdm_set_gpr@reg_nr+3)^(0+128),f
 13033                           
 13034                           ;mpc_bdm.c: 238: in.prefix = 0x0;
 13035  1DCB  30FC               	movlw	-4
 13036  1DCC  0023               	movlb	3	; select bank3
 13037  1DCD  05CB               	andwf	bdm_set_gpr@in^(0+384),f
 13038                           
 13039                           ;mpc_bdm.c: 240: in.data = 0x7c169aa6 + (reg_nr << 21);
 13040  1DCE  0021               	movlb	1	; select bank1
 13041  1DCF  0844               	movf	bdm_set_gpr@reg_nr^(0+128),w
 13042  1DD0  00CC               	movwf	??_bdm_set_gpr^(0+128)
 13043  1DD1  0845               	movf	(bdm_set_gpr@reg_nr+1)^(0+128),w
 13044  1DD2  00CD               	movwf	(??_bdm_set_gpr^(0+128)+1)
 13045  1DD3  0846               	movf	(bdm_set_gpr@reg_nr+2)^(0+128),w
 13046  1DD4  00CE               	movwf	(??_bdm_set_gpr^(0+128)+2)
 13047  1DD5  0847               	movf	(bdm_set_gpr@reg_nr+3)^(0+128),w
 13048  1DD6  00CF               	movwf	(??_bdm_set_gpr^(0+128)+3)
 13049  1DD7  3015               	movlw	21
 13050  1DD8                     u2785:	
 13051  1DD8  35CC               	lslf	??_bdm_set_gpr^(0+128),f
 13052  1DD9  0DCD               	rlf	(??_bdm_set_gpr^(0+128)+1),f
 13053  1DDA  0DCE               	rlf	(??_bdm_set_gpr^(0+128)+2),f
 13054  1DDB  0DCF               	rlf	(??_bdm_set_gpr^(0+128)+3),f
 13055  1DDC  0B89               	decfsz	9,f
 13056  1DDD  2DD8               	goto	u2785
 13057  1DDE  30A6               	movlw	166
 13058  1DDF  074C               	addwf	??_bdm_set_gpr^(0+128),w
 13059  1DE0  0023               	movlb	3	; select bank3
 13060  1DE1  00CC               	movwf	(bdm_set_gpr@in^(0+384)+1)
 13061  1DE2  309A               	movlw	154
 13062  1DE3  0021               	movlb	1	; select bank1
 13063  1DE4  3D4D               	addwfc	(??_bdm_set_gpr+1)^(0+128),w
 13064  1DE5  0023               	movlb	3	; select bank3
 13065  1DE6  00CD               	movwf	((bdm_set_gpr@in+1)^(0+384)+1)
 13066  1DE7  3016               	movlw	22
 13067  1DE8  0021               	movlb	1	; select bank1
 13068  1DE9  3D4E               	addwfc	(??_bdm_set_gpr+2)^(0+128),w
 13069  1DEA  0023               	movlb	3	; select bank3
 13070  1DEB  00CE               	movwf	((bdm_set_gpr@in+2)^(0+384)+1)
 13071  1DEC  307C               	movlw	124
 13072  1DED  0021               	movlb	1	; select bank1
 13073  1DEE  3D4F               	addwfc	(??_bdm_set_gpr+3)^(0+128),w
 13074  1DEF  0023               	movlb	3	; select bank3
 13075  1DF0  00CF               	movwf	((bdm_set_gpr@in+3)^(0+384)+1)
 13076                           
 13077                           ;mpc_bdm.c: 241: if( bdm_clk_serial( &in, &out ) < 0){
 13078  1DF1  2667               	fcall	PL387	;call to abstracted procedure
 13079  1DF2  3191  21D6  319D   	fcall	_bdm_clk_serial
 13080  1DF5  1BAB               	btfsc	(?_bdm_clk_serial+3)^(0+128),7
 13081  1DF6  0008               	return
 13082                           
 13083                           ;mpc_bdm.c: 243: }
 13084                           ;mpc_bdm.c: 245: in.prefix = 0x1;
 13085  1DF7  0023               	movlb	3	; select bank3
 13086  1DF8  084B               	movf	bdm_set_gpr@in^(0+384),w
 13087  1DF9  39FC               	andlw	-4
 13088  1DFA  3801               	iorlw	1
 13089  1DFB  00CB               	movwf	bdm_set_gpr@in^(0+384)
 13090                           
 13091                           ;mpc_bdm.c: 246: in.data = value;
 13092  1DFC  0021               	movlb	1	; select bank1
 13093  1DFD  084B               	movf	(bdm_set_gpr@value+3)^(0+128),w
 13094  1DFE  0023               	movlb	3	; select bank3
 13095  1DFF  00CF               	movwf	((bdm_set_gpr@in+3)^(0+384)+1)
 13096  1E00  0021               	movlb	1	; select bank1
 13097  1E01  084A               	movf	(bdm_set_gpr@value+2)^(0+128),w
 13098  1E02  0023               	movlb	3	; select bank3
 13099  1E03  00CE               	movwf	((bdm_set_gpr@in+2)^(0+384)+1)
 13100  1E04  0021               	movlb	1	; select bank1
 13101  1E05  0849               	movf	(bdm_set_gpr@value+1)^(0+128),w
 13102  1E06  0023               	movlb	3	; select bank3
 13103  1E07  00CD               	movwf	((bdm_set_gpr@in+1)^(0+384)+1)
 13104  1E08  0021               	movlb	1	; select bank1
 13105  1E09  0848               	movf	bdm_set_gpr@value^(0+128),w
 13106  1E0A  0023               	movlb	3	; select bank3
 13107  1E0B  00CC               	movwf	(bdm_set_gpr@in^(0+384)+1)
 13108                           
 13109                           ;mpc_bdm.c: 248: if( bdm_clk_serial( &in, &out ) < 0 ){
 13110  1E0C  2667               	fcall	PL387	;call to abstracted procedure
 13111  1E0D  3191  29D6         	ljmp	l3611
 13112  1E0F                     __end_of_bdm_set_gpr:	
 13113  1E0F                     __ptext35:	
 13114 ;; *************** function _bdm_save_regs *****************
 13115 ;; Defined at:
 13116 ;;		line 28 in file "mpc_bdm.c"
 13117 ;; Parameters:    Size  Location     Type
 13118 ;;		None
 13119 ;; Auto vars:     Size  Location     Type
 13120 ;;		None
 13121 ;; Return value:  Size  Location     Type
 13122 ;;		None               void
 13123 ;; Registers used:
 13124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13125 ;; Tracked objects:
 13126 ;;		On entry : 1F/3
 13127 ;;		On exit  : 1F/7
 13128 ;;		Unchanged: 0/0
 13129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13134 ;;Total ram usage:        0 bytes
 13135 ;; Hardware stack levels used:    1
 13136 ;; Hardware stack levels required when called:   11
 13137 ;; This function calls:
 13138 ;;		_bdm_get_gpr
 13139 ;; This function is called by:
 13140 ;;		_bdm_get_spr
 13141 ;;		_bdm_set_spr
 13142 ;;		_bdm_get_data
 13143 ;;		_bdm_set_data
 13144 ;; This function uses a non-reentrant model
 13145 ;;
 13146                           
 13147                           
 13148                           ;psect for function _bdm_save_regs
 13149  1E0F                     _bdm_save_regs:	
 13150                           
 13151                           ;mpc_bdm.c: 30: save_regs[0] = bdm_get_gpr( 0 );
 13152                           
 13153                           ;incstack = 0
 13154                           ; Regs used in _bdm_save_regs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13155  1E0F  0021               	movlb	1	; select bank1
 13156  1E10  3193  23FB  319D   	fcall	PL413	;call to abstracted procedure
 13157  1E13  3193  2309  319D   	fcall	_bdm_get_gpr
 13158  1E16  0847               	movf	(?_bdm_get_gpr+3)^(0+128),w
 13159  1E17  0027               	movlb	7	; select bank7
 13160  1E18  00B3               	movwf	(mpc_bdm@save_regs+3)^(0+896)
 13161  1E19  0021               	movlb	1	; select bank1
 13162  1E1A  0846               	movf	(?_bdm_get_gpr+2)^(0+128),w
 13163  1E1B  0027               	movlb	7	; select bank7
 13164  1E1C  00B2               	movwf	(mpc_bdm@save_regs+2)^(0+896)
 13165  1E1D  0021               	movlb	1	; select bank1
 13166  1E1E  0845               	movf	(?_bdm_get_gpr+1)^(0+128),w
 13167  1E1F  0027               	movlb	7	; select bank7
 13168  1E20  00B1               	movwf	(mpc_bdm@save_regs+1)^(0+896)
 13169  1E21  0021               	movlb	1	; select bank1
 13170  1E22  0844               	movf	?_bdm_get_gpr^(0+128),w
 13171  1E23  0027               	movlb	7	; select bank7
 13172  1E24  00B0               	movwf	mpc_bdm@save_regs^(0+896)
 13173                           
 13174                           ;mpc_bdm.c: 31: save_regs[1] = bdm_get_gpr( 1 );
 13175  1E25  0021               	movlb	1	; select bank1
 13176  1E26  01C4               	clrf	bdm_get_gpr@reg_nr^(0+128)
 13177  1E27  0AC4               	incf	bdm_get_gpr@reg_nr^(0+128),f
 13178  1E28  01C5               	clrf	(bdm_get_gpr@reg_nr+1)^(0+128)
 13179  1E29  01C6               	clrf	(bdm_get_gpr@reg_nr+2)^(0+128)
 13180  1E2A  01C7               	clrf	(bdm_get_gpr@reg_nr+3)^(0+128)
 13181  1E2B  3193  2309         	fcall	_bdm_get_gpr
 13182  1E2D  0847               	movf	(?_bdm_get_gpr+3)^(0+128),w
 13183  1E2E  0027               	movlb	7	; select bank7
 13184  1E2F  00B7               	movwf	((mpc_bdm@save_regs+3)^(0+896)+4)
 13185  1E30  0021               	movlb	1	; select bank1
 13186  1E31  0846               	movf	(?_bdm_get_gpr+2)^(0+128),w
 13187  1E32  0027               	movlb	7	; select bank7
 13188  1E33  00B6               	movwf	((mpc_bdm@save_regs+2)^(0+896)+4)
 13189  1E34  0021               	movlb	1	; select bank1
 13190  1E35  0845               	movf	(?_bdm_get_gpr+1)^(0+128),w
 13191  1E36  0027               	movlb	7	; select bank7
 13192  1E37  00B5               	movwf	((mpc_bdm@save_regs+1)^(0+896)+4)
 13193  1E38  0021               	movlb	1	; select bank1
 13194  1E39  0844               	movf	?_bdm_get_gpr^(0+128),w
 13195  1E3A  0027               	movlb	7	; select bank7
 13196  1E3B  00B4               	movwf	(mpc_bdm@save_regs^(0+896)+4)
 13197  1E3C  0008               	return
 13198  1E3D                     __end_of_bdm_save_regs:	
 13199  1E3D                     __ptext37:	
 13200 ;; *************** function _bdm_restore_regs *****************
 13201 ;; Defined at:
 13202 ;;		line 34 in file "mpc_bdm.c"
 13203 ;; Parameters:    Size  Location     Type
 13204 ;;		None
 13205 ;; Auto vars:     Size  Location     Type
 13206 ;;		None
 13207 ;; Return value:  Size  Location     Type
 13208 ;;		None               void
 13209 ;; Registers used:
 13210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13211 ;; Tracked objects:
 13212 ;;		On entry : 18/1
 13213 ;;		On exit  : 1F/1
 13214 ;;		Unchanged: 0/0
 13215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13220 ;;Total ram usage:        0 bytes
 13221 ;; Hardware stack levels used:    1
 13222 ;; Hardware stack levels required when called:   11
 13223 ;; This function calls:
 13224 ;;		_bdm_set_gpr
 13225 ;; This function is called by:
 13226 ;;		_bdm_get_spr
 13227 ;;		_bdm_set_spr
 13228 ;;		_bdm_get_data
 13229 ;;		_bdm_set_data
 13230 ;; This function uses a non-reentrant model
 13231 ;;
 13232                           
 13233                           
 13234                           ;psect for function _bdm_restore_regs
 13235  1E3D                     _bdm_restore_regs:	
 13236  1E3D                     l3785:	
 13237                           ;incstack = 0
 13238                           ; Regs used in _bdm_restore_regs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13239                           
 13240                           
 13241                           ;mpc_bdm.c: 36: bdm_set_gpr( 0, save_regs[0] );
 13242  1E3D  0021               	movlb	1	; select bank1
 13243  1E3E  01C4               	clrf	bdm_set_gpr@reg_nr^(0+128)
 13244  1E3F  01C5               	clrf	(bdm_set_gpr@reg_nr+1)^(0+128)
 13245  1E40  01C6               	clrf	(bdm_set_gpr@reg_nr+2)^(0+128)
 13246  1E41  01C7               	clrf	(bdm_set_gpr@reg_nr+3)^(0+128)
 13247  1E42  0027               	movlb	7	; select bank7
 13248  1E43  0833               	movf	(mpc_bdm@save_regs+3)^(0+896),w
 13249  1E44  0021               	movlb	1	; select bank1
 13250  1E45  00CB               	movwf	(bdm_set_gpr@value+3)^(0+128)
 13251  1E46  0027               	movlb	7	; select bank7
 13252  1E47  0832               	movf	(mpc_bdm@save_regs+2)^(0+896),w
 13253  1E48  0021               	movlb	1	; select bank1
 13254  1E49  00CA               	movwf	(bdm_set_gpr@value+2)^(0+128)
 13255  1E4A  0027               	movlb	7	; select bank7
 13256  1E4B  0831               	movf	(mpc_bdm@save_regs+1)^(0+896),w
 13257  1E4C  0021               	movlb	1	; select bank1
 13258  1E4D  00C9               	movwf	(bdm_set_gpr@value+1)^(0+128)
 13259  1E4E  0027               	movlb	7	; select bank7
 13260  1E4F  0830               	movf	mpc_bdm@save_regs^(0+896),w
 13261  1E50  0021               	movlb	1	; select bank1
 13262  1E51  00C8               	movwf	bdm_set_gpr@value^(0+128)
 13263  1E52  25C4  319D         	fcall	_bdm_set_gpr
 13264  1E54  3004               	movlw	4
 13265                           
 13266                           ;mpc_bdm.c: 37: bdm_set_gpr( 1, save_regs[1] );
 13267  1E55  01C4               	clrf	bdm_set_gpr@reg_nr^(0+128)
 13268  1E56  0AC4               	incf	bdm_set_gpr@reg_nr^(0+128),f
 13269  1E57  01C5               	clrf	(bdm_set_gpr@reg_nr+1)^(0+128)
 13270  1E58  01C6               	clrf	(bdm_set_gpr@reg_nr+2)^(0+128)
 13271  1E59  01C7               	clrf	(bdm_set_gpr@reg_nr+3)^(0+128)
 13272  1E5A  3EB0               	addlw	mpc_bdm@save_regs& (0+255)
 13273  1E5B  0086               	movwf	6
 13274  1E5C  3003               	movlw	3	; select bank7/8
 13275  1E5D  0087               	movwf	7
 13276  1E5E  3F40               	moviw [0]fsr1
 13277  1E5F  00C8               	movwf	bdm_set_gpr@value^(0+128)
 13278  1E60  3F41               	moviw [1]fsr1
 13279  1E61  00C9               	movwf	(bdm_set_gpr@value+1)^(0+128)
 13280  1E62  3F42               	moviw [2]fsr1
 13281  1E63  00CA               	movwf	(bdm_set_gpr@value+2)^(0+128)
 13282  1E64  3F43               	moviw [3]fsr1
 13283  1E65  00CB               	movwf	(bdm_set_gpr@value+3)^(0+128)
 13284  1E66  2DC4               	ljmp	l3725
 13285  1E67                     __end_of_bdm_restore_regs:	
 13286  1E67                     PL387:	
 13287  1E67  30CB               	movlw	low bdm_set_gpr@in
 13288  1E68  0021               	movlb	1	; select bank1
 13289  1E69  00A8               	movwf	bdm_clk_serial@in^(0+128)
 13290  1E6A  3001               	movlw	high bdm_set_gpr@in
 13291  1E6B  00A9               	movwf	(bdm_clk_serial@in+1)^(0+128)
 13292  1E6C  30D0               	movlw	low bdm_set_gpr@out
 13293  1E6D  00AA               	movwf	bdm_clk_serial@out^(0+128)
 13294  1E6E  3001               	movlw	high bdm_set_gpr@out
 13295  1E6F  00AB               	movwf	(bdm_clk_serial@out+1)^(0+128)
 13296  1E70  0008               	return
 13297  1E71                     __end_ofPL387:	
 13298  1E71                     PL405:	
 13299  1E71  0021               	movlb	1	; select bank1
 13300  1E72  01C4               	clrf	bdm_set_gpr@reg_nr^(0+128)
 13301  1E73  0AC4               	incf	bdm_set_gpr@reg_nr^(0+128),f
 13302  1E74  01C5               	clrf	(bdm_set_gpr@reg_nr+1)^(0+128)
 13303  1E75  01C6               	clrf	(bdm_set_gpr@reg_nr+2)^(0+128)
 13304  1E76  01C7               	clrf	(bdm_set_gpr@reg_nr+3)^(0+128)
 13305  1E77  0023               	movlb	3	; select bank3
 13306  1E78  0008               	return
 13307  1E79                     __end_ofPL405:	
 13308                           
 13309                           	psect	text27
 13310  1036                     __ptext27:	
 13311 ;; *************** function _bdm_reset *****************
 13312 ;; Defined at:
 13313 ;;		line 40 in file "mpc_bdm.c"
 13314 ;; Parameters:    Size  Location     Type
 13315 ;;		None
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;		None
 13318 ;; Return value:  Size  Location     Type
 13319 ;;		None               void
 13320 ;; Registers used:
 13321 ;;		wreg, status,2, status,0, pclath, cstack
 13322 ;; Tracked objects:
 13323 ;;		On entry : 0/4
 13324 ;;		On exit  : 1F/0
 13325 ;;		Unchanged: 0/0
 13326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13329 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13330 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13331 ;;Total ram usage:        3 bytes
 13332 ;; Hardware stack levels used:    1
 13333 ;; Hardware stack levels required when called:    9
 13334 ;; This function calls:
 13335 ;;		_bdm_wait_ready
 13336 ;; This function is called by:
 13337 ;;		_gdb_process_command
 13338 ;; This function uses a non-reentrant model
 13339 ;;
 13340                           
 13341                           
 13342                           ;psect for function _bdm_reset
 13343  1036                     _bdm_reset:	
 13344                           
 13345                           ;mpc_bdm.c: 47: _delay((unsigned long)((50)*(48000000L/4000.0)));
 13346                           
 13347                           ;incstack = 0
 13348                           ; Regs used in _bdm_reset: [wreg+status,2+status,0+pclath+cstack]
 13349  1036  3004               	movlw	4
 13350  1037  0021               	movlb	1	; select bank1
 13351  1038  00A4               	movwf	(??_bdm_reset^(0+128)+2)
 13352  1039  300C               	movlw	12
 13353  103A  00A3               	movwf	(??_bdm_reset^(0+128)+1)
 13354  103B  3035               	movlw	53
 13355  103C  00A2               	movwf	??_bdm_reset^(0+128)
 13356  103D                     u5347:	
 13357  103D  0BA2               	decfsz	??_bdm_reset^(0+128),f
 13358  103E  283D               	goto	u5347
 13359  103F  0BA3               	decfsz	(??_bdm_reset^(0+128)+1),f
 13360  1040  283D               	goto	u5347
 13361  1041  0BA4               	decfsz	(??_bdm_reset^(0+128)+2),f
 13362  1042  283D               	goto	u5347
 13363  1043  3200               	nop2
 13364                           
 13365                           ;mpc_bdm.c: 48: LATCbits.LATC4=1;
 13366  1044  0022               	movlb	2	; select bank2
 13367  1045  160E               	bsf	14,4	;volatile
 13368                           
 13369                           ;mpc_bdm.c: 49: LATCbits.LATC5=0;
 13370  1046  128E               	bcf	14,5	;volatile
 13371                           
 13372                           ;mpc_bdm.c: 50: _delay((unsigned long)((1)*(48000000L/4000.0)));
 13373  1047  3010               	movlw	16
 13374  1048  0021               	movlb	1	; select bank1
 13375  1049  00A3               	movwf	(??_bdm_reset^(0+128)+1)
 13376  104A  3094               	movlw	148
 13377  104B  00A2               	movwf	??_bdm_reset^(0+128)
 13378  104C                     u5357:	
 13379  104C  0BA2               	decfsz	??_bdm_reset^(0+128),f
 13380  104D  284C               	goto	u5357
 13381  104E  0BA3               	decfsz	(??_bdm_reset^(0+128)+1),f
 13382  104F  284C               	goto	u5357
 13383  1050  0000               	nop
 13384                           
 13385                           ;mpc_bdm.c: 51: LATCbits.LATC3=0;
 13386  1051  0022               	movlb	2	; select bank2
 13387  1052  118E               	bcf	14,3	;volatile
 13388                           
 13389                           ;mpc_bdm.c: 52: LATCbits.LATC6=0;
 13390  1053  130E               	bcf	14,6	;volatile
 13391                           
 13392                           ;mpc_bdm.c: 53: _delay((unsigned long)((1)*(48000000L/4000.0)));
 13393  1054  3010               	movlw	16
 13394  1055  0021               	movlb	1	; select bank1
 13395  1056  00A3               	movwf	(??_bdm_reset^(0+128)+1)
 13396  1057  3094               	movlw	148
 13397  1058  00A2               	movwf	??_bdm_reset^(0+128)
 13398  1059                     u5367:	
 13399  1059  0BA2               	decfsz	??_bdm_reset^(0+128),f
 13400  105A  2859               	goto	u5367
 13401  105B  0BA3               	decfsz	(??_bdm_reset^(0+128)+1),f
 13402  105C  2859               	goto	u5367
 13403  105D  0000               	nop
 13404                           
 13405                           ;mpc_bdm.c: 54: LATCbits.LATC6=1;
 13406  105E  0022               	movlb	2	; select bank2
 13407  105F  170E               	bsf	14,6	;volatile
 13408                           
 13409                           ;mpc_bdm.c: 55: LATCbits.LATC3=1;
 13410  1060  158E               	bsf	14,3	;volatile
 13411                           
 13412                           ;mpc_bdm.c: 56: _delay((unsigned long)((1)*(48000000L/4000.0)));
 13413  1061  3010               	movlw	16
 13414  1062  0021               	movlb	1	; select bank1
 13415  1063  00A3               	movwf	(??_bdm_reset^(0+128)+1)
 13416  1064  3094               	movlw	148
 13417  1065  00A2               	movwf	??_bdm_reset^(0+128)
 13418  1066                     u5377:	
 13419  1066  0BA2               	decfsz	??_bdm_reset^(0+128),f
 13420  1067  2866               	goto	u5377
 13421  1068  0BA3               	decfsz	(??_bdm_reset^(0+128)+1),f
 13422  1069  2866               	goto	u5377
 13423  106A  0000               	nop
 13424                           
 13425                           ;mpc_bdm.c: 57: LATCbits.LATC4=0;
 13426  106B  0022               	movlb	2	; select bank2
 13427  106C  120E               	bcf	14,4	;volatile
 13428                           
 13429                           ;mpc_bdm.c: 58: bdm_wait_ready(100);
 13430  106D  3064               	movlw	100
 13431  106E  0021               	movlb	1	; select bank1
 13432  106F  00A0               	movwf	bdm_wait_ready@timeout^(0+128)
 13433  1070  01A1               	clrf	(bdm_wait_ready@timeout+1)^(0+128)
 13434  1071  2AEB               	ljmp	l681
 13435  1072                     __end_of_bdm_reset:	
 13436  1072                     __ptext23:	
 13437 ;; *************** function _bdm_update_breakpoints *****************
 13438 ;; Defined at:
 13439 ;;		line 487 in file "mpc_bdm.c"
 13440 ;; Parameters:    Size  Location     Type
 13441 ;;		None
 13442 ;; Auto vars:     Size  Location     Type
 13443 ;;  reg             4   22[BANK4 ] unsigned long 
 13444 ;;  wc              4   18[BANK4 ] unsigned long 
 13445 ;;  reg_l1          4   14[BANK4 ] unsigned long 
 13446 ;;  i               1   26[BANK4 ] unsigned char 
 13447 ;;  j               1    0        unsigned char 
 13448 ;; Return value:  Size  Location     Type
 13449 ;;		None               void
 13450 ;; Registers used:
 13451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13452 ;; Tracked objects:
 13453 ;;		On entry : 1A/4
 13454 ;;		On exit  : 1F/1
 13455 ;;		Unchanged: 0/0
 13456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13458 ;;      Locals:         0       0       0       0       0      13       0       0       0       0       0       0       
      +0       0
 13459 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
 13460 ;;      Totals:         0       0       0       0       4      13       0       0       0       0       0       0       
      +0       0
 13461 ;;Total ram usage:       17 bytes
 13462 ;; Hardware stack levels used:    1
 13463 ;; Hardware stack levels required when called:   13
 13464 ;; This function calls:
 13465 ;;		___bmul
 13466 ;;		___wmul
 13467 ;;		_bdm_get_spr
 13468 ;;		_bdm_set_spr
 13469 ;; This function is called by:
 13470 ;;		_gdb_process_command
 13471 ;; This function uses a non-reentrant model
 13472 ;;
 13473                           
 13474                           
 13475                           ;psect for function _bdm_update_breakpoints
 13476  1072                     _bdm_update_breakpoints:	
 13477                           
 13478                           ;mpc_bdm.c: 494: for (i=0;i<4;i++)
 13479                           
 13480                           ;incstack = 0
 13481                           ; Regs used in _bdm_update_breakpoints: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13482  1072  0024               	movlb	4	; select bank4
 13483  1073  01BA               	clrf	bdm_update_breakpoints@i^(0+512)
 13484  1074                     l4647:	
 13485                           
 13486                           ;mpc_bdm.c: 495: {
 13487                           ;mpc_bdm.c: 496: bdm_set_spr(144+i, break_points[i]);
 13488  1074  083A               	movf	bdm_update_breakpoints@i^(0+512),w
 13489  1075  3E90               	addlw	144
 13490  1076  23C0  3190         	fcall	PL379	;call to abstracted procedure
 13491  1078  0024               	movlb	4	; select bank4
 13492  1079  083A               	movf	bdm_update_breakpoints@i^(0+512),w
 13493  107A  0709               	addwf	9,w
 13494  107B  0709               	addwf	9,w
 13495  107C  3EA0               	addlw	_break_points& (0+255)
 13496  107D  0086               	movwf	6
 13497  107E  3003               	movlw	3	; select bank7/8
 13498  107F  23CC               	fcall	PL381	;call to abstracted procedure
 13499  1080  3187  2701  3190   	fcall	_bdm_set_spr
 13500  1083  0024               	movlb	4	; select bank4
 13501  1084  3004               	movlw	4
 13502  1085  0ABA               	incf	bdm_update_breakpoints@i^(0+512),f
 13503  1086  023A               	subwf	bdm_update_breakpoints@i^(0+512),w
 13504  1087  1C03               	skipc
 13505  1088  2874               	goto	l4647
 13506                           
 13507                           ;mpc_bdm.c: 497: }
 13508                           ;mpc_bdm.c: 499: reg_l1=0x90000000;
 13509  1089  3090               	movlw	144
 13510  108A  00B1               	movwf	(bdm_update_breakpoints@reg_l1+3)^(0+512)
 13511  108B  01B0               	clrf	(bdm_update_breakpoints@reg_l1+2)^(0+512)
 13512  108C  01AF               	clrf	(bdm_update_breakpoints@reg_l1+1)^(0+512)
 13513  108D  01AE               	clrf	bdm_update_breakpoints@reg_l1^(0+512)
 13514                           
 13515                           ;mpc_bdm.c: 500: for (i=0;i<2;i++)
 13516  108E  01BA               	clrf	bdm_update_breakpoints@i^(0+512)
 13517  108F                     l4661:	
 13518                           
 13519                           ;mpc_bdm.c: 501: {
 13520                           ;mpc_bdm.c: 502: bdm_set_spr(152+i, watch_points[i].addr);
 13521  108F  083A               	movf	bdm_update_breakpoints@i^(0+512),w
 13522  1090  3E98               	addlw	152
 13523  1091  23C0               	fcall	PL379	;call to abstracted procedure
 13524  1092  3005               	movlw	5
 13525  1093  0021               	movlb	1	; select bank1
 13526  1094  00A0               	movwf	___bmul@multiplicand^(0+128)
 13527  1095  0024               	movlb	4	; select bank4
 13528  1096  083A               	movf	bdm_update_breakpoints@i^(0+512),w
 13529  1097  3187  2783  3190   	fcall	___bmul
 13530  109A  3E60               	addlw	_watch_points& (0+255)
 13531  109B  0086               	movwf	6
 13532  109C  3003               	movlw	3	; select bank6/7
 13533  109D  23CC               	fcall	PL381	;call to abstracted procedure
 13534  109E  3187  2701  3190   	fcall	_bdm_set_spr
 13535                           
 13536                           ;mpc_bdm.c: 504: switch (watch_points[i].rw + i*10)
 13537  10A1  28B8               	goto	l4671
 13538  10A2                     l4663:	
 13539  10A2  0024               	movlb	4	; select bank4
 13540  10A3  3008               	movlw	8
 13541  10A4  28AD               	goto	L22
 13542  10A5                     l4665:	
 13543  10A5  0024               	movlb	4	; select bank4
 13544  10A6  300C               	movlw	12
 13545  10A7  28AD               	goto	L22
 13546  10A8                     l4667:	
 13547  10A8  0024               	movlb	4	; select bank4
 13548  10A9  3002               	movlw	2
 13549  10AA  28AD               	goto	L22
 13550  10AB                     l4669:	
 13551  10AB  0024               	movlb	4	; select bank4
 13552  10AC  3003               	movlw	3
 13553  10AD                     L22:	
 13554  10AD  01B5               	clrf	(bdm_update_breakpoints@wc+3)^(0+512)
 13555  10AE  00B4               	movwf	(bdm_update_breakpoints@wc+2)^(0+512)
 13556  10AF  01B3               	clrf	(bdm_update_breakpoints@wc+1)^(0+512)
 13557  10B0  01B2               	clrf	bdm_update_breakpoints@wc^(0+512)
 13558  10B1  28EE               	goto	l4673
 13559  10B2                     l775:	
 13560                           ;mpc_bdm.c: 510: default: wc=0x0;
 13561                           
 13562  10B2  0024               	movlb	4	; select bank4
 13563  10B3  01B2               	clrf	bdm_update_breakpoints@wc^(0+512)
 13564  10B4  01B3               	clrf	(bdm_update_breakpoints@wc+1)^(0+512)
 13565  10B5  01B4               	clrf	(bdm_update_breakpoints@wc+2)^(0+512)
 13566  10B6  01B5               	clrf	(bdm_update_breakpoints@wc+3)^(0+512)
 13567                           
 13568                           ;mpc_bdm.c: 511: }
 13569  10B7  28EE               	goto	l4673
 13570  10B8                     l4671:	
 13571  10B8  3005               	movlw	5
 13572  10B9  00A0               	movwf	___bmul@multiplicand^(0+128)
 13573  10BA  0024               	movlb	4	; select bank4
 13574  10BB  083A               	movf	bdm_update_breakpoints@i^(0+512),w
 13575  10BC  3187  2783  3190   	fcall	___bmul
 13576  10BF  3E64               	addlw	(_watch_points+4)& (0+255)
 13577  10C0  0086               	movwf	6
 13578  10C1  3003               	movlw	3	; select bank6/7
 13579  10C2  0087               	movwf	7
 13580  10C3  0801               	movf	1,w
 13581  10C4  0023               	movlb	3	; select bank3
 13582  10C5  00E9               	movwf	??_bdm_update_breakpoints^(0+384)
 13583  10C6  01EA               	clrf	(??_bdm_update_breakpoints^(0+384)+1)
 13584  10C7  0024               	movlb	4	; select bank4
 13585  10C8  083A               	movf	bdm_update_breakpoints@i^(0+512),w
 13586  10C9  0021               	movlb	1	; select bank1
 13587  10CA  00A0               	movwf	___wmul@multiplier^(0+128)
 13588  10CB  300A               	movlw	10
 13589  10CC  01A1               	clrf	(___wmul@multiplier+1)^(0+128)
 13590  10CD  00A2               	movwf	___wmul@multiplicand^(0+128)
 13591  10CE  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
 13592  10CF  319C  24C3  3190   	fcall	___wmul
 13593  10D2  0023               	movlb	3	; select bank3
 13594  10D3  0869               	movf	??_bdm_update_breakpoints^(0+384),w
 13595  10D4  0021               	movlb	1	; select bank1
 13596  10D5  0720               	addwf	?___wmul^(0+128),w
 13597  10D6  0023               	movlb	3	; select bank3
 13598  10D7  00EB               	movwf	(??_bdm_update_breakpoints+2)^(0+384)
 13599  10D8  086A               	movf	(??_bdm_update_breakpoints+1)^(0+384),w
 13600  10D9  0021               	movlb	1	; select bank1
 13601  10DA  3D21               	addwfc	(?___wmul+1)^(0+128),w
 13602  10DB  0023               	movlb	3	; select bank3
 13603  10DC  00EC               	movwf	(??_bdm_update_breakpoints+3)^(0+384)
 13604                           
 13605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13606                           ; Switch size 1, requested type "space"
 13607                           ; Number of cases is 1, Range of values is 0 to 0
 13608                           ; switch strategies available:
 13609                           ; Name         Instructions Cycles
 13610                           ; simple_byte            4     3 (average)
 13611                           ; direct_byte            8     6 (fixed)
 13612                           ; jumptable            260     6 (fixed)
 13613                           ;	Chosen strategy is simple_byte
 13614  10DD  1903               	skipnz
 13615  10DE  28E0               	goto	l5759
 13616  10DF  28B2               	goto	l775
 13617  10E0                     l5759:	
 13618                           
 13619                           ; Switch size 1, requested type "space"
 13620                           ; Number of cases is 4, Range of values is 0 to 11
 13621                           ; switch strategies available:
 13622                           ; Name         Instructions Cycles
 13623                           ; simple_byte           13     7 (average)
 13624                           ; direct_byte           30     6 (fixed)
 13625                           ; jumptable            260     6 (fixed)
 13626                           ;	Chosen strategy is simple_byte
 13627  10E0  086B               	movf	(??_bdm_update_breakpoints+2)^(0+384),w
 13628  10E1  3A00               	xorlw	0	; case 0
 13629  10E2  1903               	skipnz
 13630  10E3  28A2               	goto	l4663
 13631  10E4  3A01               	xorlw	1	; case 1
 13632  10E5  1903               	skipnz
 13633  10E6  28A5               	goto	l4665
 13634  10E7  3A0B               	xorlw	11	; case 10
 13635  10E8  1903               	skipnz
 13636  10E9  28A8               	goto	l4667
 13637  10EA  3A01               	xorlw	1	; case 11
 13638  10EB  1903               	skipnz
 13639  10EC  28AB               	goto	l4669
 13640  10ED  28B2               	goto	l775
 13641  10EE                     l4673:	
 13642                           
 13643                           ;mpc_bdm.c: 512: reg_l1 = reg_l1 | wc;
 13644  10EE  0832               	movf	bdm_update_breakpoints@wc^(0+512),w
 13645  10EF  04AE               	iorwf	bdm_update_breakpoints@reg_l1^(0+512),f
 13646  10F0  0833               	movf	(bdm_update_breakpoints@wc+1)^(0+512),w
 13647  10F1  04AF               	iorwf	(bdm_update_breakpoints@reg_l1+1)^(0+512),f
 13648  10F2  0834               	movf	(bdm_update_breakpoints@wc+2)^(0+512),w
 13649  10F3  04B0               	iorwf	(bdm_update_breakpoints@reg_l1+2)^(0+512),f
 13650  10F4  0835               	movf	(bdm_update_breakpoints@wc+3)^(0+512),w
 13651  10F5  04B1               	iorwf	(bdm_update_breakpoints@reg_l1+3)^(0+512),f
 13652  10F6  3002               	movlw	2
 13653  10F7  0ABA               	incf	bdm_update_breakpoints@i^(0+512),f
 13654  10F8  023A               	subwf	bdm_update_breakpoints@i^(0+512),w
 13655  10F9  1C03               	skipc
 13656  10FA  288F               	goto	l4661
 13657                           
 13658                           ;mpc_bdm.c: 513: }
 13659                           ;mpc_bdm.c: 514: bdm_set_spr(156, reg_l1);
 13660  10FB  309C               	movlw	156
 13661  10FC  0023               	movlb	3	; select bank3
 13662  10FD  00D5               	movwf	bdm_set_spr@reg^(0+384)
 13663  10FE  01D6               	clrf	(bdm_set_spr@reg+1)^(0+384)
 13664  10FF  01D7               	clrf	(bdm_set_spr@reg+2)^(0+384)
 13665  1100  01D8               	clrf	(bdm_set_spr@reg+3)^(0+384)
 13666  1101  0024               	movlb	4	; select bank4
 13667  1102  0831               	movf	(bdm_update_breakpoints@reg_l1+3)^(0+512),w
 13668  1103  0023               	movlb	3	; select bank3
 13669  1104  00DC               	movwf	(bdm_set_spr@value+3)^(0+384)
 13670  1105  0024               	movlb	4	; select bank4
 13671  1106  0830               	movf	(bdm_update_breakpoints@reg_l1+2)^(0+512),w
 13672  1107  0023               	movlb	3	; select bank3
 13673  1108  00DB               	movwf	(bdm_set_spr@value+2)^(0+384)
 13674  1109  0024               	movlb	4	; select bank4
 13675  110A  082F               	movf	(bdm_update_breakpoints@reg_l1+1)^(0+512),w
 13676  110B  0023               	movlb	3	; select bank3
 13677  110C  00DA               	movwf	(bdm_set_spr@value+1)^(0+384)
 13678  110D  0024               	movlb	4	; select bank4
 13679  110E  082E               	movf	bdm_update_breakpoints@reg_l1^(0+512),w
 13680  110F  0023               	movlb	3	; select bank3
 13681  1110  00D9               	movwf	bdm_set_spr@value^(0+384)
 13682  1111  3187  2701  3190   	fcall	_bdm_set_spr
 13683                           
 13684                           ;mpc_bdm.c: 516: reg=bdm_get_spr(158);
 13685  1114  309E               	movlw	158
 13686  1115  23F5  3190         	fcall	PL409	;call to abstracted procedure
 13687  1117  213F  3190         	fcall	_bdm_get_spr
 13688  1119  2395  3190         	fcall	PL357	;call to abstracted procedure
 13689                           
 13690                           ;mpc_bdm.c: 517: reg = reg | 0x924AAF00;
 13691  111B  3000               	movlw	0
 13692  111C  04B6               	iorwf	bdm_update_breakpoints@reg^(0+512),f
 13693  111D  30AF               	movlw	175
 13694  111E  04B7               	iorwf	(bdm_update_breakpoints@reg+1)^(0+512),f
 13695  111F  304A               	movlw	74
 13696  1120  04B8               	iorwf	(bdm_update_breakpoints@reg+2)^(0+512),f
 13697  1121  3092               	movlw	146
 13698  1122  04B9               	iorwf	(bdm_update_breakpoints@reg+3)^(0+512),f
 13699                           
 13700                           ;mpc_bdm.c: 518: bdm_set_spr(158, reg);
 13701  1123  309E               	movlw	158
 13702  1124  0023               	movlb	3	; select bank3
 13703  1125  00D5               	movwf	bdm_set_spr@reg^(0+384)
 13704  1126  2381               	fcall	PL353	;call to abstracted procedure
 13705  1127  3187  2701  3190   	fcall	_bdm_set_spr
 13706                           
 13707                           ;mpc_bdm.c: 520: reg=bdm_get_spr(157);
 13708  112A  309D               	movlw	157
 13709  112B  23F5  3190         	fcall	PL409	;call to abstracted procedure
 13710  112D  213F  3190         	fcall	_bdm_get_spr
 13711  112F  2395  3190         	fcall	PL357	;call to abstracted procedure
 13712                           
 13713                           ;mpc_bdm.c: 521: reg = reg | 0x82208002;
 13714  1131  3002               	movlw	2
 13715  1132  04B6               	iorwf	bdm_update_breakpoints@reg^(0+512),f
 13716  1133  3080               	movlw	128
 13717  1134  04B7               	iorwf	(bdm_update_breakpoints@reg+1)^(0+512),f
 13718  1135  3020               	movlw	32
 13719  1136  04B8               	iorwf	(bdm_update_breakpoints@reg+2)^(0+512),f
 13720  1137  3082               	movlw	130
 13721  1138  04B9               	iorwf	(bdm_update_breakpoints@reg+3)^(0+512),f
 13722                           
 13723                           ;mpc_bdm.c: 522: bdm_set_spr(157, reg);
 13724  1139  309D               	movlw	157
 13725  113A  0023               	movlb	3	; select bank3
 13726  113B  00D5               	movwf	bdm_set_spr@reg^(0+384)
 13727  113C  2381               	fcall	PL353	;call to abstracted procedure
 13728  113D  3187  2F01         	ljmp	l4255
 13729  113F                     __end_of_bdm_update_breakpoints:	
 13730  113F                     __ptext34:	
 13731 ;; *************** function _bdm_get_spr *****************
 13732 ;; Defined at:
 13733 ;;		line 254 in file "mpc_bdm.c"
 13734 ;; Parameters:    Size  Location     Type
 13735 ;;  reg             4   10[BANK3 ] unsigned long 
 13736 ;; Auto vars:     Size  Location     Type
 13737 ;;  in              5    9[BANK4 ] struct bdm_in_s
 13738 ;;  out             5    4[BANK4 ] struct bdm_out_s
 13739 ;;  spr             4    0[BANK4 ] unsigned long 
 13740 ;; Return value:  Size  Location     Type
 13741 ;;                  4   10[BANK3 ] unsigned long 
 13742 ;; Registers used:
 13743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13744 ;; Tracked objects:
 13745 ;;		On entry : 1F/3
 13746 ;;		On exit  : 1F/3
 13747 ;;		Unchanged: 0/0
 13748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13749 ;;      Params:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
 13750 ;;      Locals:         0       0       0       0       0      14       0       0       0       0       0       0       
      +0       0
 13751 ;;      Temps:          0       0       0       0      12       0       0       0       0       0       0       0       
      +0       0
 13752 ;;      Totals:         0       0       0       0      16      14       0       0       0       0       0       0       
      +0       0
 13753 ;;Total ram usage:       30 bytes
 13754 ;; Hardware stack levels used:    1
 13755 ;; Hardware stack levels required when called:   12
 13756 ;; This function calls:
 13757 ;;		_bdm_clk_serial
 13758 ;;		_bdm_get_gpr
 13759 ;;		_bdm_restore_regs
 13760 ;;		_bdm_save_regs
 13761 ;; This function is called by:
 13762 ;;		_bdm_continue
 13763 ;;		_bdm_continue_single_step
 13764 ;;		_bdm_resume
 13765 ;;		_bdm_update_breakpoints
 13766 ;;		_gdb_process_command
 13767 ;; This function uses a non-reentrant model
 13768 ;;
 13769                           
 13770                           
 13771                           ;psect for function _bdm_get_spr
 13772  113F                     _bdm_get_spr:	
 13773                           
 13774                           ;mpc_bdm.c: 257: unsigned long spr;
 13775                           ;mpc_bdm.c: 258: bdm_in_t in;
 13776                           ;mpc_bdm.c: 259: bdm_out_t out;
 13777                           ;mpc_bdm.c: 275: bdm_save_regs();
 13778                           
 13779                           ;incstack = 0
 13780                           ; Regs used in _bdm_get_spr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13781  113F  319E  260F  3190   	fcall	_bdm_save_regs
 13782                           
 13783                           ;mpc_bdm.c: 277: in.prefix = 0x0;
 13784  1142  30FC               	movlw	-4
 13785  1143  0024               	movlb	4	; select bank4
 13786  1144  05A9               	andwf	bdm_get_spr@in^(0+512),f
 13787                           
 13788                           ;mpc_bdm.c: 278: in.data = ((((reg&0x1f) << 5) | ((reg >> 5)&0x1f)) << 11);
 13789  1145  301F               	movlw	31
 13790  1146  0023               	movlb	3	; select bank3
 13791  1147  00D9               	movwf	??_bdm_get_spr^(0+384)
 13792  1148  01DA               	clrf	(??_bdm_get_spr^(0+384)+1)
 13793  1149  01DB               	clrf	(??_bdm_get_spr^(0+384)+2)
 13794  114A  01DC               	clrf	(??_bdm_get_spr^(0+384)+3)
 13795  114B  0855               	movf	bdm_get_spr@reg^(0+384),w
 13796  114C  00DD               	movwf	(??_bdm_get_spr+4)^(0+384)
 13797  114D  0856               	movf	(bdm_get_spr@reg+1)^(0+384),w
 13798  114E  00DE               	movwf	((??_bdm_get_spr+4)^(0+384)+1)
 13799  114F  0857               	movf	(bdm_get_spr@reg+2)^(0+384),w
 13800  1150  00DF               	movwf	((??_bdm_get_spr+4)^(0+384)+2)
 13801  1151  0858               	movf	(bdm_get_spr@reg+3)^(0+384),w
 13802  1152  00E0               	movwf	((??_bdm_get_spr+4)^(0+384)+3)
 13803  1153  3005               	movlw	5
 13804  1154                     u3035:	
 13805  1154  36E0               	lsrf	((??_bdm_get_spr+4)^(0+384)+3),f
 13806  1155  0CDF               	rrf	((??_bdm_get_spr+4)^(0+384)+2),f
 13807  1156  0CDE               	rrf	((??_bdm_get_spr+4)^(0+384)+1),f
 13808  1157  0CDD               	rrf	(??_bdm_get_spr+4)^(0+384),f
 13809  1158  0B89               	decfsz	9,f
 13810  1159  2954               	goto	u3035
 13811  115A  085D               	movf	(??_bdm_get_spr+4)^(0+384),w
 13812  115B  05D9               	andwf	??_bdm_get_spr^(0+384),f
 13813  115C  085E               	movf	(??_bdm_get_spr+5)^(0+384),w
 13814  115D  05DA               	andwf	(??_bdm_get_spr^(0+384)+1),f
 13815  115E  085F               	movf	(??_bdm_get_spr+6)^(0+384),w
 13816  115F  05DB               	andwf	(??_bdm_get_spr^(0+384)+2),f
 13817  1160  0860               	movf	(??_bdm_get_spr+7)^(0+384),w
 13818  1161  05DC               	andwf	(??_bdm_get_spr^(0+384)+3),f
 13819  1162  301F               	movlw	31
 13820  1163  0555               	andwf	bdm_get_spr@reg^(0+384),w
 13821  1164  00E1               	movwf	(??_bdm_get_spr+8)^(0+384)
 13822  1165  3000               	movlw	0
 13823  1166  01E2               	clrf	((??_bdm_get_spr+8)^(0+384)+1)
 13824  1167  01E3               	clrf	((??_bdm_get_spr+8)^(0+384)+2)
 13825  1168  0558               	andwf	(bdm_get_spr@reg+3)^(0+384),w
 13826  1169  00E4               	movwf	((??_bdm_get_spr+8)^(0+384)+3)
 13827  116A  3005               	movlw	5
 13828  116B                     u3045:	
 13829  116B  35E1               	lslf	(??_bdm_get_spr+8)^(0+384),f
 13830  116C  0DE2               	rlf	((??_bdm_get_spr+8)^(0+384)+1),f
 13831  116D  0DE3               	rlf	((??_bdm_get_spr+8)^(0+384)+2),f
 13832  116E  0DE4               	rlf	((??_bdm_get_spr+8)^(0+384)+3),f
 13833  116F  0B89               	decfsz	9,f
 13834  1170  296B               	goto	u3045
 13835  1171  0861               	movf	(??_bdm_get_spr+8)^(0+384),w
 13836  1172  04D9               	iorwf	??_bdm_get_spr^(0+384),f
 13837  1173  0862               	movf	(??_bdm_get_spr+9)^(0+384),w
 13838  1174  04DA               	iorwf	(??_bdm_get_spr^(0+384)+1),f
 13839  1175  0863               	movf	(??_bdm_get_spr+10)^(0+384),w
 13840  1176  04DB               	iorwf	(??_bdm_get_spr^(0+384)+2),f
 13841  1177  0864               	movf	(??_bdm_get_spr+11)^(0+384),w
 13842  1178  04DC               	iorwf	(??_bdm_get_spr^(0+384)+3),f
 13843  1179  300B               	movlw	11
 13844  117A                     u3055:	
 13845  117A  35D9               	lslf	??_bdm_get_spr^(0+384),f
 13846  117B  0DDA               	rlf	(??_bdm_get_spr^(0+384)+1),f
 13847  117C  0DDB               	rlf	(??_bdm_get_spr^(0+384)+2),f
 13848  117D  0DDC               	rlf	(??_bdm_get_spr^(0+384)+3),f
 13849  117E  0B89               	decfsz	9,f
 13850  117F  297A               	goto	u3055
 13851  1180  085C               	movf	(??_bdm_get_spr+3)^(0+384),w
 13852  1181  23A5  3190         	fcall	PL359	;call to abstracted procedure
 13853                           
 13854                           ;mpc_bdm.c: 279: in.data= in.data + 0x7c0002a6;
 13855  1183  30A6               	movlw	166
 13856  1184  0023               	movlb	3	; select bank3
 13857  1185  00D9               	movwf	??_bdm_get_spr^(0+384)
 13858  1186  3002               	movlw	2
 13859  1187  00DA               	movwf	(??_bdm_get_spr^(0+384)+1)
 13860  1188  307C               	movlw	124
 13861  1189  01DB               	clrf	(??_bdm_get_spr^(0+384)+2)
 13862  118A  00DC               	movwf	(??_bdm_get_spr^(0+384)+3)
 13863  118B  302A               	movlw	(bdm_get_spr@in& (0+255)+1)
 13864  118C  0086               	movwf	6
 13865  118D  3002               	movlw	2	; select bank4/5
 13866  118E  0087               	movwf	7
 13867  118F  3F40               	moviw [0]fsr1
 13868  1190  07D9               	addwf	??_bdm_get_spr^(0+384),f
 13869  1191  3F41               	moviw [1]fsr1
 13870  1192  3DDA               	addwfc	(??_bdm_get_spr^(0+384)+1),f
 13871  1193  3F42               	moviw [2]fsr1
 13872  1194  3DDB               	addwfc	(??_bdm_get_spr^(0+384)+2),f
 13873  1195  3F43               	moviw [3]fsr1
 13874  1196  3DDC               	addwfc	(??_bdm_get_spr^(0+384)+3),f
 13875  1197  085C               	movf	(??_bdm_get_spr+3)^(0+384),w
 13876  1198  23A5  3190         	fcall	PL359	;call to abstracted procedure
 13877                           
 13878                           ;mpc_bdm.c: 280: if( bdm_clk_serial( &in, &out ) < 0 ){
 13879  119A  3029               	movlw	low bdm_get_spr@in
 13880  119B  0021               	movlb	1	; select bank1
 13881  119C  00A8               	movwf	bdm_clk_serial@in^(0+128)
 13882  119D  3002               	movlw	high bdm_get_spr@in
 13883  119E  00A9               	movwf	(bdm_clk_serial@in+1)^(0+128)
 13884  119F  3024               	movlw	low bdm_get_spr@out
 13885  11A0  00AA               	movwf	bdm_clk_serial@out^(0+128)
 13886  11A1  3002               	movlw	high bdm_get_spr@out
 13887  11A2  00AB               	movwf	(bdm_clk_serial@out+1)^(0+128)
 13888  11A3  21D6  3190         	fcall	_bdm_clk_serial
 13889  11A5  1FAB               	btfss	(?_bdm_clk_serial+3)^(0+128),7
 13890  11A6  29B1               	goto	l3967
 13891                           
 13892                           ;mpc_bdm.c: 281: return 0xDEADBEEF;
 13893  11A7  30DE               	movlw	222
 13894  11A8  0023               	movlb	3	; select bank3
 13895  11A9  00D8               	movwf	(?_bdm_get_spr+3)^(0+384)
 13896  11AA  30AD               	movlw	173
 13897  11AB  00D7               	movwf	(?_bdm_get_spr+2)^(0+384)
 13898  11AC  30BE               	movlw	190
 13899  11AD  00D6               	movwf	(?_bdm_get_spr+1)^(0+384)
 13900  11AE  30EF               	movlw	239
 13901  11AF  00D5               	movwf	?_bdm_get_spr^(0+384)
 13902  11B0  0008               	return
 13903  11B1                     l3967:	
 13904                           
 13905                           ;mpc_bdm.c: 282: }
 13906                           ;mpc_bdm.c: 283: spr = bdm_get_gpr( 0 );
 13907  11B1  23FB  3190         	fcall	PL413	;call to abstracted procedure
 13908  11B3  2309               	fcall	_bdm_get_gpr
 13909  11B4  0847               	movf	(?_bdm_get_gpr+3)^(0+128),w
 13910  11B5  0024               	movlb	4	; select bank4
 13911  11B6  00A3               	movwf	(bdm_get_spr@spr+3)^(0+512)
 13912  11B7  0021               	movlb	1	; select bank1
 13913  11B8  0846               	movf	(?_bdm_get_gpr+2)^(0+128),w
 13914  11B9  0024               	movlb	4	; select bank4
 13915  11BA  00A2               	movwf	(bdm_get_spr@spr+2)^(0+512)
 13916  11BB  0021               	movlb	1	; select bank1
 13917  11BC  0845               	movf	(?_bdm_get_gpr+1)^(0+128),w
 13918  11BD  0024               	movlb	4	; select bank4
 13919  11BE  00A1               	movwf	(bdm_get_spr@spr+1)^(0+512)
 13920  11BF  0021               	movlb	1	; select bank1
 13921  11C0  0844               	movf	?_bdm_get_gpr^(0+128),w
 13922  11C1  0024               	movlb	4	; select bank4
 13923  11C2  00A0               	movwf	bdm_get_spr@spr^(0+512)
 13924                           
 13925                           ;mpc_bdm.c: 285: bdm_restore_regs();
 13926  11C3  319E  263D         	fcall	_bdm_restore_regs
 13927                           
 13928                           ;mpc_bdm.c: 286: return spr;
 13929  11C5  0024               	movlb	4	; select bank4
 13930  11C6  0823               	movf	(bdm_get_spr@spr+3)^(0+512),w
 13931  11C7  0023               	movlb	3	; select bank3
 13932  11C8  00D8               	movwf	(?_bdm_get_spr+3)^(0+384)
 13933  11C9  0024               	movlb	4	; select bank4
 13934  11CA  0822               	movf	(bdm_get_spr@spr+2)^(0+512),w
 13935  11CB  0023               	movlb	3	; select bank3
 13936  11CC  00D7               	movwf	(?_bdm_get_spr+2)^(0+384)
 13937  11CD  0024               	movlb	4	; select bank4
 13938  11CE  0821               	movf	(bdm_get_spr@spr+1)^(0+512),w
 13939  11CF  0023               	movlb	3	; select bank3
 13940  11D0  00D6               	movwf	(?_bdm_get_spr+1)^(0+384)
 13941  11D1  0024               	movlb	4	; select bank4
 13942  11D2  0820               	movf	bdm_get_spr@spr^(0+512),w
 13943  11D3  0023               	movlb	3	; select bank3
 13944  11D4  00D5               	movwf	?_bdm_get_spr^(0+384)
 13945  11D5  0008               	return
 13946  11D6                     __end_of_bdm_get_spr:	
 13947  11D6                     __ptext42:	
 13948 ;; *************** function _bdm_clk_serial *****************
 13949 ;; Defined at:
 13950 ;;		line 103 in file "mpc_bdm.c"
 13951 ;; Parameters:    Size  Location     Type
 13952 ;;  in              2    8[BANK1 ] PTR struct bdm_in_s
 13953 ;;		 -> bdm_interrupt@in(5), bdm_resume@in(5), bdm_set_data@in(5), bdm_get_data@in(5), 
 13954 ;;		 -> bdm_set_spr@in(5), bdm_get_spr2@in(5), bdm_get_spr@in(5), bdm_set_gpr@in(5), 
 13955 ;;		 -> bdm_get_gpr@in(5), bdm_nop@in(5), 
 13956 ;;  out             2   10[BANK1 ] PTR struct bdm_out_s
 13957 ;;		 -> bdm_interrupt@out(5), bdm_resume@out(5), bdm_set_data@out(5), bdm_get_data@out(5), 
 13958 ;;		 -> bdm_set_spr@out(5), bdm_get_spr2@out(5), bdm_get_spr@out(5), bdm_set_gpr@out(5), 
 13959 ;;		 -> bdm_get_gpr@out(5), bdm_nop@out(5), 
 13960 ;; Auto vars:     Size  Location     Type
 13961 ;;  mask            4   26[BANK1 ] unsigned long 
 13962 ;;  x               4   20[BANK1 ] unsigned long 
 13963 ;;  word            4   16[BANK1 ] unsigned long 
 13964 ;;  n               2   34[BANK1 ] int 
 13965 ;;  reslen          2   32[BANK1 ] int 
 13966 ;;  res             2   30[BANK1 ] int 
 13967 ;;  len             2   24[BANK1 ] int 
 13968 ;; Return value:  Size  Location     Type
 13969 ;;                  4    8[BANK1 ] long 
 13970 ;; Registers used:
 13971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13972 ;; Tracked objects:
 13973 ;;		On entry : 1F/1
 13974 ;;		On exit  : 1F/1
 13975 ;;		Unchanged: 0/0
 13976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13977 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13978 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 13979 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13980 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
 13981 ;;Total ram usage:       28 bytes
 13982 ;; Hardware stack levels used:    1
 13983 ;; Hardware stack levels required when called:    9
 13984 ;; This function calls:
 13985 ;;		_bdm_clk_bit
 13986 ;;		_bdm_wait_ready
 13987 ;;		_memset
 13988 ;; This function is called by:
 13989 ;;		_bdm_nop
 13990 ;;		_bdm_get_gpr
 13991 ;;		_bdm_set_gpr
 13992 ;;		_bdm_get_spr
 13993 ;;		_bdm_set_spr
 13994 ;;		_bdm_get_data
 13995 ;;		_bdm_set_data
 13996 ;;		_bdm_resume
 13997 ;;		_bdm_interrupt
 13998 ;; This function uses a non-reentrant model
 13999 ;;
 14000                           
 14001                           
 14002                           ;psect for function _bdm_clk_serial
 14003  11D6                     _bdm_clk_serial:	
 14004  11D6                     l3611:	
 14005                           ;incstack = 0
 14006                           ; Regs used in _bdm_clk_serial: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14007                           
 14008                           
 14009                           ;mpc_bdm.c: 105: int res = 0;
 14010  11D6  01BE               	clrf	bdm_clk_serial@res^(0+128)
 14011  11D7  01BF               	clrf	(bdm_clk_serial@res+1)^(0+128)
 14012                           
 14013                           ;mpc_bdm.c: 108: int len;
 14014                           ;mpc_bdm.c: 109: unsigned long mask,word,x;
 14015                           ;mpc_bdm.c: 114: memset( out, 0 , sizeof(bdm_out_t) );
 14016  11D8  082B               	movf	(bdm_clk_serial@out+1)^(0+128),w
 14017  11D9  00A1               	movwf	(memset@p1+1)^(0+128)
 14018  11DA  082A               	movf	bdm_clk_serial@out^(0+128),w
 14019  11DB  00A0               	movwf	memset@p1^(0+128)
 14020  11DC  3005               	movlw	5
 14021  11DD  319D  2504  3190   	fcall	PL411	;call to abstracted procedure
 14022  11E0  22F2  3190         	fcall	_memset
 14023                           
 14024                           ;mpc_bdm.c: 116: bdm_wait_ready(2);
 14025  11E2  3002               	movlw	2
 14026  11E3  00A0               	movwf	bdm_wait_ready@timeout^(0+128)
 14027  11E4  01A1               	clrf	(bdm_wait_ready@timeout+1)^(0+128)
 14028  11E5  22EB  3190         	fcall	_bdm_wait_ready
 14029                           
 14030                           ;mpc_bdm.c: 118: if( in->prefix & 2 )
 14031  11E7  0021               	movlb	1	; select bank1
 14032  11E8  23D7  3190         	fcall	PL389	;call to abstracted procedure
 14033  11EA  3902               	andlw	2
 14034  11EB  1903               	btfsc	3,2
 14035  11EC  29F6               	goto	l3621
 14036                           
 14037                           ;mpc_bdm.c: 119: {
 14038                           ;mpc_bdm.c: 120: len = 7;
 14039  11ED  3007               	movlw	7
 14040  11EE  00B8               	movwf	bdm_clk_serial@len^(0+128)
 14041  11EF  3040               	movlw	64
 14042  11F0  01B9               	clrf	(bdm_clk_serial@len+1)^(0+128)
 14043                           
 14044                           ;mpc_bdm.c: 121: mask = 0x40;
 14045  11F1  00BA               	movwf	bdm_clk_serial@mask^(0+128)
 14046  11F2  01BB               	clrf	(bdm_clk_serial@mask+1)^(0+128)
 14047  11F3  01BC               	clrf	(bdm_clk_serial@mask+2)^(0+128)
 14048  11F4  01BD               	clrf	(bdm_clk_serial@mask+3)^(0+128)
 14049                           
 14050                           ;mpc_bdm.c: 122: }
 14051  11F5  29FE               	goto	l3623
 14052  11F6                     l3621:	
 14053                           
 14054                           ;mpc_bdm.c: 123: else
 14055                           ;mpc_bdm.c: 124: {
 14056                           ;mpc_bdm.c: 125: len = 32;
 14057  11F6  3020               	movlw	32
 14058  11F7  00B8               	movwf	bdm_clk_serial@len^(0+128)
 14059  11F8  3080               	movlw	128
 14060  11F9  01B9               	clrf	(bdm_clk_serial@len+1)^(0+128)
 14061                           
 14062                           ;mpc_bdm.c: 126: mask = 0x80000000;
 14063  11FA  00BD               	movwf	(bdm_clk_serial@mask+3)^(0+128)
 14064  11FB  01BC               	clrf	(bdm_clk_serial@mask+2)^(0+128)
 14065  11FC  01BB               	clrf	(bdm_clk_serial@mask+1)^(0+128)
 14066  11FD  01BA               	clrf	bdm_clk_serial@mask^(0+128)
 14067  11FE                     l3623:	
 14068                           
 14069                           ;mpc_bdm.c: 127: }
 14070                           ;mpc_bdm.c: 131: out->ready = bdm_clk_bit( 1 );
 14071  11FE  01A0               	clrf	bdm_clk_bit@b^(0+128)
 14072  11FF  0AA0               	incf	bdm_clk_bit@b^(0+128),f
 14073  1200  01A1               	clrf	(bdm_clk_bit@b+1)^(0+128)
 14074  1201  01A2               	clrf	(bdm_clk_bit@b+2)^(0+128)
 14075  1202  01A3               	clrf	(bdm_clk_bit@b+3)^(0+128)
 14076  1203  22CE  3190         	fcall	_bdm_clk_bit
 14077  1205  082A               	movf	bdm_clk_serial@out^(0+128),w
 14078  1206  0086               	movwf	6
 14079  1207  082B               	movf	(bdm_clk_serial@out+1)^(0+128),w
 14080  1208  0087               	movwf	7
 14081  1209  0801               	movf	1,w
 14082  120A  0620               	xorwf	?_bdm_clk_bit^(0+128),w
 14083  120B  39FE               	andlw	-2
 14084  120C  0620               	xorwf	?_bdm_clk_bit^(0+128),w
 14085  120D  0081               	movwf	1
 14086                           
 14087                           ;mpc_bdm.c: 133: out->status = bdm_clk_bit( in->prefix & 2 );
 14088  120E  23D7  3190         	fcall	PL389	;call to abstracted procedure
 14089  1210  3902               	andlw	2
 14090  1211  2400  3190         	fcall	PL417	;call to abstracted procedure
 14091  1213  22CE  3190         	fcall	_bdm_clk_bit
 14092  1215  0820               	movf	?_bdm_clk_bit^(0+128),w
 14093  1216  00AC               	movwf	??_bdm_clk_serial^(0+128)
 14094  1217  082A               	movf	bdm_clk_serial@out^(0+128),w
 14095  1218  0086               	movwf	6
 14096  1219  082B               	movf	(bdm_clk_serial@out+1)^(0+128),w
 14097  121A  0087               	movwf	7
 14098  121B  23DE  3190         	fcall	PL391	;call to abstracted procedure
 14099                           
 14100                           ;mpc_bdm.c: 134: out->status <<= 1;
 14101  121D  23E5  3190         	fcall	PL393	;call to abstracted procedure
 14102  121F  00AC               	movwf	??_bdm_clk_serial^(0+128)
 14103  1220  35AC               	lslf	??_bdm_clk_serial^(0+128),f
 14104  1221  23DE  3190         	fcall	PL391	;call to abstracted procedure
 14105                           
 14106                           ;mpc_bdm.c: 136: out->status |= bdm_clk_bit( in->prefix & 1 );
 14107  1223  23D7  3190         	fcall	PL389	;call to abstracted procedure
 14108  1225  3901               	andlw	1
 14109  1226  2400  3190         	fcall	PL417	;call to abstracted procedure
 14110  1228  22CE  3190         	fcall	_bdm_clk_bit
 14111  122A  23E5  3190         	fcall	PL393	;call to abstracted procedure
 14112  122C  00AC               	movwf	??_bdm_clk_serial^(0+128)
 14113  122D  0820               	movf	?_bdm_clk_bit^(0+128),w
 14114  122E  04AC               	iorwf	??_bdm_clk_serial^(0+128),f
 14115  122F  23DE  3190         	fcall	PL391	;call to abstracted procedure
 14116                           
 14117                           ;mpc_bdm.c: 139: switch( out->status ){
 14118  1231  2A45               	goto	l3647
 14119  1232                     l3631:	
 14120                           
 14121                           ;mpc_bdm.c: 141: reslen = 32;
 14122  1232  3020               	movlw	32
 14123  1233  2A3B               	goto	L29
 14124  1234                     l3633:	
 14125                           ;mpc_bdm.c: 142: break;
 14126                           
 14127                           
 14128                           ;mpc_bdm.c: 147: res = -3;
 14129  1234  30FD               	movlw	253
 14130  1235  2A37               	goto	L30
 14131  1236                     l3635:	
 14132                           ;mpc_bdm.c: 149: break;
 14133                           
 14134                           ;mpc_bdm.c: 148: reslen = 7;
 14135                           
 14136                           
 14137                           ;mpc_bdm.c: 154: res = -4;
 14138  1236  30FC               	movlw	252
 14139  1237                     L30:	
 14140  1237  00BE               	movwf	bdm_clk_serial@res^(0+128)
 14141  1238  30FF               	movlw	255
 14142  1239  00BF               	movwf	(bdm_clk_serial@res^(0+128)+1)
 14143  123A                     l3637:	
 14144                           ;mpc_bdm.c: 156: break;
 14145                           
 14146                           ;mpc_bdm.c: 155: reslen = 7;
 14147                           
 14148                           
 14149                           ;mpc_bdm.c: 159: reslen = 7;
 14150  123A  3007               	movlw	7
 14151  123B                     L29:	
 14152  123B  00C0               	movwf	bdm_clk_serial@reslen^(0+128)
 14153  123C  01C1               	clrf	(bdm_clk_serial@reslen+1)^(0+128)
 14154                           
 14155                           ;mpc_bdm.c: 160: break;
 14156  123D  2A53               	goto	l3649
 14157  123E                     l3639:	
 14158                           
 14159                           ;mpc_bdm.c: 164: return -5;
 14160  123E  30FF               	movlw	255
 14161  123F  00AB               	movwf	(?_bdm_clk_serial+3)^(0+128)
 14162  1240  00AA               	movwf	(?_bdm_clk_serial+2)^(0+128)
 14163  1241  00A9               	movwf	(?_bdm_clk_serial+1)^(0+128)
 14164  1242  30FB               	movlw	251
 14165  1243  00A8               	movwf	?_bdm_clk_serial^(0+128)
 14166  1244  0008               	return
 14167  1245                     l3647:	
 14168  1245  23E5  3190         	fcall	PL393	;call to abstracted procedure
 14169                           
 14170                           ; Switch size 1, requested type "space"
 14171                           ; Number of cases is 4, Range of values is 0 to 3
 14172                           ; switch strategies available:
 14173                           ; Name         Instructions Cycles
 14174                           ; simple_byte           13     7 (average)
 14175                           ; direct_byte           14     6 (fixed)
 14176                           ; jumptable            260     6 (fixed)
 14177                           ;	Chosen strategy is simple_byte
 14178  1247  1903               	skipnz
 14179  1248  2A32               	goto	l3631
 14180  1249  3A01               	xorlw	1	; case 1
 14181  124A  1903               	skipnz
 14182  124B  2A34               	goto	l3633
 14183  124C  3A03               	xorlw	3	; case 2
 14184  124D  1903               	skipnz
 14185  124E  2A36               	goto	l3635
 14186  124F  3A01               	xorlw	1	; case 3
 14187  1250  1903               	skipnz
 14188  1251  2A3A               	goto	l3637
 14189  1252  2A3E               	goto	l3639
 14190  1253                     l3649:	
 14191                           
 14192                           ;mpc_bdm.c: 169: word = (unsigned long)in->data;
 14193  1253  0828               	movf	bdm_clk_serial@in^(0+128),w
 14194  1254  0086               	movwf	6
 14195  1255  0829               	movf	(bdm_clk_serial@in+1)^(0+128),w
 14196  1256  0087               	movwf	7
 14197  1257  3141               	addfsr 1,1
 14198  1258  3F40               	moviw [0]fsr1
 14199  1259  00B0               	movwf	bdm_clk_serial@word^(0+128)
 14200  125A  3F41               	moviw [1]fsr1
 14201  125B  00B1               	movwf	(bdm_clk_serial@word+1)^(0+128)
 14202  125C  3F42               	moviw [2]fsr1
 14203  125D  00B2               	movwf	(bdm_clk_serial@word+2)^(0+128)
 14204  125E  3F43               	moviw [3]fsr1
 14205  125F  00B3               	movwf	(bdm_clk_serial@word+3)^(0+128)
 14206                           
 14207                           ;mpc_bdm.c: 171: out->data = 0;
 14208  1260  082A               	movf	bdm_clk_serial@out^(0+128),w
 14209  1261  3E01               	addlw	1
 14210  1262  00AC               	movwf	??_bdm_clk_serial^(0+128)
 14211  1263  3000               	movlw	0
 14212  1264  3D2B               	addwfc	(bdm_clk_serial@out+1)^(0+128),w
 14213  1265  00AD               	movwf	(??_bdm_clk_serial+1)^(0+128)
 14214  1266  082C               	movf	??_bdm_clk_serial^(0+128),w
 14215  1267  0086               	movwf	6
 14216  1268  082D               	movf	(??_bdm_clk_serial+1)^(0+128),w
 14217  1269  0087               	movwf	7
 14218  126A  3000               	movlw	0
 14219  126B  3FC0               	movwi [0]fsr1
 14220  126C  3FC1               	movwi [1]fsr1
 14221  126D  3FC2               	movwi [2]fsr1
 14222  126E  3FC3               	movwi [3]fsr1
 14223                           
 14224                           ;mpc_bdm.c: 172: for(n = 0; n < len; n++ )
 14225  126F  01C2               	clrf	bdm_clk_serial@n^(0+128)
 14226  1270  01C3               	clrf	(bdm_clk_serial@n+1)^(0+128)
 14227  1271                     l3667:	
 14228  1271  0843               	movf	(bdm_clk_serial@n+1)^(0+128),w
 14229  1272  3A80               	xorlw	128
 14230  1273  00AC               	movwf	??_bdm_clk_serial^(0+128)
 14231  1274  0839               	movf	(bdm_clk_serial@len+1)^(0+128),w
 14232  1275  3A80               	xorlw	128
 14233  1276  022C               	subwf	??_bdm_clk_serial^(0+128),w
 14234  1277  1D03               	skipz
 14235  1278  2A7B               	goto	u2715
 14236  1279  0838               	movf	bdm_clk_serial@len^(0+128),w
 14237  127A  0242               	subwf	bdm_clk_serial@n^(0+128),w
 14238  127B                     u2715:	
 14239  127B  1803               	btfsc	3,0
 14240  127C  2AB4               	goto	l3675
 14241                           
 14242                           ;mpc_bdm.c: 173: {
 14243                           ;mpc_bdm.c: 174: out->data <<= 1;
 14244  127D  0021               	movlb	1	; select bank1
 14245  127E  082A               	movf	bdm_clk_serial@out^(0+128),w
 14246  127F  23B4  3190         	fcall	PL375	;call to abstracted procedure
 14247                           
 14248                           ;mpc_bdm.c: 175: x= (unsigned long)(word&mask);
 14249  1281  0833               	movf	(bdm_clk_serial@word+3)^(0+128),w
 14250  1282  00B7               	movwf	(bdm_clk_serial@x+3)^(0+128)
 14251  1283  0832               	movf	(bdm_clk_serial@word+2)^(0+128),w
 14252  1284  00B6               	movwf	(bdm_clk_serial@x+2)^(0+128)
 14253  1285  0831               	movf	(bdm_clk_serial@word+1)^(0+128),w
 14254  1286  00B5               	movwf	(bdm_clk_serial@x+1)^(0+128)
 14255  1287  0830               	movf	bdm_clk_serial@word^(0+128),w
 14256  1288  00B4               	movwf	bdm_clk_serial@x^(0+128)
 14257  1289  083A               	movf	bdm_clk_serial@mask^(0+128),w
 14258  128A  05B4               	andwf	bdm_clk_serial@x^(0+128),f
 14259  128B  083B               	movf	(bdm_clk_serial@mask+1)^(0+128),w
 14260  128C  05B5               	andwf	(bdm_clk_serial@x+1)^(0+128),f
 14261  128D  083C               	movf	(bdm_clk_serial@mask+2)^(0+128),w
 14262  128E  05B6               	andwf	(bdm_clk_serial@x+2)^(0+128),f
 14263  128F  083D               	movf	(bdm_clk_serial@mask+3)^(0+128),w
 14264  1290  05B7               	andwf	(bdm_clk_serial@x+3)^(0+128),f
 14265                           
 14266                           ;mpc_bdm.c: 176: out->data |= bdm_clk_bit( x );
 14267  1291  0837               	movf	(bdm_clk_serial@x+3)^(0+128),w
 14268  1292  00A3               	movwf	(bdm_clk_bit@b+3)^(0+128)
 14269  1293  0836               	movf	(bdm_clk_serial@x+2)^(0+128),w
 14270  1294  00A2               	movwf	(bdm_clk_bit@b+2)^(0+128)
 14271  1295  0835               	movf	(bdm_clk_serial@x+1)^(0+128),w
 14272  1296  00A1               	movwf	(bdm_clk_bit@b+1)^(0+128)
 14273  1297  0834               	movf	bdm_clk_serial@x^(0+128),w
 14274  1298  00A0               	movwf	bdm_clk_bit@b^(0+128)
 14275  1299  22CE  3190         	fcall	_bdm_clk_bit
 14276  129B  2367  3190         	fcall	PL351	;call to abstracted procedure
 14277                           
 14278                           ;mpc_bdm.c: 177: mask >>= 1;
 14279  129D  36BD               	lsrf	(bdm_clk_serial@mask+3)^(0+128),f
 14280  129E  0CBC               	rrf	(bdm_clk_serial@mask+2)^(0+128),f
 14281  129F  0CBB               	rrf	(bdm_clk_serial@mask+1)^(0+128),f
 14282  12A0  0CBA               	rrf	bdm_clk_serial@mask^(0+128),f
 14283  12A1  0AC2               	incf	bdm_clk_serial@n^(0+128),f
 14284  12A2  1903               	skipnz
 14285  12A3  0AC3               	incf	(bdm_clk_serial@n+1)^(0+128),f
 14286  12A4  2A71               	goto	l3667
 14287  12A5                     l3669:	
 14288                           
 14289                           ;mpc_bdm.c: 181: {
 14290                           ;mpc_bdm.c: 182: out->data <<= 1;
 14291  12A5  0021               	movlb	1	; select bank1
 14292  12A6  082A               	movf	bdm_clk_serial@out^(0+128),w
 14293  12A7  23B4  3190         	fcall	PL375	;call to abstracted procedure
 14294                           
 14295                           ;mpc_bdm.c: 183: out->data |= bdm_clk_bit( 0 );
 14296  12A9  01A0               	clrf	bdm_clk_bit@b^(0+128)
 14297  12AA  01A1               	clrf	(bdm_clk_bit@b+1)^(0+128)
 14298  12AB  01A2               	clrf	(bdm_clk_bit@b+2)^(0+128)
 14299  12AC  01A3               	clrf	(bdm_clk_bit@b+3)^(0+128)
 14300  12AD  22CE  3190         	fcall	_bdm_clk_bit
 14301  12AF  2367  3190         	fcall	PL351	;call to abstracted procedure
 14302  12B1  0AC2               	incf	bdm_clk_serial@n^(0+128),f
 14303  12B2  1903               	skipnz
 14304  12B3  0AC3               	incf	(bdm_clk_serial@n+1)^(0+128),f
 14305  12B4                     l3675:	
 14306  12B4  0021               	movlb	1	; select bank1
 14307  12B5  0843               	movf	(bdm_clk_serial@n+1)^(0+128),w
 14308  12B6  3A80               	xorlw	128
 14309  12B7  00AC               	movwf	??_bdm_clk_serial^(0+128)
 14310  12B8  0841               	movf	(bdm_clk_serial@reslen+1)^(0+128),w
 14311  12B9  3A80               	xorlw	128
 14312  12BA  022C               	subwf	??_bdm_clk_serial^(0+128),w
 14313  12BB  1D03               	skipz
 14314  12BC  2ABF               	goto	u2725
 14315  12BD  0840               	movf	bdm_clk_serial@reslen^(0+128),w
 14316  12BE  0242               	subwf	bdm_clk_serial@n^(0+128),w
 14317  12BF                     u2725:	
 14318  12BF  1C03               	skipc
 14319  12C0  2AA5               	goto	l3669
 14320                           
 14321                           ;mpc_bdm.c: 184: }
 14322                           ;mpc_bdm.c: 186: LATCbits.LATC5=0;
 14323  12C1  0022               	movlb	2	; select bank2
 14324  12C2  128E               	bcf	14,5	;volatile
 14325                           
 14326                           ;mpc_bdm.c: 187: return res;
 14327  12C3  0021               	movlb	1	; select bank1
 14328  12C4  083E               	movf	bdm_clk_serial@res^(0+128),w
 14329  12C5  00A8               	movwf	?_bdm_clk_serial^(0+128)
 14330  12C6  083F               	movf	(bdm_clk_serial@res+1)^(0+128),w
 14331  12C7  00A9               	movwf	(?_bdm_clk_serial+1)^(0+128)
 14332  12C8  0D89               	rlf	9,f
 14333  12C9  3B89               	subwfb	9,f
 14334  12CA  0989               	comf	9,f
 14335  12CB  00AA               	movwf	(?_bdm_clk_serial+2)^(0+128)
 14336  12CC  00AB               	movwf	(?_bdm_clk_serial+3)^(0+128)
 14337  12CD  0008               	return
 14338  12CE                     __end_of_bdm_clk_serial:	
 14339  12CE                     __ptext45:	
 14340 ;; *************** function _bdm_clk_bit *****************
 14341 ;; Defined at:
 14342 ;;		line 61 in file "mpc_bdm.c"
 14343 ;; Parameters:    Size  Location     Type
 14344 ;;  b               4    0[BANK1 ] unsigned long 
 14345 ;; Auto vars:     Size  Location     Type
 14346 ;;  res             2    4[BANK1 ] int 
 14347 ;; Return value:  Size  Location     Type
 14348 ;;                  2    0[BANK1 ] int 
 14349 ;; Registers used:
 14350 ;;		wreg, status,2, status,0
 14351 ;; Tracked objects:
 14352 ;;		On entry : 1F/1
 14353 ;;		On exit  : 1F/1
 14354 ;;		Unchanged: 0/0
 14355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14356 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14357 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14359 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14360 ;;Total ram usage:        6 bytes
 14361 ;; Hardware stack levels used:    1
 14362 ;; Hardware stack levels required when called:    8
 14363 ;; This function calls:
 14364 ;;		Nothing
 14365 ;; This function is called by:
 14366 ;;		_bdm_clk_serial
 14367 ;; This function uses a non-reentrant model
 14368 ;;
 14369                           
 14370                           
 14371                           ;psect for function _bdm_clk_bit
 14372  12CE                     _bdm_clk_bit:	
 14373                           
 14374                           ;mpc_bdm.c: 63: int res = 0;
 14375                           
 14376                           ;incstack = 0
 14377                           ; Regs used in _bdm_clk_bit: [wreg+status,2+status,0]
 14378  12CE  01A4               	clrf	bdm_clk_bit@res^(0+128)
 14379  12CF  01A5               	clrf	(bdm_clk_bit@res+1)^(0+128)
 14380                           
 14381                           ;mpc_bdm.c: 64: if( PORTAbits.RA5 )
 14382  12D0  0020               	movlb	0	; select bank0
 14383  12D1  1E8C               	btfss	12,5	;volatile
 14384  12D2  2AD7               	goto	l3603
 14385                           
 14386                           ;mpc_bdm.c: 65: res = 1;
 14387  12D3  0021               	movlb	1	; select bank1
 14388  12D4  01A4               	clrf	bdm_clk_bit@res^(0+128)
 14389  12D5  0AA4               	incf	bdm_clk_bit@res^(0+128),f
 14390  12D6  01A5               	clrf	(bdm_clk_bit@res+1)^(0+128)
 14391  12D7                     l3603:	
 14392                           
 14393                           ;mpc_bdm.c: 67: if (b)
 14394  12D7  0021               	movlb	1	; select bank1
 14395  12D8  0823               	movf	(bdm_clk_bit@b+3)^(0+128),w
 14396  12D9  0422               	iorwf	(bdm_clk_bit@b+2)^(0+128),w
 14397  12DA  0421               	iorwf	(bdm_clk_bit@b+1)^(0+128),w
 14398  12DB  0420               	iorwf	bdm_clk_bit@b^(0+128),w
 14399  12DC  1903               	skipnz
 14400  12DD  2AE1               	goto	l676
 14401                           
 14402                           ;mpc_bdm.c: 68: {
 14403                           ;mpc_bdm.c: 69: LATCbits.LATC5=1;
 14404  12DE  0022               	movlb	2	; select bank2
 14405  12DF  168E               	bsf	14,5	;volatile
 14406                           
 14407                           ;mpc_bdm.c: 71: }
 14408  12E0  2AE3               	goto	l677
 14409  12E1                     l676:	
 14410                           
 14411                           ;mpc_bdm.c: 72: else
 14412                           ;mpc_bdm.c: 73: {
 14413                           ;mpc_bdm.c: 74: LATCbits.LATC5=0;
 14414  12E1  0022               	movlb	2	; select bank2
 14415  12E2  128E               	bcf	14,5	;volatile
 14416  12E3                     l677:	
 14417                           
 14418                           ;mpc_bdm.c: 76: }
 14419                           ;mpc_bdm.c: 78: LATCbits.LATC4=1;
 14420  12E3  160E               	bsf	14,4	;volatile
 14421                           
 14422                           ;mpc_bdm.c: 80: LATCbits.LATC4=0;
 14423  12E4  120E               	bcf	14,4	;volatile
 14424                           
 14425                           ;mpc_bdm.c: 81: return res;
 14426  12E5  0021               	movlb	1	; select bank1
 14427  12E6  0825               	movf	(bdm_clk_bit@res+1)^(0+128),w
 14428  12E7  00A1               	movwf	(?_bdm_clk_bit+1)^(0+128)
 14429  12E8  0824               	movf	bdm_clk_bit@res^(0+128),w
 14430  12E9  00A0               	movwf	?_bdm_clk_bit^(0+128)
 14431  12EA  0008               	return
 14432  12EB                     __end_of_bdm_clk_bit:	
 14433  12EB                     __ptext44:	
 14434 ;; *************** function _bdm_wait_ready *****************
 14435 ;; Defined at:
 14436 ;;		line 86 in file "mpc_bdm.c"
 14437 ;; Parameters:    Size  Location     Type
 14438 ;;  timeout         2    0[BANK1 ] int 
 14439 ;; Auto vars:     Size  Location     Type
 14440 ;;		None
 14441 ;; Return value:  Size  Location     Type
 14442 ;;                  2    0[BANK1 ] int 
 14443 ;; Registers used:
 14444 ;;		None
 14445 ;; Tracked objects:
 14446 ;;		On entry : 1F/1
 14447 ;;		On exit  : 1F/0
 14448 ;;		Unchanged: 0/0
 14449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14450 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14453 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14454 ;;Total ram usage:        2 bytes
 14455 ;; Hardware stack levels used:    1
 14456 ;; Hardware stack levels required when called:    8
 14457 ;; This function calls:
 14458 ;;		Nothing
 14459 ;; This function is called by:
 14460 ;;		_bdm_reset
 14461 ;;		_bdm_clk_serial
 14462 ;; This function uses a non-reentrant model
 14463 ;;
 14464                           
 14465                           
 14466                           ;psect for function _bdm_wait_ready
 14467  12EB                     _bdm_wait_ready:	
 14468  12EB                     l681:	
 14469                           ;mpc_bdm.c: 90: while( PORTAbits.RA5 )
 14470                           
 14471                           ;incstack = 0
 14472                           ; Regs used in _bdm_wait_ready: []
 14473                           
 14474  12EB  0020               	movlb	0	; select bank0
 14475  12EC  1E8C               	btfss	12,5	;volatile
 14476  12ED  0008               	return
 14477                           
 14478                           ;mpc_bdm.c: 91: {
 14479                           ;mpc_bdm.c: 93: LATCbits.LATC4=1;
 14480  12EE  0022               	movlb	2	; select bank2
 14481  12EF  160E               	bsf	14,4	;volatile
 14482                           
 14483                           ;mpc_bdm.c: 95: LATCbits.LATC4=0;
 14484  12F0  120E               	bcf	14,4	;volatile
 14485  12F1  2AEB               	goto	l681
 14486  12F2                     __end_of_bdm_wait_ready:	
 14487  12F2                     __ptext43:	
 14488 ;; *************** function _memset *****************
 14489 ;; Defined at:
 14490 ;;		line 8 in file "/Applications/microchip/xc8/v1.33old/sources/common/memset.c"
 14491 ;; Parameters:    Size  Location     Type
 14492 ;;  p1              2    0[BANK1 ] PTR void 
 14493 ;;		 -> bdm_interrupt@out(5), bdm_resume@out(5), bdm_set_data@out(5), bdm_get_data@out(5), 
 14494 ;;		 -> bdm_set_spr@out(5), bdm_get_spr2@out(5), bdm_get_spr@out(5), bdm_set_gpr@out(5), 
 14495 ;;		 -> bdm_get_gpr@out(5), bdm_nop@out(5), UEP0(1), bds(24), 
 14496 ;;  c               2    2[BANK1 ] int 
 14497 ;;  n               2    4[BANK1 ] unsigned int 
 14498 ;; Auto vars:     Size  Location     Type
 14499 ;;  p               2    6[BANK1 ] PTR unsigned char 
 14500 ;;		 -> bdm_interrupt@out(5), bdm_resume@out(5), bdm_set_data@out(5), bdm_get_data@out(5), 
 14501 ;;		 -> bdm_set_spr@out(5), bdm_get_spr2@out(5), bdm_get_spr@out(5), bdm_set_gpr@out(5), 
 14502 ;;		 -> bdm_get_gpr@out(5), bdm_nop@out(5), UEP0(1), bds(24), 
 14503 ;; Return value:  Size  Location     Type
 14504 ;;                  2    0[BANK1 ] PTR void 
 14505 ;; Registers used:
 14506 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14507 ;; Tracked objects:
 14508 ;;		On entry : 1F/1
 14509 ;;		On exit  : 1F/1
 14510 ;;		Unchanged: 0/0
 14511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14512 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14513 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14515 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14516 ;;Total ram usage:        8 bytes
 14517 ;; Hardware stack levels used:    1
 14518 ;; Hardware stack levels required when called:    8
 14519 ;; This function calls:
 14520 ;;		Nothing
 14521 ;; This function is called by:
 14522 ;;		_init_endpoints
 14523 ;;		_usb_init
 14524 ;;		_bdm_clk_serial
 14525 ;; This function uses a non-reentrant model
 14526 ;;
 14527                           
 14528                           
 14529                           ;psect for function _memset
 14530  12F2                     _memset:	
 14531                           
 14532                           ;incstack = 0
 14533                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 14534  12F2  0821               	movf	(memset@p1+1)^(0+128),w
 14535  12F3  00A7               	movwf	(memset@p+1)^(0+128)
 14536  12F4  0820               	movf	memset@p1^(0+128),w
 14537  12F5  00A6               	movwf	memset@p^(0+128)
 14538  12F6                     l3593:	
 14539  12F6  3001               	movlw	1
 14540  12F7  02A4               	subwf	memset@n^(0+128),f
 14541  12F8  3000               	movlw	0
 14542  12F9  3BA5               	subwfb	(memset@n+1)^(0+128),f
 14543  12FA  0A24               	incf	memset@n^(0+128),w
 14544  12FB  1903               	skipnz
 14545  12FC  0A25               	incf	(memset@n+1)^(0+128),w
 14546  12FD  1903               	btfsc	3,2
 14547  12FE  0008               	return
 14548  12FF  0826               	movf	memset@p^(0+128),w
 14549  1300  0086               	movwf	6
 14550  1301  0827               	movf	(memset@p+1)^(0+128),w
 14551  1302  0087               	movwf	7
 14552  1303  0822               	movf	memset@c^(0+128),w
 14553  1304  0081               	movwf	1
 14554  1305  0AA6               	incf	memset@p^(0+128),f
 14555  1306  1903               	skipnz
 14556  1307  0AA7               	incf	(memset@p+1)^(0+128),f
 14557  1308  2AF6               	goto	l3593
 14558  1309                     __end_of_memset:	
 14559  1309                     __ptext36:	
 14560 ;; *************** function _bdm_get_gpr *****************
 14561 ;; Defined at:
 14562 ;;		line 205 in file "mpc_bdm.c"
 14563 ;; Parameters:    Size  Location     Type
 14564 ;;  reg_nr          4   36[BANK1 ] unsigned long 
 14565 ;; Auto vars:     Size  Location     Type
 14566 ;;  out             5    5[BANK3 ] struct bdm_out_s
 14567 ;;  in              5    0[BANK3 ] struct bdm_in_s
 14568 ;; Return value:  Size  Location     Type
 14569 ;;                  4   36[BANK1 ] long 
 14570 ;; Registers used:
 14571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14572 ;; Tracked objects:
 14573 ;;		On entry : 1F/1
 14574 ;;		On exit  : 1F/1
 14575 ;;		Unchanged: 0/0
 14576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14577 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14578 ;;      Locals:         0       0       0       0      10       0       0       0       0       0       0       0       
      +0       0
 14579 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14580 ;;      Totals:         0       0       8       0      10       0       0       0       0       0       0       0       
      +0       0
 14581 ;;Total ram usage:       18 bytes
 14582 ;; Hardware stack levels used:    1
 14583 ;; Hardware stack levels required when called:   10
 14584 ;; This function calls:
 14585 ;;		_bdm_clk_serial
 14586 ;; This function is called by:
 14587 ;;		_bdm_save_regs
 14588 ;;		_bdm_get_spr
 14589 ;;		_bdm_get_data
 14590 ;;		_gdb_process_command
 14591 ;; This function uses a non-reentrant model
 14592 ;;
 14593                           
 14594                           
 14595                           ;psect for function _bdm_get_gpr
 14596  1309                     _bdm_get_gpr:	
 14597                           
 14598                           ;mpc_bdm.c: 207: bdm_in_t in;
 14599                           ;mpc_bdm.c: 208: bdm_out_t out;
 14600                           ;mpc_bdm.c: 210: reg_nr &= ~0x2000;
 14601                           
 14602                           ;incstack = 0
 14603                           ; Regs used in _bdm_get_gpr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14604  1309  30FF               	movlw	255
 14605  130A  05C4               	andwf	bdm_get_gpr@reg_nr^(0+128),f
 14606  130B  30DF               	movlw	223
 14607  130C  05C5               	andwf	(bdm_get_gpr@reg_nr+1)^(0+128),f
 14608  130D  30FF               	movlw	255
 14609  130E  05C6               	andwf	(bdm_get_gpr@reg_nr+2)^(0+128),f
 14610  130F  05C7               	andwf	(bdm_get_gpr@reg_nr+3)^(0+128),f
 14611                           
 14612                           ;mpc_bdm.c: 212: in.prefix = 0x0;
 14613  1310  30FC               	movlw	-4
 14614  1311  0023               	movlb	3	; select bank3
 14615  1312  05CB               	andwf	bdm_get_gpr@in^(0+384),f
 14616                           
 14617                           ;mpc_bdm.c: 213: in.data = 0;
 14618  1313  01CC               	clrf	(bdm_get_gpr@in^(0+384)+1)
 14619  1314  01CD               	clrf	((bdm_get_gpr@in+1)^(0+384)+1)
 14620  1315  01CE               	clrf	((bdm_get_gpr@in+2)^(0+384)+1)
 14621  1316  01CF               	clrf	((bdm_get_gpr@in+3)^(0+384)+1)
 14622                           
 14623                           ;mpc_bdm.c: 215: in.data = 0x7c169ba6 + ( reg_nr << 21 );
 14624  1317  0021               	movlb	1	; select bank1
 14625  1318  0844               	movf	bdm_get_gpr@reg_nr^(0+128),w
 14626  1319  00C8               	movwf	??_bdm_get_gpr^(0+128)
 14627  131A  0845               	movf	(bdm_get_gpr@reg_nr+1)^(0+128),w
 14628  131B  00C9               	movwf	(??_bdm_get_gpr^(0+128)+1)
 14629  131C  0846               	movf	(bdm_get_gpr@reg_nr+2)^(0+128),w
 14630  131D  00CA               	movwf	(??_bdm_get_gpr^(0+128)+2)
 14631  131E  0847               	movf	(bdm_get_gpr@reg_nr+3)^(0+128),w
 14632  131F  00CB               	movwf	(??_bdm_get_gpr^(0+128)+3)
 14633  1320  3015               	movlw	21
 14634  1321                     u2755:	
 14635  1321  35C8               	lslf	??_bdm_get_gpr^(0+128),f
 14636  1322  0DC9               	rlf	(??_bdm_get_gpr^(0+128)+1),f
 14637  1323  0DCA               	rlf	(??_bdm_get_gpr^(0+128)+2),f
 14638  1324  0DCB               	rlf	(??_bdm_get_gpr^(0+128)+3),f
 14639  1325  0B89               	decfsz	9,f
 14640  1326  2B21               	goto	u2755
 14641  1327  30A6               	movlw	166
 14642  1328  0748               	addwf	??_bdm_get_gpr^(0+128),w
 14643  1329  0023               	movlb	3	; select bank3
 14644  132A  00CC               	movwf	(bdm_get_gpr@in^(0+384)+1)
 14645  132B  309B               	movlw	155
 14646  132C  0021               	movlb	1	; select bank1
 14647  132D  3D49               	addwfc	(??_bdm_get_gpr+1)^(0+128),w
 14648  132E  0023               	movlb	3	; select bank3
 14649  132F  00CD               	movwf	((bdm_get_gpr@in+1)^(0+384)+1)
 14650  1330  3016               	movlw	22
 14651  1331  0021               	movlb	1	; select bank1
 14652  1332  3D4A               	addwfc	(??_bdm_get_gpr+2)^(0+128),w
 14653  1333  0023               	movlb	3	; select bank3
 14654  1334  00CE               	movwf	((bdm_get_gpr@in+2)^(0+384)+1)
 14655  1335  307C               	movlw	124
 14656  1336  0021               	movlb	1	; select bank1
 14657  1337  3D4B               	addwfc	(??_bdm_get_gpr+3)^(0+128),w
 14658  1338  0023               	movlb	3	; select bank3
 14659  1339  00CF               	movwf	((bdm_get_gpr@in+3)^(0+384)+1)
 14660                           
 14661                           ;mpc_bdm.c: 216: if( bdm_clk_serial( &in, &out ) < 0 ){
 14662  133A  30CB               	movlw	low bdm_get_gpr@in
 14663  133B  23EC  3190         	fcall	PL397	;call to abstracted procedure
 14664  133D  21D6  3190         	fcall	_bdm_clk_serial
 14665  133F  1FAB               	btfss	(?_bdm_clk_serial+3)^(0+128),7
 14666  1340  2B4A               	goto	l3711
 14667  1341                     l3707:	
 14668                           
 14669                           ;mpc_bdm.c: 217: return 0xDEADBEEF;
 14670  1341  30DE               	movlw	222
 14671  1342  00C7               	movwf	(?_bdm_get_gpr+3)^(0+128)
 14672  1343  30AD               	movlw	173
 14673  1344  00C6               	movwf	(?_bdm_get_gpr+2)^(0+128)
 14674  1345  30BE               	movlw	190
 14675  1346  00C5               	movwf	(?_bdm_get_gpr+1)^(0+128)
 14676  1347  30EF               	movlw	239
 14677  1348  00C4               	movwf	?_bdm_get_gpr^(0+128)
 14678  1349  0008               	return
 14679  134A                     l3711:	
 14680                           
 14681                           ;mpc_bdm.c: 218: }
 14682                           ;mpc_bdm.c: 220: in.prefix = 0x0;
 14683  134A  30FC               	movlw	-4
 14684  134B  0023               	movlb	3	; select bank3
 14685  134C  05CB               	andwf	bdm_get_gpr@in^(0+384),f
 14686                           
 14687                           ;mpc_bdm.c: 221: in.data = 0x60000000;
 14688  134D  3060               	movlw	96
 14689  134E  00CF               	movwf	((bdm_get_gpr@in+3)^(0+384)+1)
 14690  134F  30CB               	movlw	low bdm_get_gpr@in
 14691  1350  01CE               	clrf	((bdm_get_gpr@in+2)^(0+384)+1)
 14692  1351  01CD               	clrf	((bdm_get_gpr@in+1)^(0+384)+1)
 14693  1352  01CC               	clrf	(bdm_get_gpr@in^(0+384)+1)
 14694                           
 14695                           ;mpc_bdm.c: 224: if( bdm_clk_serial( &in, &out ) < 0 ){
 14696  1353  23EC  3190         	fcall	PL397	;call to abstracted procedure
 14697  1355  21D6  3190         	fcall	_bdm_clk_serial
 14698  1357  1BAB               	btfsc	(?_bdm_clk_serial+3)^(0+128),7
 14699  1358  2B41               	goto	l3707
 14700                           
 14701                           ;mpc_bdm.c: 226: }
 14702                           ;mpc_bdm.c: 227: return out.data;
 14703  1359  3001               	movlw	1
 14704  135A  3ED0               	addlw	bdm_get_gpr@out& (0+255)
 14705  135B  0086               	movwf	6
 14706  135C  3001               	movlw	1	; select bank3/4
 14707  135D  0087               	movwf	7
 14708  135E  3F40               	moviw [0]fsr1
 14709  135F  00C4               	movwf	?_bdm_get_gpr^(0+128)
 14710  1360  3F41               	moviw [1]fsr1
 14711  1361  00C5               	movwf	(?_bdm_get_gpr+1)^(0+128)
 14712  1362  3F42               	moviw [2]fsr1
 14713  1363  00C6               	movwf	(?_bdm_get_gpr+2)^(0+128)
 14714  1364  3F43               	moviw [3]fsr1
 14715  1365  00C7               	movwf	(?_bdm_get_gpr+3)^(0+128)
 14716  1366  0008               	return
 14717  1367                     __end_of_bdm_get_gpr:	
 14718  1367                     PL351:	
 14719  1367  0820               	movf	?_bdm_clk_bit^(0+128),w
 14720  1368  00AC               	movwf	??_bdm_clk_serial^(0+128)
 14721  1369  0821               	movf	(?_bdm_clk_bit+1)^(0+128),w
 14722  136A  00AD               	movwf	(??_bdm_clk_serial^(0+128)+1)
 14723  136B  3000               	movlw	0
 14724  136C  1BAD               	btfsc	(??_bdm_clk_serial^(0+128)+1),7
 14725  136D  30FF               	movlw	255
 14726  136E  00AE               	movwf	(??_bdm_clk_serial^(0+128)+2)
 14727  136F  00AF               	movwf	(??_bdm_clk_serial^(0+128)+3)
 14728  1370  082A               	movf	bdm_clk_serial@out^(0+128),w
 14729  1371  0086               	movwf	6
 14730  1372  082B               	movf	(bdm_clk_serial@out+1)^(0+128),w
 14731  1373  0087               	movwf	7
 14732  1374  3141               	addfsr 1,1
 14733  1375  082C               	movf	??_bdm_clk_serial^(0+128),w
 14734  1376  0481               	iorwf	1,f
 14735  1377  3141               	addfsr 1,1
 14736  1378  082D               	movf	(??_bdm_clk_serial+1)^(0+128),w
 14737  1379  0481               	iorwf	1,f
 14738  137A  3141               	addfsr 1,1
 14739  137B  082E               	movf	(??_bdm_clk_serial+2)^(0+128),w
 14740  137C  0481               	iorwf	1,f
 14741  137D  3141               	addfsr 1,1
 14742  137E  082F               	movf	(??_bdm_clk_serial+3)^(0+128),w
 14743  137F  0481               	iorwf	1,f
 14744  1380  0008               	return
 14745  1381                     __end_ofPL351:	
 14746  1381                     PL353:	
 14747  1381  01D6               	clrf	(bdm_set_spr@reg+1)^(0+384)
 14748  1382  01D7               	clrf	(bdm_set_spr@reg+2)^(0+384)
 14749  1383  01D8               	clrf	(bdm_set_spr@reg+3)^(0+384)
 14750  1384  0024               	movlb	4	; select bank4
 14751  1385  0839               	movf	(bdm_update_breakpoints@reg+3)^(0+512),w
 14752  1386  0023               	movlb	3	; select bank3
 14753  1387  00DC               	movwf	(bdm_set_spr@value+3)^(0+384)
 14754  1388  0024               	movlb	4	; select bank4
 14755  1389  0838               	movf	(bdm_update_breakpoints@reg+2)^(0+512),w
 14756  138A  0023               	movlb	3	; select bank3
 14757  138B  00DB               	movwf	(bdm_set_spr@value+2)^(0+384)
 14758  138C  0024               	movlb	4	; select bank4
 14759  138D  0837               	movf	(bdm_update_breakpoints@reg+1)^(0+512),w
 14760  138E  0023               	movlb	3	; select bank3
 14761  138F  00DA               	movwf	(bdm_set_spr@value+1)^(0+384)
 14762  1390  0024               	movlb	4	; select bank4
 14763  1391  0836               	movf	bdm_update_breakpoints@reg^(0+512),w
 14764  1392  0023               	movlb	3	; select bank3
 14765  1393  00D9               	movwf	bdm_set_spr@value^(0+384)
 14766  1394  0008               	return
 14767  1395                     __end_ofPL353:	
 14768  1395                     PL357:	
 14769  1395  0858               	movf	(?_bdm_get_spr+3)^(0+384),w
 14770  1396  0024               	movlb	4	; select bank4
 14771  1397  00B9               	movwf	(bdm_update_breakpoints@reg+3)^(0+512)
 14772  1398  0023               	movlb	3	; select bank3
 14773  1399  0857               	movf	(?_bdm_get_spr+2)^(0+384),w
 14774  139A  0024               	movlb	4	; select bank4
 14775  139B  00B8               	movwf	(bdm_update_breakpoints@reg+2)^(0+512)
 14776  139C  0023               	movlb	3	; select bank3
 14777  139D  0856               	movf	(?_bdm_get_spr+1)^(0+384),w
 14778  139E  0024               	movlb	4	; select bank4
 14779  139F  00B7               	movwf	(bdm_update_breakpoints@reg+1)^(0+512)
 14780  13A0  0023               	movlb	3	; select bank3
 14781  13A1  0855               	movf	?_bdm_get_spr^(0+384),w
 14782  13A2  0024               	movlb	4	; select bank4
 14783  13A3  00B6               	movwf	bdm_update_breakpoints@reg^(0+512)
 14784  13A4  0008               	return
 14785  13A5                     __end_ofPL357:	
 14786  13A5                     PL359:	
 14787  13A5  0024               	movlb	4	; select bank4
 14788  13A6  00AD               	movwf	((bdm_get_spr@in+3)^(0+512)+1)
 14789  13A7  0023               	movlb	3	; select bank3
 14790  13A8  085B               	movf	(??_bdm_get_spr+2)^(0+384),w
 14791  13A9  0024               	movlb	4	; select bank4
 14792  13AA  00AC               	movwf	((bdm_get_spr@in+2)^(0+512)+1)
 14793  13AB  0023               	movlb	3	; select bank3
 14794  13AC  085A               	movf	(??_bdm_get_spr+1)^(0+384),w
 14795  13AD  0024               	movlb	4	; select bank4
 14796  13AE  00AB               	movwf	((bdm_get_spr@in+1)^(0+512)+1)
 14797  13AF  0023               	movlb	3	; select bank3
 14798  13B0  0859               	movf	??_bdm_get_spr^(0+384),w
 14799  13B1  0024               	movlb	4	; select bank4
 14800  13B2  00AA               	movwf	(bdm_get_spr@in^(0+512)+1)
 14801  13B3  0008               	return
 14802  13B4                     __end_ofPL359:	
 14803  13B4                     PL375:	
 14804  13B4  0086               	movwf	6
 14805  13B5  082B               	movf	(bdm_clk_serial@out+1)^(0+128),w
 14806  13B6  0087               	movwf	7
 14807  13B7  3141               	addfsr 1,1
 14808  13B8  3581               	lslf	1,f
 14809  13B9  3141               	addfsr 1,1
 14810  13BA  0D81               	rlf	1,f
 14811  13BB  3141               	addfsr 1,1
 14812  13BC  0D81               	rlf	1,f
 14813  13BD  3141               	addfsr 1,1
 14814  13BE  0D81               	rlf	1,f
 14815  13BF  0008               	return
 14816  13C0                     __end_ofPL375:	
 14817  13C0                     PL379:	
 14818  13C0  0023               	movlb	3	; select bank3
 14819  13C1  00D5               	movwf	bdm_set_spr@reg^(0+384)
 14820  13C2  3000               	movlw	0
 14821  13C3  1803               	skipnc
 14822  13C4  3001               	movlw	1
 14823  13C5  00D6               	movwf	(bdm_set_spr@reg^(0+384)+1)
 14824  13C6  01D7               	clrf	(bdm_set_spr@reg^(0+384)+2)
 14825  13C7  1BD6               	btfsc	(bdm_set_spr@reg^(0+384)+1),7
 14826  13C8  03D7               	decf	(bdm_set_spr@reg+2)^(0+384),f
 14827  13C9  0857               	movf	(bdm_set_spr@reg^(0+384)+2),w
 14828  13CA  00D8               	movwf	(bdm_set_spr@reg+3)^(0+384)
 14829  13CB  0008               	return
 14830  13CC                     __end_ofPL379:	
 14831  13CC                     PL381:	
 14832  13CC  0087               	movwf	7
 14833  13CD  3F40               	moviw [0]fsr1
 14834  13CE  0023               	movlb	3	; select bank3
 14835  13CF  00D9               	movwf	bdm_set_spr@value^(0+384)
 14836  13D0  3F41               	moviw [1]fsr1
 14837  13D1  00DA               	movwf	(bdm_set_spr@value+1)^(0+384)
 14838  13D2  3F42               	moviw [2]fsr1
 14839  13D3  00DB               	movwf	(bdm_set_spr@value+2)^(0+384)
 14840  13D4  3F43               	moviw [3]fsr1
 14841  13D5  00DC               	movwf	(bdm_set_spr@value+3)^(0+384)
 14842  13D6  0008               	return
 14843  13D7                     __end_ofPL381:	
 14844  13D7                     PL389:	
 14845  13D7  0828               	movf	bdm_clk_serial@in^(0+128),w
 14846  13D8  0086               	movwf	6
 14847  13D9  0829               	movf	(bdm_clk_serial@in+1)^(0+128),w
 14848  13DA  0087               	movwf	7
 14849  13DB  0801               	movf	1,w
 14850  13DC  3903               	andlw	3
 14851  13DD  0008               	return
 14852  13DE                     __end_ofPL389:	
 14853  13DE                     PL391:	
 14854  13DE  0DAC               	rlf	??_bdm_clk_serial^(0+128),f
 14855  13DF  0801               	movf	1,w
 14856  13E0  062C               	xorwf	??_bdm_clk_serial^(0+128),w
 14857  13E1  39F9               	andlw	-7
 14858  13E2  062C               	xorwf	??_bdm_clk_serial^(0+128),w
 14859  13E3  0081               	movwf	1
 14860  13E4  0008               	return
 14861  13E5                     __end_ofPL391:	
 14862  13E5                     PL393:	
 14863  13E5  082A               	movf	bdm_clk_serial@out^(0+128),w
 14864  13E6  0086               	movwf	6
 14865  13E7  082B               	movf	(bdm_clk_serial@out+1)^(0+128),w
 14866  13E8  0087               	movwf	7
 14867  13E9  0C01               	rrf	1,w
 14868  13EA  3903               	andlw	3
 14869  13EB  0008               	return
 14870  13EC                     __end_ofPL393:	
 14871  13EC                     PL397:	
 14872  13EC  0021               	movlb	1	; select bank1
 14873  13ED  00A8               	movwf	bdm_clk_serial@in^(0+128)
 14874  13EE  3001               	movlw	high bdm_get_gpr@in
 14875  13EF  00A9               	movwf	(bdm_clk_serial@in+1)^(0+128)
 14876  13F0  30D0               	movlw	low bdm_get_gpr@out
 14877  13F1  00AA               	movwf	bdm_clk_serial@out^(0+128)
 14878  13F2  3001               	movlw	high bdm_get_gpr@out
 14879  13F3  00AB               	movwf	(bdm_clk_serial@out+1)^(0+128)
 14880  13F4  0008               	return
 14881  13F5                     __end_ofPL397:	
 14882  13F5                     PL409:	
 14883  13F5  0023               	movlb	3	; select bank3
 14884  13F6  00D5               	movwf	bdm_get_spr@reg^(0+384)
 14885  13F7  01D6               	clrf	(bdm_get_spr@reg+1)^(0+384)
 14886  13F8  01D7               	clrf	(bdm_get_spr@reg+2)^(0+384)
 14887  13F9  01D8               	clrf	(bdm_get_spr@reg+3)^(0+384)
 14888  13FA  0008               	return
 14889  13FB                     __end_ofPL409:	
 14890  13FB                     PL413:	
 14891  13FB  01C4               	clrf	bdm_get_gpr@reg_nr^(0+128)
 14892  13FC  01C5               	clrf	(bdm_get_gpr@reg_nr+1)^(0+128)
 14893  13FD  01C6               	clrf	(bdm_get_gpr@reg_nr+2)^(0+128)
 14894  13FE  01C7               	clrf	(bdm_get_gpr@reg_nr+3)^(0+128)
 14895  13FF  0008               	return
 14896  1400                     __end_ofPL413:	
 14897  1400                     PL417:	
 14898  1400  00A0               	movwf	bdm_clk_bit@b^(0+128)
 14899  1401  01A1               	clrf	(bdm_clk_bit@b+1)^(0+128)
 14900  1402  01A2               	clrf	(bdm_clk_bit@b+2)^(0+128)
 14901  1403  01A3               	clrf	(bdm_clk_bit@b+3)^(0+128)
 14902  1404  0008               	return
 14903  1405                     __end_ofPL417:	
 14904                           
 14905                           	psect	text30
 14906  1A83                     __ptext30:	
 14907 ;; *************** function _bdm_continue_single_step *****************
 14908 ;; Defined at:
 14909 ;;		line 424 in file "mpc_bdm.c"
 14910 ;; Parameters:    Size  Location     Type
 14911 ;;		None
 14912 ;; Auto vars:     Size  Location     Type
 14913 ;;  srr1            4   28[BANK4 ] unsigned long 
 14914 ;;  der             4   24[BANK4 ] unsigned long 
 14915 ;; Return value:  Size  Location     Type
 14916 ;;                  2  753[COMMON] int 
 14917 ;; Registers used:
 14918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14919 ;; Tracked objects:
 14920 ;;		On entry : 1F/4
 14921 ;;		On exit  : 1F/3
 14922 ;;		Unchanged: 0/0
 14923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14925 ;;      Locals:         0       0       0       0       0       8       0       0       0       0       0       0       
      +0       0
 14926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14927 ;;      Totals:         0       0       0       0       0       8       0       0       0       0       0       0       
      +0       0
 14928 ;;Total ram usage:        8 bytes
 14929 ;; Hardware stack levels used:    1
 14930 ;; Hardware stack levels required when called:   14
 14931 ;; This function calls:
 14932 ;;		_bdm_get_spr
 14933 ;;		_bdm_resume
 14934 ;;		_bdm_set_spr
 14935 ;; This function is called by:
 14936 ;;		_gdb_process_command
 14937 ;; This function uses a non-reentrant model
 14938 ;;
 14939                           
 14940                           
 14941                           ;psect for function _bdm_continue_single_step
 14942  1A83                     _bdm_continue_single_step:	
 14943                           
 14944                           ;mpc_bdm.c: 426: unsigned long der;
 14945                           ;mpc_bdm.c: 427: unsigned long srr1;
 14946                           ;mpc_bdm.c: 430: der = bdm_get_spr( 149 );
 14947                           
 14948                           ;incstack = 0
 14949                           ; Regs used in _bdm_continue_single_step: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14950  1A83  3095               	movlw	149
 14951  1A84  0023               	movlb	3	; select bank3
 14952  1A85  00D5               	movwf	bdm_get_spr@reg^(0+384)
 14953  1A86  01D6               	clrf	(bdm_get_spr@reg+1)^(0+384)
 14954  1A87  01D7               	clrf	(bdm_get_spr@reg+2)^(0+384)
 14955  1A88  01D8               	clrf	(bdm_get_spr@reg+3)^(0+384)
 14956  1A89  3191  213F  319A   	fcall	_bdm_get_spr
 14957  1A8C  0858               	movf	(?_bdm_get_spr+3)^(0+384),w
 14958  1A8D  0024               	movlb	4	; select bank4
 14959  1A8E  00BB               	movwf	(bdm_continue_single_step@der+3)^(0+512)
 14960  1A8F  0023               	movlb	3	; select bank3
 14961  1A90  0857               	movf	(?_bdm_get_spr+2)^(0+384),w
 14962  1A91  0024               	movlb	4	; select bank4
 14963  1A92  00BA               	movwf	(bdm_continue_single_step@der+2)^(0+512)
 14964  1A93  0023               	movlb	3	; select bank3
 14965  1A94  0856               	movf	(?_bdm_get_spr+1)^(0+384),w
 14966  1A95  0024               	movlb	4	; select bank4
 14967  1A96  00B9               	movwf	(bdm_continue_single_step@der+1)^(0+512)
 14968  1A97  0023               	movlb	3	; select bank3
 14969  1A98  0855               	movf	?_bdm_get_spr^(0+384),w
 14970  1A99  0024               	movlb	4	; select bank4
 14971  1A9A  00B8               	movwf	bdm_continue_single_step@der^(0+512)
 14972                           
 14973                           ;mpc_bdm.c: 431: bdm_set_spr( 149, der | ( 1 << (32-1-(14)) ) );
 14974  1A9B  083B               	movf	(bdm_continue_single_step@der+3)^(0+512),w
 14975  1A9C  0023               	movlb	3	; select bank3
 14976  1A9D  00DC               	movwf	(bdm_set_spr@value+3)^(0+384)
 14977  1A9E  0024               	movlb	4	; select bank4
 14978  1A9F  083A               	movf	(bdm_continue_single_step@der+2)^(0+512),w
 14979  1AA0  0023               	movlb	3	; select bank3
 14980  1AA1  00DB               	movwf	(bdm_set_spr@value+2)^(0+384)
 14981  1AA2  0024               	movlb	4	; select bank4
 14982  1AA3  0839               	movf	(bdm_continue_single_step@der+1)^(0+512),w
 14983  1AA4  0023               	movlb	3	; select bank3
 14984  1AA5  00DA               	movwf	(bdm_set_spr@value+1)^(0+384)
 14985  1AA6  0024               	movlb	4	; select bank4
 14986  1AA7  0838               	movf	bdm_continue_single_step@der^(0+512),w
 14987  1AA8  0023               	movlb	3	; select bank3
 14988  1AA9  00D9               	movwf	bdm_set_spr@value^(0+384)
 14989  1AAA  3095               	movlw	149
 14990  1AAB  1459               	bsf	bdm_set_spr@value^(0+384),0
 14991  1AAC  00D5               	movwf	bdm_set_spr@reg^(0+384)
 14992  1AAD  01D6               	clrf	(bdm_set_spr@reg+1)^(0+384)
 14993  1AAE  01D7               	clrf	(bdm_set_spr@reg+2)^(0+384)
 14994  1AAF  01D8               	clrf	(bdm_set_spr@reg+3)^(0+384)
 14995  1AB0  3187  2701  319A   	fcall	_bdm_set_spr
 14996                           
 14997                           ;mpc_bdm.c: 434: srr1 = bdm_get_spr( 27 );
 14998  1AB3  301B               	movlw	27
 14999  1AB4  0023               	movlb	3	; select bank3
 15000  1AB5  00D5               	movwf	bdm_get_spr@reg^(0+384)
 15001  1AB6  01D6               	clrf	(bdm_get_spr@reg+1)^(0+384)
 15002  1AB7  01D7               	clrf	(bdm_get_spr@reg+2)^(0+384)
 15003  1AB8  01D8               	clrf	(bdm_get_spr@reg+3)^(0+384)
 15004  1AB9  3191  213F  319A   	fcall	_bdm_get_spr
 15005  1ABC  0858               	movf	(?_bdm_get_spr+3)^(0+384),w
 15006  1ABD  0024               	movlb	4	; select bank4
 15007  1ABE  00BF               	movwf	(bdm_continue_single_step@srr1+3)^(0+512)
 15008  1ABF  0023               	movlb	3	; select bank3
 15009  1AC0  0857               	movf	(?_bdm_get_spr+2)^(0+384),w
 15010  1AC1  0024               	movlb	4	; select bank4
 15011  1AC2  00BE               	movwf	(bdm_continue_single_step@srr1+2)^(0+512)
 15012  1AC3  0023               	movlb	3	; select bank3
 15013  1AC4  0856               	movf	(?_bdm_get_spr+1)^(0+384),w
 15014  1AC5  0024               	movlb	4	; select bank4
 15015  1AC6  00BD               	movwf	(bdm_continue_single_step@srr1+1)^(0+512)
 15016  1AC7  0023               	movlb	3	; select bank3
 15017  1AC8  0855               	movf	?_bdm_get_spr^(0+384),w
 15018  1AC9  0024               	movlb	4	; select bank4
 15019  1ACA  00BC               	movwf	bdm_continue_single_step@srr1^(0+512)
 15020                           
 15021                           ;mpc_bdm.c: 435: srr1 &= ~ ( ( 1 << (32-1-(21)) ) | ( 1 << (32-1-(22)) ) );
 15022  1ACB  30FF               	movlw	255
 15023  1ACC  05BC               	andwf	bdm_continue_single_step@srr1^(0+512),f
 15024  1ACD  30F9               	movlw	249
 15025  1ACE  05BD               	andwf	(bdm_continue_single_step@srr1+1)^(0+512),f
 15026  1ACF  30FF               	movlw	255
 15027  1AD0  05BE               	andwf	(bdm_continue_single_step@srr1+2)^(0+512),f
 15028  1AD1  05BF               	andwf	(bdm_continue_single_step@srr1+3)^(0+512),f
 15029  1AD2  301B               	movlw	27
 15030                           
 15031                           ;mpc_bdm.c: 436: srr1 |= ( 1 << (32-1-(21)) );
 15032  1AD3  153D               	bsf	(bdm_continue_single_step@srr1^(0+512)+1),2
 15033                           
 15034                           ;mpc_bdm.c: 437: bdm_set_spr( 27, srr1 );
 15035  1AD4  0023               	movlb	3	; select bank3
 15036  1AD5  00D5               	movwf	bdm_set_spr@reg^(0+384)
 15037  1AD6  01D6               	clrf	(bdm_set_spr@reg+1)^(0+384)
 15038  1AD7  01D7               	clrf	(bdm_set_spr@reg+2)^(0+384)
 15039  1AD8  01D8               	clrf	(bdm_set_spr@reg+3)^(0+384)
 15040  1AD9  0024               	movlb	4	; select bank4
 15041  1ADA  083F               	movf	(bdm_continue_single_step@srr1+3)^(0+512),w
 15042  1ADB  0023               	movlb	3	; select bank3
 15043  1ADC  00DC               	movwf	(bdm_set_spr@value+3)^(0+384)
 15044  1ADD  0024               	movlb	4	; select bank4
 15045  1ADE  083E               	movf	(bdm_continue_single_step@srr1+2)^(0+512),w
 15046  1ADF  0023               	movlb	3	; select bank3
 15047  1AE0  00DB               	movwf	(bdm_set_spr@value+2)^(0+384)
 15048  1AE1  0024               	movlb	4	; select bank4
 15049  1AE2  083D               	movf	(bdm_continue_single_step@srr1+1)^(0+512),w
 15050  1AE3  0023               	movlb	3	; select bank3
 15051  1AE4  00DA               	movwf	(bdm_set_spr@value+1)^(0+384)
 15052  1AE5  0024               	movlb	4	; select bank4
 15053  1AE6  083C               	movf	bdm_continue_single_step@srr1^(0+512),w
 15054  1AE7  0023               	movlb	3	; select bank3
 15055  1AE8  00D9               	movwf	bdm_set_spr@value^(0+384)
 15056  1AE9  3187  2701  319A   	fcall	_bdm_set_spr
 15057                           
 15058                           ;mpc_bdm.c: 439: return bdm_resume( );
 15059                           ;	Return value of _bdm_continue_single_step is never used
 15060  1AEC  2B5D               	ljmp	l4271
 15061  1AED                     __end_of_bdm_continue_single_step:	
 15062  1AED                     __ptext31:	
 15063 ;; *************** function _bdm_continue *****************
 15064 ;; Defined at:
 15065 ;;		line 406 in file "mpc_bdm.c"
 15066 ;; Parameters:    Size  Location     Type
 15067 ;;		None
 15068 ;; Auto vars:     Size  Location     Type
 15069 ;;  srr1            4   28[BANK4 ] unsigned long 
 15070 ;;  der             4   24[BANK4 ] unsigned long 
 15071 ;; Return value:  Size  Location     Type
 15072 ;;                  2  750[COMMON] int 
 15073 ;; Registers used:
 15074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15075 ;; Tracked objects:
 15076 ;;		On entry : 1F/4
 15077 ;;		On exit  : 1F/3
 15078 ;;		Unchanged: 0/0
 15079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15081 ;;      Locals:         0       0       0       0       0       8       0       0       0       0       0       0       
      +0       0
 15082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15083 ;;      Totals:         0       0       0       0       0       8       0       0       0       0       0       0       
      +0       0
 15084 ;;Total ram usage:        8 bytes
 15085 ;; Hardware stack levels used:    1
 15086 ;; Hardware stack levels required when called:   14
 15087 ;; This function calls:
 15088 ;;		_bdm_get_spr
 15089 ;;		_bdm_resume
 15090 ;;		_bdm_set_spr
 15091 ;; This function is called by:
 15092 ;;		_gdb_process_command
 15093 ;; This function uses a non-reentrant model
 15094 ;;
 15095                           
 15096                           
 15097                           ;psect for function _bdm_continue
 15098  1AED                     _bdm_continue:	
 15099                           
 15100                           ;mpc_bdm.c: 408: unsigned long der;
 15101                           ;mpc_bdm.c: 409: unsigned long srr1;
 15102                           ;mpc_bdm.c: 411: der = bdm_get_spr( 149 );
 15103                           
 15104                           ;incstack = 0
 15105                           ; Regs used in _bdm_continue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15106  1AED  3095               	movlw	149
 15107  1AEE  0023               	movlb	3	; select bank3
 15108  1AEF  00D5               	movwf	bdm_get_spr@reg^(0+384)
 15109  1AF0  01D6               	clrf	(bdm_get_spr@reg+1)^(0+384)
 15110  1AF1  01D7               	clrf	(bdm_get_spr@reg+2)^(0+384)
 15111  1AF2  01D8               	clrf	(bdm_get_spr@reg+3)^(0+384)
 15112  1AF3  3191  213F  319A   	fcall	_bdm_get_spr
 15113  1AF6  0858               	movf	(?_bdm_get_spr+3)^(0+384),w
 15114  1AF7  0024               	movlb	4	; select bank4
 15115  1AF8  00BB               	movwf	(bdm_continue@der+3)^(0+512)
 15116  1AF9  0023               	movlb	3	; select bank3
 15117  1AFA  0857               	movf	(?_bdm_get_spr+2)^(0+384),w
 15118  1AFB  0024               	movlb	4	; select bank4
 15119  1AFC  00BA               	movwf	(bdm_continue@der+2)^(0+512)
 15120  1AFD  0023               	movlb	3	; select bank3
 15121  1AFE  0856               	movf	(?_bdm_get_spr+1)^(0+384),w
 15122  1AFF  0024               	movlb	4	; select bank4
 15123  1B00  00B9               	movwf	(bdm_continue@der+1)^(0+512)
 15124  1B01  0023               	movlb	3	; select bank3
 15125  1B02  0855               	movf	?_bdm_get_spr^(0+384),w
 15126  1B03  0024               	movlb	4	; select bank4
 15127  1B04  00B8               	movwf	bdm_continue@der^(0+512)
 15128                           
 15129                           ;mpc_bdm.c: 412: der &= ~( 1 << (32-1-(14)) );
 15130  1B05  30FE               	movlw	254
 15131  1B06  05B8               	andwf	bdm_continue@der^(0+512),f
 15132  1B07  30FF               	movlw	255
 15133  1B08  05B9               	andwf	(bdm_continue@der+1)^(0+512),f
 15134  1B09  05BA               	andwf	(bdm_continue@der+2)^(0+512),f
 15135  1B0A  05BB               	andwf	(bdm_continue@der+3)^(0+512),f
 15136                           
 15137                           ;mpc_bdm.c: 413: bdm_set_spr( 149, der );
 15138  1B0B  3095               	movlw	149
 15139  1B0C  0023               	movlb	3	; select bank3
 15140  1B0D  00D5               	movwf	bdm_set_spr@reg^(0+384)
 15141  1B0E  01D6               	clrf	(bdm_set_spr@reg+1)^(0+384)
 15142  1B0F  01D7               	clrf	(bdm_set_spr@reg+2)^(0+384)
 15143  1B10  01D8               	clrf	(bdm_set_spr@reg+3)^(0+384)
 15144  1B11  0024               	movlb	4	; select bank4
 15145  1B12  083B               	movf	(bdm_continue@der+3)^(0+512),w
 15146  1B13  0023               	movlb	3	; select bank3
 15147  1B14  00DC               	movwf	(bdm_set_spr@value+3)^(0+384)
 15148  1B15  0024               	movlb	4	; select bank4
 15149  1B16  083A               	movf	(bdm_continue@der+2)^(0+512),w
 15150  1B17  0023               	movlb	3	; select bank3
 15151  1B18  00DB               	movwf	(bdm_set_spr@value+2)^(0+384)
 15152  1B19  0024               	movlb	4	; select bank4
 15153  1B1A  0839               	movf	(bdm_continue@der+1)^(0+512),w
 15154  1B1B  0023               	movlb	3	; select bank3
 15155  1B1C  00DA               	movwf	(bdm_set_spr@value+1)^(0+384)
 15156  1B1D  0024               	movlb	4	; select bank4
 15157  1B1E  0838               	movf	bdm_continue@der^(0+512),w
 15158  1B1F  0023               	movlb	3	; select bank3
 15159  1B20  00D9               	movwf	bdm_set_spr@value^(0+384)
 15160  1B21  3187  2701  319A   	fcall	_bdm_set_spr
 15161                           
 15162                           ;mpc_bdm.c: 416: srr1 = bdm_get_spr( 27 );
 15163  1B24  301B               	movlw	27
 15164  1B25  0023               	movlb	3	; select bank3
 15165  1B26  00D5               	movwf	bdm_get_spr@reg^(0+384)
 15166  1B27  01D6               	clrf	(bdm_get_spr@reg+1)^(0+384)
 15167  1B28  01D7               	clrf	(bdm_get_spr@reg+2)^(0+384)
 15168  1B29  01D8               	clrf	(bdm_get_spr@reg+3)^(0+384)
 15169  1B2A  3191  213F  319A   	fcall	_bdm_get_spr
 15170  1B2D  0858               	movf	(?_bdm_get_spr+3)^(0+384),w
 15171  1B2E  0024               	movlb	4	; select bank4
 15172  1B2F  00BF               	movwf	(bdm_continue@srr1+3)^(0+512)
 15173  1B30  0023               	movlb	3	; select bank3
 15174  1B31  0857               	movf	(?_bdm_get_spr+2)^(0+384),w
 15175  1B32  0024               	movlb	4	; select bank4
 15176  1B33  00BE               	movwf	(bdm_continue@srr1+2)^(0+512)
 15177  1B34  0023               	movlb	3	; select bank3
 15178  1B35  0856               	movf	(?_bdm_get_spr+1)^(0+384),w
 15179  1B36  0024               	movlb	4	; select bank4
 15180  1B37  00BD               	movwf	(bdm_continue@srr1+1)^(0+512)
 15181  1B38  0023               	movlb	3	; select bank3
 15182  1B39  0855               	movf	?_bdm_get_spr^(0+384),w
 15183  1B3A  0024               	movlb	4	; select bank4
 15184  1B3B  00BC               	movwf	bdm_continue@srr1^(0+512)
 15185                           
 15186                           ;mpc_bdm.c: 417: srr1 &= ~ ( ( 1 << (32-1-(21)) ) | ( 1 << (32-1-(22)) ) );
 15187  1B3C  30FF               	movlw	255
 15188  1B3D  05BC               	andwf	bdm_continue@srr1^(0+512),f
 15189  1B3E  30F9               	movlw	249
 15190  1B3F  05BD               	andwf	(bdm_continue@srr1+1)^(0+512),f
 15191  1B40  30FF               	movlw	255
 15192  1B41  05BE               	andwf	(bdm_continue@srr1+2)^(0+512),f
 15193  1B42  05BF               	andwf	(bdm_continue@srr1+3)^(0+512),f
 15194                           
 15195                           ;mpc_bdm.c: 419: bdm_set_spr( 27, srr1 );
 15196  1B43  301B               	movlw	27
 15197  1B44  0023               	movlb	3	; select bank3
 15198  1B45  00D5               	movwf	bdm_set_spr@reg^(0+384)
 15199  1B46  01D6               	clrf	(bdm_set_spr@reg+1)^(0+384)
 15200  1B47  01D7               	clrf	(bdm_set_spr@reg+2)^(0+384)
 15201  1B48  01D8               	clrf	(bdm_set_spr@reg+3)^(0+384)
 15202  1B49  0024               	movlb	4	; select bank4
 15203  1B4A  083F               	movf	(bdm_continue@srr1+3)^(0+512),w
 15204  1B4B  0023               	movlb	3	; select bank3
 15205  1B4C  00DC               	movwf	(bdm_set_spr@value+3)^(0+384)
 15206  1B4D  0024               	movlb	4	; select bank4
 15207  1B4E  083E               	movf	(bdm_continue@srr1+2)^(0+512),w
 15208  1B4F  0023               	movlb	3	; select bank3
 15209  1B50  00DB               	movwf	(bdm_set_spr@value+2)^(0+384)
 15210  1B51  0024               	movlb	4	; select bank4
 15211  1B52  083D               	movf	(bdm_continue@srr1+1)^(0+512),w
 15212  1B53  0023               	movlb	3	; select bank3
 15213  1B54  00DA               	movwf	(bdm_set_spr@value+1)^(0+384)
 15214  1B55  0024               	movlb	4	; select bank4
 15215  1B56  083C               	movf	bdm_continue@srr1^(0+512),w
 15216  1B57  0023               	movlb	3	; select bank3
 15217  1B58  00D9               	movwf	bdm_set_spr@value^(0+384)
 15218  1B59  3187  2701  319A   	fcall	_bdm_set_spr
 15219                           
 15220                           ;mpc_bdm.c: 421: return bdm_resume( );
 15221                           ;	Return value of _bdm_continue is never used
 15222  1B5C  2B5D               	ljmp	l4271
 15223  1B5D                     __end_of_bdm_continue:	
 15224  1B5D                     __ptext33:	
 15225 ;; *************** function _bdm_resume *****************
 15226 ;; Defined at:
 15227 ;;		line 442 in file "mpc_bdm.c"
 15228 ;; Parameters:    Size  Location     Type
 15229 ;;		None
 15230 ;; Auto vars:     Size  Location     Type
 15231 ;;  out             5   19[BANK4 ] struct bdm_out_s
 15232 ;;  in              5   14[BANK4 ] struct bdm_in_s
 15233 ;; Return value:  Size  Location     Type
 15234 ;;                  2   26[BANK3 ] int 
 15235 ;; Registers used:
 15236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15237 ;; Tracked objects:
 15238 ;;		On entry : 1F/1
 15239 ;;		On exit  : 1F/3
 15240 ;;		Unchanged: 0/0
 15241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15242 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 15243 ;;      Locals:         0       0       0       0       0      10       0       0       0       0       0       0       
      +0       0
 15244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15245 ;;      Totals:         0       0       0       0       2      10       0       0       0       0       0       0       
      +0       0
 15246 ;;Total ram usage:       12 bytes
 15247 ;; Hardware stack levels used:    1
 15248 ;; Hardware stack levels required when called:   13
 15249 ;; This function calls:
 15250 ;;		_bdm_clk_serial
 15251 ;;		_bdm_get_spr
 15252 ;; This function is called by:
 15253 ;;		_bdm_continue
 15254 ;;		_bdm_continue_single_step
 15255 ;; This function uses a non-reentrant model
 15256 ;;
 15257                           
 15258                           
 15259                           ;psect for function _bdm_resume
 15260  1B5D                     _bdm_resume:	
 15261  1B5D                     l4271:	
 15262                           ;incstack = 0
 15263                           ; Regs used in _bdm_resume: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15264                           
 15265                           
 15266                           ;mpc_bdm.c: 445: bdm_in_t in;
 15267                           ;mpc_bdm.c: 446: bdm_out_t out;
 15268                           ;mpc_bdm.c: 452: bdm_get_spr( 148);
 15269  1B5D  3094               	movlw	148
 15270  1B5E  0023               	movlb	3	; select bank3
 15271  1B5F  00D5               	movwf	bdm_get_spr@reg^(0+384)
 15272  1B60  01D6               	clrf	(bdm_get_spr@reg+1)^(0+384)
 15273  1B61  01D7               	clrf	(bdm_get_spr@reg+2)^(0+384)
 15274  1B62  01D8               	clrf	(bdm_get_spr@reg+3)^(0+384)
 15275  1B63  3191  213F  319A   	fcall	_bdm_get_spr
 15276                           
 15277                           ;mpc_bdm.c: 454: in.prefix = 0x0;
 15278  1B66  30FC               	movlw	-4
 15279  1B67  0024               	movlb	4	; select bank4
 15280  1B68  05AE               	andwf	bdm_resume@in^(0+512),f
 15281                           
 15282                           ;mpc_bdm.c: 455: in.data = 0x4c00012c;
 15283  1B69  304C               	movlw	76
 15284  1B6A  00B2               	movwf	((bdm_resume@in+3)^(0+512)+1)
 15285  1B6B  3001               	movlw	1
 15286  1B6C  01B1               	clrf	((bdm_resume@in+2)^(0+512)+1)
 15287  1B6D  00B0               	movwf	((bdm_resume@in+1)^(0+512)+1)
 15288  1B6E  302C               	movlw	44
 15289  1B6F  00AF               	movwf	(bdm_resume@in^(0+512)+1)
 15290                           
 15291                           ;mpc_bdm.c: 456: if( bdm_clk_serial( &in, &out ) < 0 )
 15292  1B70  302E               	movlw	low bdm_resume@in
 15293  1B71  0021               	movlb	1	; select bank1
 15294  1B72  00A8               	movwf	bdm_clk_serial@in^(0+128)
 15295  1B73  3002               	movlw	high bdm_resume@in
 15296  1B74  00A9               	movwf	(bdm_clk_serial@in+1)^(0+128)
 15297  1B75  3033               	movlw	low bdm_resume@out
 15298  1B76  00AA               	movwf	bdm_clk_serial@out^(0+128)
 15299  1B77  3002               	movlw	high bdm_resume@out
 15300  1B78  00AB               	movwf	(bdm_clk_serial@out+1)^(0+128)
 15301  1B79  3191  21D6  319A   	fcall	_bdm_clk_serial
 15302  1B7C  1FAB               	btfss	(?_bdm_clk_serial+3)^(0+128),7
 15303  1B7D  2B83               	goto	l4283
 15304  1B7E                     l4279:	
 15305                           
 15306                           ;mpc_bdm.c: 457: {
 15307                           ;mpc_bdm.c: 458: return -1;
 15308  1B7E  30FF               	movlw	255
 15309  1B7F  0023               	movlb	3	; select bank3
 15310  1B80  00E5               	movwf	?_bdm_resume^(0+384)
 15311  1B81  00E6               	movwf	(?_bdm_resume^(0+384)+1)
 15312  1B82  0008               	return
 15313  1B83                     l4283:	
 15314                           
 15315                           ;mpc_bdm.c: 459: }
 15316                           ;mpc_bdm.c: 462: in.prefix = 0x0;
 15317  1B83  30FC               	movlw	-4
 15318  1B84  0024               	movlb	4	; select bank4
 15319  1B85  05AE               	andwf	bdm_resume@in^(0+512),f
 15320                           
 15321                           ;mpc_bdm.c: 463: in.data = 0x4C000064;
 15322  1B86  304C               	movlw	76
 15323  1B87  00B2               	movwf	((bdm_resume@in+3)^(0+512)+1)
 15324  1B88  3064               	movlw	100
 15325  1B89  01B1               	clrf	((bdm_resume@in+2)^(0+512)+1)
 15326  1B8A  01B0               	clrf	((bdm_resume@in+1)^(0+512)+1)
 15327  1B8B  00AF               	movwf	(bdm_resume@in^(0+512)+1)
 15328                           
 15329                           ;mpc_bdm.c: 464: if( bdm_clk_serial( &in, &out ) < 0 )
 15330  1B8C  302E               	movlw	low bdm_resume@in
 15331  1B8D  0021               	movlb	1	; select bank1
 15332  1B8E  00A8               	movwf	bdm_clk_serial@in^(0+128)
 15333  1B8F  3002               	movlw	high bdm_resume@in
 15334  1B90  00A9               	movwf	(bdm_clk_serial@in+1)^(0+128)
 15335  1B91  3033               	movlw	low bdm_resume@out
 15336  1B92  00AA               	movwf	bdm_clk_serial@out^(0+128)
 15337  1B93  3002               	movlw	high bdm_resume@out
 15338  1B94  00AB               	movwf	(bdm_clk_serial@out+1)^(0+128)
 15339  1B95  3191  21D6  319A   	fcall	_bdm_clk_serial
 15340  1B98  1BAB               	btfsc	(?_bdm_clk_serial+3)^(0+128),7
 15341  1B99  2B7E               	goto	l4279
 15342                           
 15343                           ;mpc_bdm.c: 467: }
 15344                           ;mpc_bdm.c: 468: return 0;
 15345  1B9A  0023               	movlb	3	; select bank3
 15346  1B9B  01E5               	clrf	?_bdm_resume^(0+384)
 15347  1B9C  01E6               	clrf	(?_bdm_resume+1)^(0+384)
 15348  1B9D  0008               	return
 15349  1B9E                     __end_of_bdm_resume:	
 15350                           
 15351                           	psect	text39
 15352  0821                     __ptext39:	
 15353 ;; *************** function _gdb_ahex2bin *****************
 15354 ;; Defined at:
 15355 ;;		line 412 in file "gdb_stub.c"
 15356 ;; Parameters:    Size  Location     Type
 15357 ;;  MSB             1    wreg     unsigned char 
 15358 ;;  LSB             1    0[BANK1 ] unsigned char 
 15359 ;; Auto vars:     Size  Location     Type
 15360 ;;  MSB             1    2[BANK1 ] unsigned char 
 15361 ;; Return value:  Size  Location     Type
 15362 ;;                  1    wreg      unsigned char 
 15363 ;; Registers used:
 15364 ;;		wreg, status,2, status,0
 15365 ;; Tracked objects:
 15366 ;;		On entry : 1F/4
 15367 ;;		On exit  : 1F/1
 15368 ;;		Unchanged: 0/0
 15369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15370 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15371 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15372 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15373 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15374 ;;Total ram usage:        3 bytes
 15375 ;; Hardware stack levels used:    1
 15376 ;; Hardware stack levels required when called:    8
 15377 ;; This function calls:
 15378 ;;		Nothing
 15379 ;; This function is called by:
 15380 ;;		_main
 15381 ;; This function uses a non-reentrant model
 15382 ;;
 15383                           
 15384                           
 15385                           ;psect for function _gdb_ahex2bin
 15386  0821                     _gdb_ahex2bin:	
 15387                           
 15388                           ;incstack = 0
 15389                           ; Regs used in _gdb_ahex2bin: [wreg+status,2+status,0]
 15390                           ;gdb_ahex2bin@MSB stored from wreg
 15391  0821  0021               	movlb	1	; select bank1
 15392  0822  00A2               	movwf	gdb_ahex2bin@MSB^(0+128)
 15393                           
 15394                           ;gdb_stub.c: 414: if (MSB > '9') MSB -= 7;
 15395  0823  303A               	movlw	58
 15396  0824  0222               	subwf	gdb_ahex2bin@MSB^(0+128),w
 15397  0825  1C03               	skipc
 15398  0826  2829               	goto	l5079
 15399  0827  3007               	movlw	7
 15400  0828  02A2               	subwf	gdb_ahex2bin@MSB^(0+128),f
 15401  0829                     l5079:	
 15402                           
 15403                           ;gdb_stub.c: 415: if (LSB > '9') LSB -= 7;
 15404  0829  303A               	movlw	58
 15405  082A  0220               	subwf	gdb_ahex2bin@LSB^(0+128),w
 15406  082B  1C03               	skipc
 15407  082C  282F               	goto	l1019
 15408  082D  3007               	movlw	7
 15409  082E  02A0               	subwf	gdb_ahex2bin@LSB^(0+128),f
 15410  082F                     l1019:	
 15411                           
 15412                           ;gdb_stub.c: 416: return (MSB <<4) | (LSB & 0x0F);
 15413  082F  300F               	movlw	15
 15414  0830  0520               	andwf	gdb_ahex2bin@LSB^(0+128),w
 15415  0831  00A1               	movwf	??_gdb_ahex2bin^(0+128)
 15416  0832  0E22               	swapf	gdb_ahex2bin@MSB^(0+128),w
 15417  0833  39F0               	andlw	240
 15418  0834  0421               	iorwf	??_gdb_ahex2bin^(0+128),w
 15419  0835  0008               	return
 15420  0836                     __end_of_gdb_ahex2bin:	
 15421                           
 15422                           	psect	text40
 15423  0836                     __ptext40:	
 15424 ;; *************** function _bdm_interrupt *****************
 15425 ;; Defined at:
 15426 ;;		line 525 in file "mpc_bdm.c"
 15427 ;; Parameters:    Size  Location     Type
 15428 ;;		None
 15429 ;; Auto vars:     Size  Location     Type
 15430 ;;  out             5   21[BANK3 ] struct bdm_out_s
 15431 ;;  in              5   16[BANK3 ] struct bdm_in_s
 15432 ;;  x               4   10[BANK3 ] unsigned long 
 15433 ;;  c               2   14[BANK3 ] int 
 15434 ;; Return value:  Size  Location     Type
 15435 ;;                  2  460[COMMON] int 
 15436 ;; Registers used:
 15437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15438 ;; Tracked objects:
 15439 ;;		On entry : 1F/5
 15440 ;;		On exit  : 1F/1
 15441 ;;		Unchanged: 0/0
 15442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15444 ;;      Locals:         0       0       0       0      16       0       0       0       0       0       0       0       
      +0       0
 15445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15446 ;;      Totals:         0       0       0       0      16       0       0       0       0       0       0       0       
      +0       0
 15447 ;;Total ram usage:       16 bytes
 15448 ;; Hardware stack levels used:    1
 15449 ;; Hardware stack levels required when called:   11
 15450 ;; This function calls:
 15451 ;;		_bdm_clk_serial
 15452 ;;		_bdm_nop
 15453 ;; This function is called by:
 15454 ;;		_main
 15455 ;; This function uses a non-reentrant model
 15456 ;;
 15457                           
 15458                           
 15459                           ;psect for function _bdm_interrupt
 15460  0836                     _bdm_interrupt:	
 15461                           
 15462                           ;mpc_bdm.c: 527: bdm_in_t in;
 15463                           ;mpc_bdm.c: 528: bdm_out_t out;
 15464                           ;mpc_bdm.c: 529: int c;
 15465                           ;mpc_bdm.c: 530: unsigned long x;
 15466                           ;mpc_bdm.c: 532: in.prefix = 0x3;
 15467                           
 15468                           ;incstack = 0
 15469                           ; Regs used in _bdm_interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15470  0836  3003               	movlw	3
 15471  0837  0023               	movlb	3	; select bank3
 15472  0838  04DB               	iorwf	bdm_interrupt@in^(0+384),f
 15473                           
 15474                           ;mpc_bdm.c: 533: in.data = 0x7f;
 15475  0839  307F               	movlw	127
 15476                           
 15477                           ;mpc_bdm.c: 535: if( bdm_clk_serial( &in, &out ) < 0 )
 15478  083A  2098               	fcall	PL363	;call to abstracted procedure
 15479  083B  3191  21D6  3188   	fcall	_bdm_clk_serial
 15480  083E  1BAB               	btfsc	(?_bdm_clk_serial+3)^(0+128),7
 15481  083F  0008               	return
 15482                           
 15483                           ;mpc_bdm.c: 538: }
 15484                           ;mpc_bdm.c: 541: c=0;
 15485  0840  0023               	movlb	3	; select bank3
 15486  0841  01D9               	clrf	bdm_interrupt@c^(0+384)
 15487  0842  01DA               	clrf	(bdm_interrupt@c+1)^(0+384)
 15488                           
 15489                           ;mpc_bdm.c: 542: x=0;
 15490  0843  01D5               	clrf	bdm_interrupt@x^(0+384)
 15491  0844  01D6               	clrf	(bdm_interrupt@x+1)^(0+384)
 15492  0845  01D7               	clrf	(bdm_interrupt@x+2)^(0+384)
 15493  0846  01D8               	clrf	(bdm_interrupt@x+3)^(0+384)
 15494                           
 15495                           ;mpc_bdm.c: 543: while (((c&0x40) != 0x40) && (x<1000)) { c= bdm_nop(); x++; }
 15496  0847  2868               	goto	l5063
 15497  0848                     l5065:	
 15498  0848  3000               	movlw	0
 15499  0849  0258               	subwf	(bdm_interrupt@x+3)^(0+384),w
 15500  084A  1D03               	skipz
 15501  084B  2856               	goto	u4335
 15502  084C  3000               	movlw	0
 15503  084D  0257               	subwf	(bdm_interrupt@x+2)^(0+384),w
 15504  084E  1D03               	skipz
 15505  084F  2856               	goto	u4335
 15506  0850  3003               	movlw	3
 15507  0851  0256               	subwf	(bdm_interrupt@x+1)^(0+384),w
 15508  0852  1D03               	skipz
 15509  0853  2856               	goto	u4335
 15510  0854  30E8               	movlw	232
 15511  0855  0255               	subwf	bdm_interrupt@x^(0+384),w
 15512  0856                     u4335:	
 15513  0856  1803               	btfsc	3,0
 15514  0857  286A               	goto	l5067
 15515  0858  2070  3188         	fcall	_bdm_nop
 15516  085A  0845               	movf	(?_bdm_nop^(0+128)+1),w
 15517  085B  0023               	movlb	3	; select bank3
 15518  085C  00DA               	movwf	(bdm_interrupt@c+1)^(0+384)
 15519  085D  0021               	movlb	1	; select bank1
 15520  085E  0844               	movf	?_bdm_nop^(0+128),w
 15521  085F  0023               	movlb	3	; select bank3
 15522  0860  00D9               	movwf	bdm_interrupt@c^(0+384)
 15523  0861  0AD5               	incf	bdm_interrupt@x^(0+384),f
 15524  0862  1903               	skipnz
 15525  0863  0AD6               	incf	(bdm_interrupt@x+1)^(0+384),f
 15526  0864  1903               	skipnz
 15527  0865  0AD7               	incf	(bdm_interrupt@x+2)^(0+384),f
 15528  0866  1903               	skipnz
 15529  0867  0AD8               	incf	(bdm_interrupt@x+3)^(0+384),f
 15530  0868                     l5063:	
 15531  0868  1F59               	btfss	bdm_interrupt@c^(0+384),6
 15532  0869  2848               	goto	l5065
 15533  086A                     l5067:	
 15534                           
 15535                           ;mpc_bdm.c: 545: in.prefix = 0x3;
 15536  086A  3003               	movlw	3
 15537  086B  04DB               	iorwf	bdm_interrupt@in^(0+384),f
 15538                           
 15539                           ;mpc_bdm.c: 546: in.data = 0x1f;
 15540  086C  301F               	movlw	31
 15541                           
 15542                           ;mpc_bdm.c: 548: if( bdm_clk_serial( &in, &out ) < 0 )
 15543  086D  2098               	fcall	PL363	;call to abstracted procedure
 15544  086E  3191  29D6         	ljmp	l3611
 15545  0870                     __end_of_bdm_interrupt:	
 15546  0870                     __ptext41:	
 15547 ;; *************** function _bdm_nop *****************
 15548 ;; Defined at:
 15549 ;;		line 190 in file "mpc_bdm.c"
 15550 ;; Parameters:    Size  Location     Type
 15551 ;;		None
 15552 ;; Auto vars:     Size  Location     Type
 15553 ;;  out             5    5[BANK3 ] struct bdm_out_s
 15554 ;;  in              5    0[BANK3 ] struct bdm_in_s
 15555 ;; Return value:  Size  Location     Type
 15556 ;;                  4   36[BANK1 ] unsigned long 
 15557 ;; Registers used:
 15558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15559 ;; Tracked objects:
 15560 ;;		On entry : 18/5
 15561 ;;		On exit  : 1F/1
 15562 ;;		Unchanged: 0/0
 15563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15564 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15565 ;;      Locals:         0       0       0       0      10       0       0       0       0       0       0       0       
      +0       0
 15566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15567 ;;      Totals:         0       0       4       0      10       0       0       0       0       0       0       0       
      +0       0
 15568 ;;Total ram usage:       14 bytes
 15569 ;; Hardware stack levels used:    1
 15570 ;; Hardware stack levels required when called:   10
 15571 ;; This function calls:
 15572 ;;		_bdm_clk_serial
 15573 ;; This function is called by:
 15574 ;;		_main
 15575 ;;		_bdm_interrupt
 15576 ;;		_gdb_process_command
 15577 ;; This function uses a non-reentrant model
 15578 ;;
 15579                           
 15580                           
 15581                           ;psect for function _bdm_nop
 15582  0870                     _bdm_nop:	
 15583                           
 15584                           ;mpc_bdm.c: 192: bdm_in_t in;
 15585                           ;mpc_bdm.c: 193: bdm_out_t out;
 15586                           ;mpc_bdm.c: 195: in.prefix = 0x3;
 15587                           
 15588                           ;incstack = 0
 15589                           ; Regs used in _bdm_nop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15590  0870  3003               	movlw	3
 15591  0871  0023               	movlb	3	; select bank3
 15592  0872  04CB               	iorwf	bdm_nop@in^(0+384),f
 15593  0873  30CB               	movlw	low bdm_nop@in
 15594                           
 15595                           ;mpc_bdm.c: 196: in.data = 0x00;
 15596  0874  01CC               	clrf	(bdm_nop@in^(0+384)+1)
 15597  0875  01CD               	clrf	((bdm_nop@in+1)^(0+384)+1)
 15598  0876  01CE               	clrf	((bdm_nop@in+2)^(0+384)+1)
 15599  0877  01CF               	clrf	((bdm_nop@in+3)^(0+384)+1)
 15600                           
 15601                           ;mpc_bdm.c: 199: if( bdm_clk_serial( &in, &out ) < 0 ){
 15602  0878  0021               	movlb	1	; select bank1
 15603  0879  00A8               	movwf	bdm_clk_serial@in^(0+128)
 15604  087A  3001               	movlw	high bdm_nop@in
 15605  087B  00A9               	movwf	(bdm_clk_serial@in+1)^(0+128)
 15606  087C  30D0               	movlw	low bdm_nop@out
 15607  087D  00AA               	movwf	bdm_clk_serial@out^(0+128)
 15608  087E  3001               	movlw	high bdm_nop@out
 15609  087F  00AB               	movwf	(bdm_clk_serial@out+1)^(0+128)
 15610  0880  3191  21D6  3188   	fcall	_bdm_clk_serial
 15611  0883  1FAB               	btfss	(?_bdm_clk_serial+3)^(0+128),7
 15612  0884  288A               	goto	l4497
 15613                           
 15614                           ;mpc_bdm.c: 200: return 0x0;
 15615  0885  01C4               	clrf	?_bdm_nop^(0+128)
 15616  0886  01C5               	clrf	(?_bdm_nop+1)^(0+128)
 15617  0887  01C6               	clrf	(?_bdm_nop+2)^(0+128)
 15618  0888  01C7               	clrf	(?_bdm_nop+3)^(0+128)
 15619  0889  0008               	return
 15620  088A                     l4497:	
 15621                           
 15622                           ;mpc_bdm.c: 201: }
 15623                           ;mpc_bdm.c: 202: return out.data;
 15624  088A  3001               	movlw	1
 15625  088B  3ED0               	addlw	bdm_nop@out& (0+255)
 15626  088C  0086               	movwf	6
 15627  088D  3001               	movlw	1	; select bank3/4
 15628  088E  0087               	movwf	7
 15629  088F  3F40               	moviw [0]fsr1
 15630  0890  00C4               	movwf	?_bdm_nop^(0+128)
 15631  0891  3F41               	moviw [1]fsr1
 15632  0892  00C5               	movwf	(?_bdm_nop+1)^(0+128)
 15633  0893  3F42               	moviw [2]fsr1
 15634  0894  00C6               	movwf	(?_bdm_nop+2)^(0+128)
 15635  0895  3F43               	moviw [3]fsr1
 15636  0896  00C7               	movwf	(?_bdm_nop+3)^(0+128)
 15637  0897  0008               	return
 15638  0898                     __end_of_bdm_nop:	
 15639  0898                     PL363:	
 15640  0898  00DC               	movwf	(bdm_interrupt@in^(0+384)+1)
 15641  0899  30DB               	movlw	low bdm_interrupt@in
 15642  089A  01DD               	clrf	((bdm_interrupt@in+1)^(0+384)+1)
 15643  089B  01DE               	clrf	((bdm_interrupt@in+2)^(0+384)+1)
 15644  089C  01DF               	clrf	((bdm_interrupt@in+3)^(0+384)+1)
 15645  089D  0021               	movlb	1	; select bank1
 15646  089E  00A8               	movwf	bdm_clk_serial@in^(0+128)
 15647  089F  3001               	movlw	high bdm_interrupt@in
 15648  08A0  00A9               	movwf	(bdm_clk_serial@in+1)^(0+128)
 15649  08A1  30E0               	movlw	low bdm_interrupt@out
 15650  08A2  00AA               	movwf	bdm_clk_serial@out^(0+128)
 15651  08A3  3001               	movlw	high bdm_interrupt@out
 15652  08A4  00AB               	movwf	(bdm_clk_serial@out+1)^(0+128)
 15653  08A5  0008               	return
 15654  08A6                     __end_ofPL363:	
 15655                           
 15656                           	psect	intentry
 15657  0004                     __pintentry:	
 15658 ;; *************** function _isr *****************
 15659 ;; Defined at:
 15660 ;;		line 23 in file "interrupts.c"
 15661 ;; Parameters:    Size  Location     Type
 15662 ;;		None
 15663 ;; Auto vars:     Size  Location     Type
 15664 ;;		None
 15665 ;; Return value:  Size  Location     Type
 15666 ;;		None               void
 15667 ;; Registers used:
 15668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15669 ;; Tracked objects:
 15670 ;;		On entry : 0/0
 15671 ;;		On exit  : 1F/0
 15672 ;;		Unchanged: 0/0
 15673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15678 ;;Total ram usage:        0 bytes
 15679 ;; Hardware stack levels used:    1
 15680 ;; Hardware stack levels required when called:    7
 15681 ;; This function calls:
 15682 ;;		_usb_service
 15683 ;; This function is called by:
 15684 ;;		Interrupt level 1
 15685 ;; This function uses a non-reentrant model
 15686 ;;
 15687                           
 15688  0004                     _isr:	
 15689                           
 15690                           ;incstack = 0
 15691                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15692  0004  147E               	bsf	126,0	;set compiler interrupt flag
 15693  0005  3180               	pagesel	$
 15694                           
 15695                           ;interrupts.c: 25: usb_service();
 15696  0006  3189  21A5         	fcall	_usb_service
 15697  0008  107E               	bcf	126,0	;clear compiler interrupt flag
 15698  0009  0009               	retfie
 15699  000A                     __end_of_isr:	
 15700                           
 15701                           	psect	text52
 15702  0000                     __ptext52:	
 15703 ;; *************** function _handle_ep0_setup *****************
 15704 ;; Defined at:
 15705 ;;		line 1148 in file "usb/src/usb.c"
 15706 ;; Parameters:    Size  Location     Type
 15707 ;;		None
 15708 ;; Auto vars:     Size  Location     Type
 15709 ;;  setup           2   38[BANK0 ] PTR struct setup_packet
 15710 ;;		 -> ep_buffers(155), 
 15711 ;;  res             1   37[BANK0 ] char 
 15712 ;; Return value:  Size  Location     Type
 15713 ;;		None               void
 15714 ;; Registers used:
 15715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15716 ;; Tracked objects:
 15717 ;;		On entry : 1F/0
 15718 ;;		On exit  : 1F/1D
 15719 ;;		Unchanged: 0/0
 15720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15722 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15724 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15725 ;;Total ram usage:        3 bytes
 15726 ;; Hardware stack levels used:    1
 15727 ;; Hardware stack levels required when called:    5
 15728 ;; This function calls:
 15729 ;;		_clear_ep0_stall
 15730 ;;		_handle_standard_control_request
 15731 ;;		_stall_ep0
 15732 ;;		i1_reset_ep0_data_stage
 15733 ;; This function is called by:
 15734 ;;		_usb_service
 15735 ;; This function uses a non-reentrant model
 15736 ;;
 15737                           
 15738  0000                     _handle_ep0_setup:	
 15739                           ;psect for function _handle_ep0_setup
 15740                           
 15741  0000                     __end_of_handle_ep0_setup:	
 15742                           ;usb.c: 1259: UCONbits.PKTDIS = 0;
 15743                           
 15744                           ;usb.c: 1251: stall_ep0();
 15745                           
 15746                           ;usb.c: 1206: if (res < 0)
 15747                           
 15748                           ;usb.c: 1143: }
 15749                           ;usb.c: 1145: return res;
 15750                           
 15751                           ;usb.c: 1135: else {
 15752                           ;usb.c: 1136: res = -1;
 15753                           
 15754                           ;usb.c: 1125: }
 15755                           ;usb.c: 1126: }
 15756                           ;usb.c: 1127: }
 15757                           ;usb.c: 1129: if (!stall) {
 15758                           
 15759                           ;usb.c: 1119: }
 15760                           ;usb.c: 1120: }
 15761                           ;usb.c: 1124: stall = 0;
 15762                           
 15763                           ;usb.c: 1118: ep_buf[ep_num].flags &= ~(0x1);
 15764                           
 15765                           ;usb.c: 1116: ep_buf[ep_num].flags |= 0x4;
 15766                           
 15767                           ;usb.c: 1101: ep_buf[ep_num].flags &= ~(0x2);
 15768                           
 15769                           ;usb.c: 1099: ep_buf[ep_num].flags &= ~0x8;
 15770                           
 15771                           ;usb.c: 1088: else {
 15772                           ;usb.c: 1091: if (ep_dir) {
 15773                           
 15774                           ;usb.c: 1084: else {
 15775                           ;usb.c: 1085: usb_halt_ep_out(ep_num);
 15776                           
 15777                           ;usb.c: 1082: usb_halt_ep_in(ep_num);
 15778                           
 15779                           ;usb.c: 1081: if (ep_dir) {
 15780                           
 15781                           ;usb.c: 1078: if (setup->bRequest == SET_FEATURE) {
 15782                           
 15783                           ;usb.c: 1077: if (ep_num <= 2) {
 15784                           
 15785                           ;usb.c: 1076: uint8_t ep_dir = setup->wIndex & 0x80;
 15786                           
 15787                           ;usb.c: 1075: uint8_t ep_num = setup->wIndex & 0x0f;
 15788                           
 15789                           ;usb.c: 1074: if (setup->wValue == 0 ) {
 15790                           
 15791                           ;usb.c: 1071: }
 15792                           ;usb.c: 1073: if (setup->REQUEST.destination == 2 ) {
 15793                           
 15794                           ;usb.c: 1067: uint8_t stall = 1;
 15795                           
 15796                           ;usb.c: 1066: else if (setup->bRequest == CLEAR_FEATURE || setup->bRequest == SET_FEATUR
      +                          E) {
 15797                           
 15798                           ;usb.c: 1063: start_control_return(&ret, 1, setup->wLength);
 15799                           
 15800                           ;usb.c: 1042: int8_t ret;
 15801                           ;usb.c: 1043: ;
 15802                           ;usb.c: 1044: ;
 15803                           ;usb.c: 1045: ;
 15804                           ;usb.c: 1046: ;
 15805                           ;usb.c: 1047: ;
 15806                           ;usb.c: 1062: ret = 0;
 15807                           
 15808                           ;usb.c: 1041: else if (setup->bRequest == GET_INTERFACE) {
 15809                           
 15810                           ;usb.c: 1022: else if (setup->bRequest == SET_INTERFACE) {
 15811                           
 15812                           ;usb.c: 1008: start_control_return(ret, 2, setup->wLength);
 15813                           
 15814                           ;usb.c: 1007: ret[1] = 0;
 15815                           
 15816                           ;usb.c: 1003: uint8_t ret[2];
 15817                           ;usb.c: 1004: ret[0] = ((setup->wIndex & 0x80) ?
 15818                           ;usb.c: 1005: flags & 0x2 :
 15819                           ;usb.c: 1006: flags & 0x1) != 0;
 15820                           
 15821                           ;usb.c: 1002: uint8_t flags = ep_buf[ep_num].flags;
 15822                           
 15823                           ;usb.c: 1001: if (ep_num <= 2) {
 15824                           
 15825                           ;usb.c: 1000: uint8_t ep_num = setup->wIndex & 0x0f;
 15826                           
 15827                           ;usb.c: 998: else if (setup->REQUEST.destination == 2 ) {
 15828                           
 15829                           ;usb.c: 996: start_control_return(&ret, 2, setup->wLength);
 15830                           
 15831                           ;usb.c: 990: uint16_t ret;
 15832                           ;usb.c: 994: ret = 0x0000;
 15833                           
 15834                           ;usb.c: 983: ;
 15835                           ;usb.c: 984: ;
 15836                           ;usb.c: 985: ;
 15837                           ;usb.c: 987: if (setup->REQUEST.destination == 0 ) {
 15838                           
 15839                           ;usb.c: 981: else if (setup->bRequest == GET_STATUS) {
 15840                           
 15841                           ;usb.c: 976: ;
 15842                           ;usb.c: 977: ;
 15843                           ;usb.c: 979: start_control_return(&g_configuration, 1, setup->wLength);
 15844                           
 15845                           ;usb.c: 974: else if (setup->bRequest == GET_CONFIGURATION) {
 15846                           
 15847                           ;usb.c: 969: g_configuration = req;
 15848                           
 15849                           ;usb.c: 968: send_zero_length_packet_ep0();
 15850                           
 15851                           ;usb.c: 966: init_endpoints();
 15852                           
 15853                           ;usb.c: 957: uint8_t req = setup->wValue & 0x00ff;
 15854                           
 15855                           ;usb.c: 953: else if (setup->bRequest == SET_CONFIGURATION) {
 15856                           
 15857                           ;usb.c: 951: send_zero_length_packet_ep0();
 15858                           
 15859                           ;usb.c: 949: addr = setup->wValue;
 15860                           
 15861                           ;usb.c: 948: addr_pending = 1;
 15862                           
 15863                           ;usb.c: 945: else if (setup->bRequest == SET_ADDRESS) {
 15864                           
 15865                           ;usb.c: 917: else
 15866                           ;usb.c: 918: start_control_return(desc, len, setup->wLength);
 15867                           
 15868                           ;usb.c: 913: if (len < 0) {
 15869                           
 15870                           ;usb.c: 907: {
 15871                           ;usb.c: 909: const void *desc;
 15872                           ;usb.c: 910: int16_t len;
 15873                           ;usb.c: 911: {
 15874                           ;usb.c: 912: len = usb_application_get_string(descriptor_index, &desc);
 15875                           
 15876                           ;usb.c: 885: else if (descriptor == DESC_STRING) {
 15877                           
 15878                           ;usb.c: 882: start_control_return(desc, desc->wTotalLength, setup->wLength);
 15879                           
 15880                           ;usb.c: 880: else {
 15881                           ;usb.c: 881: desc = usb_application_config_descs[descriptor_index];
 15882                           
 15883                           ;usb.c: 879: stall_ep0();
 15884                           
 15885                           ;usb.c: 877: const struct configuration_descriptor *desc;
 15886                           ;usb.c: 878: if (descriptor_index >= 1)
 15887                           
 15888                           ;usb.c: 876: else if (descriptor == DESC_CONFIGURATION) {
 15889                           
 15890                           ;usb.c: 871: ;
 15891                           ;usb.c: 874: start_control_return(&this_device_descriptor, this_device_descriptor.bLengt
      +                          h, setup->wLength);
 15892                           
 15893                           ;usb.c: 870: if (descriptor == DESC_DEVICE) {
 15894                           
 15895                           ;usb.c: 868: uint8_t descriptor_index = setup->wValue & 0x00ff;
 15896                           
 15897                           ;usb.c: 867: char descriptor = ((setup->wValue >> 8) & 0x00ff);
 15898                           
 15899                           ;usb.c: 865: if (setup->bRequest == GET_DESCRIPTOR &&
 15900                           ;usb.c: 866: setup->REQUEST.bmRequestType == 0x80 ) {
 15901                           
 15902                           ;usb.c: 862: setup = (struct setup_packet*) ep0_buf.out;
 15903                           
 15904                           ;usb.c: 853: struct setup_packet *setup;
 15905                           ;usb.c: 854: int8_t res = 0;
 15906                           
 15907                           ;psect for function _handle_standard_control_request
 15908                           
 15909                           ;usb.c: 1205: res = handle_standard_control_request();
 15910                           
 15911                           ;usb.c: 1202: }
 15912                           ;usb.c: 1204: if (setup->REQUEST.type == REQUEST_TYPE_STANDARD) {
 15913                           
 15914                           ;usb.c: 1201: reset_ep0_data_stage();
 15915                           
 15916                           ;usb.c: 1190: }
 15917                           ;usb.c: 1193: if (ep0_data_stage_buf_remaining) {
 15918                           
 15919                           ;usb.c: 1188: if (bds[1].STAT.UOWN) {
 15920                           
 15921                           ;usb.c: 1161: int8_t res;
 15922                           ;usb.c: 1167: clear_ep0_stall();
 15923                           
 15924                           ;usb.c: 1160: ep0_data_stage_direc = setup->REQUEST.direction;
 15925                           
 15926                           ;usb.c: 1150: struct setup_packet *setup;
 15927                           ;usb.c: 1157: setup = (struct setup_packet*) ep0_buf.out;
 15928                           
 15929                           ;incstack = 0
 15930                           ; Regs used in _handle_ep0_setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15931                           
 15932                           
 15933                           	psect	text53
 15934  0000                     __ptext53:	
 15935 ;; *************** function _handle_standard_control_request *****************
 15936 ;; Defined at:
 15937 ;;		line 851 in file "usb/src/usb.c"
 15938 ;; Parameters:    Size  Location     Type
 15939 ;;		None
 15940 ;; Auto vars:     Size  Location     Type
 15941 ;;  ep_num          1   34[BANK0 ] unsigned char 
 15942 ;;  ep_dir          1   29[BANK0 ] unsigned char 
 15943 ;;  ret             2   16[BANK0 ] unsigned char [2]
 15944 ;;  flags           1   27[BANK0 ] unsigned char 
 15945 ;;  desc            2   32[BANK0 ] PTR const void 
 15946 ;;		 -> fake_serial_num(120), cdc_data_string(38), cdc_interface_string(28), product_string(26), 
 15947 ;;		 -> vendor_string(48), str00(4), 
 15948 ;;  len             2   25[BANK0 ] int 
 15949 ;;  ep_num          1   28[BANK0 ] unsigned char 
 15950 ;;  ret             2   18[BANK0 ] unsigned int 
 15951 ;;  desc            2   23[BANK0 ] PTR const struct configu
 15952 ;;		 -> configuration_1(70), 
 15953 ;;  stall           1   21[BANK0 ] unsigned char 
 15954 ;;  ret             1   22[BANK0 ] char 
 15955 ;;  req             1   15[BANK0 ] unsigned char 
 15956 ;;  descriptor_i    1   31[BANK0 ] unsigned char 
 15957 ;;  descriptor      1   30[BANK0 ] unsigned char 
 15958 ;;  setup           2   35[BANK0 ] PTR struct setup_packet
 15959 ;;		 -> ep_buffers(155), 
 15960 ;;  res             1   20[BANK0 ] char 
 15961 ;; Return value:  Size  Location     Type
 15962 ;;                  1    wreg      char 
 15963 ;; Registers used:
 15964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15965 ;; Tracked objects:
 15966 ;;		On entry : 1F/0
 15967 ;;		On exit  : 1F/0
 15968 ;;		Unchanged: 0/0
 15969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15971 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15972 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15973 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15974 ;;Total ram usage:       26 bytes
 15975 ;; Hardware stack levels used:    1
 15976 ;; Hardware stack levels required when called:    4
 15977 ;; This function calls:
 15978 ;;		_send_zero_length_packet_ep0
 15979 ;;		_stall_ep0
 15980 ;;		_start_control_return
 15981 ;;		_usb_application_get_string
 15982 ;;		_usb_halt_ep_in
 15983 ;;		_usb_halt_ep_out
 15984 ;;		i1___bmul
 15985 ;;		i1_init_endpoints
 15986 ;; This function is called by:
 15987 ;;		_handle_ep0_setup
 15988 ;; This function uses a non-reentrant model
 15989 ;;
 15990                           
 15991  0000                     _handle_standard_control_request:	
 15992                           ;psect for function _handle_standard_control_request
 15993                           
 15994  0000                     __end_of_handle_standard_control_request:	
 15995                           ;usb.c: 1143: }
 15996                           ;usb.c: 1145: return res;
 15997                           
 15998                           ;usb.c: 1135: else {
 15999                           ;usb.c: 1136: res = -1;
 16000                           
 16001                           ;usb.c: 1125: }
 16002                           ;usb.c: 1126: }
 16003                           ;usb.c: 1127: }
 16004                           ;usb.c: 1129: if (!stall) {
 16005                           
 16006                           ;usb.c: 1119: }
 16007                           ;usb.c: 1120: }
 16008                           ;usb.c: 1124: stall = 0;
 16009                           
 16010                           ;usb.c: 1118: ep_buf[ep_num].flags &= ~(0x1);
 16011                           
 16012                           ;usb.c: 1116: ep_buf[ep_num].flags |= 0x4;
 16013                           
 16014                           ;usb.c: 1102: }
 16015                           
 16016                           ;usb.c: 1101: ep_buf[ep_num].flags &= ~(0x2);
 16017                           
 16018                           ;usb.c: 1099: ep_buf[ep_num].flags &= ~0x8;
 16019                           
 16020                           ;usb.c: 1088: else {
 16021                           ;usb.c: 1091: if (ep_dir) {
 16022                           
 16023                           ;usb.c: 1084: else {
 16024                           ;usb.c: 1085: usb_halt_ep_out(ep_num);
 16025                           
 16026                           ;usb.c: 1083: }
 16027                           
 16028                           ;usb.c: 1082: usb_halt_ep_in(ep_num);
 16029                           
 16030                           ;usb.c: 1081: if (ep_dir) {
 16031                           
 16032                           ;usb.c: 1078: if (setup->bRequest == SET_FEATURE) {
 16033                           
 16034                           ;usb.c: 1077: if (ep_num <= 2) {
 16035                           
 16036                           ;usb.c: 1076: uint8_t ep_dir = setup->wIndex & 0x80;
 16037                           
 16038                           ;usb.c: 1075: uint8_t ep_num = setup->wIndex & 0x0f;
 16039                           
 16040                           ;usb.c: 1074: if (setup->wValue == 0 ) {
 16041                           
 16042                           ;usb.c: 1071: }
 16043                           ;usb.c: 1073: if (setup->REQUEST.destination == 2 ) {
 16044                           
 16045                           ;usb.c: 1067: uint8_t stall = 1;
 16046                           
 16047                           ;usb.c: 1066: else if (setup->bRequest == CLEAR_FEATURE || setup->bRequest == SET_FEATUR
      +                          E) {
 16048                           
 16049                           ;usb.c: 1065: }
 16050                           
 16051                           ;usb.c: 1063: start_control_return(&ret, 1, setup->wLength);
 16052                           
 16053                           ;usb.c: 1042: int8_t ret;
 16054                           ;usb.c: 1043: ;
 16055                           ;usb.c: 1044: ;
 16056                           ;usb.c: 1045: ;
 16057                           ;usb.c: 1046: ;
 16058                           ;usb.c: 1047: ;
 16059                           ;usb.c: 1062: ret = 0;
 16060                           
 16061                           ;usb.c: 1041: else if (setup->bRequest == GET_INTERFACE) {
 16062                           
 16063                           ;usb.c: 1022: else if (setup->bRequest == SET_INTERFACE) {
 16064                           
 16065                           ;usb.c: 1009: }
 16066                           
 16067                           ;usb.c: 1008: start_control_return(ret, 2, setup->wLength);
 16068                           
 16069                           ;usb.c: 1007: ret[1] = 0;
 16070                           
 16071                           ;usb.c: 1003: uint8_t ret[2];
 16072                           ;usb.c: 1004: ret[0] = ((setup->wIndex & 0x80) ?
 16073                           ;usb.c: 1005: flags & 0x2 :
 16074                           ;usb.c: 1006: flags & 0x1) != 0;
 16075                           
 16076                           ;usb.c: 1002: uint8_t flags = ep_buf[ep_num].flags;
 16077                           
 16078                           ;usb.c: 1001: if (ep_num <= 2) {
 16079                           
 16080                           ;usb.c: 1000: uint8_t ep_num = setup->wIndex & 0x0f;
 16081                           
 16082                           ;usb.c: 998: else if (setup->REQUEST.destination == 2 ) {
 16083                           
 16084                           ;usb.c: 997: }
 16085                           
 16086                           ;usb.c: 996: start_control_return(&ret, 2, setup->wLength);
 16087                           
 16088                           ;usb.c: 990: uint16_t ret;
 16089                           ;usb.c: 994: ret = 0x0000;
 16090                           
 16091                           ;usb.c: 983: ;
 16092                           ;usb.c: 984: ;
 16093                           ;usb.c: 985: ;
 16094                           ;usb.c: 987: if (setup->REQUEST.destination == 0 ) {
 16095                           
 16096                           ;usb.c: 981: else if (setup->bRequest == GET_STATUS) {
 16097                           
 16098                           ;usb.c: 980: }
 16099                           
 16100                           ;usb.c: 976: ;
 16101                           ;usb.c: 977: ;
 16102                           ;usb.c: 979: start_control_return(&g_configuration, 1, setup->wLength);
 16103                           
 16104                           ;usb.c: 974: else if (setup->bRequest == GET_CONFIGURATION) {
 16105                           
 16106                           ;usb.c: 971: ;
 16107                           ;usb.c: 972: ;
 16108                           ;usb.c: 973: }
 16109                           
 16110                           ;usb.c: 969: g_configuration = req;
 16111                           
 16112                           ;usb.c: 968: send_zero_length_packet_ep0();
 16113                           
 16114                           ;usb.c: 966: init_endpoints();
 16115                           
 16116                           ;usb.c: 957: uint8_t req = setup->wValue & 0x00ff;
 16117                           
 16118                           ;usb.c: 953: else if (setup->bRequest == SET_CONFIGURATION) {
 16119                           
 16120                           ;usb.c: 952: }
 16121                           
 16122                           ;usb.c: 951: send_zero_length_packet_ep0();
 16123                           
 16124                           ;usb.c: 949: addr = setup->wValue;
 16125                           
 16126                           ;usb.c: 948: addr_pending = 1;
 16127                           
 16128                           ;usb.c: 945: else if (setup->bRequest == SET_ADDRESS) {
 16129                           
 16130                           ;usb.c: 917: else
 16131                           ;usb.c: 918: start_control_return(desc, len, setup->wLength);
 16132                           
 16133                           ;usb.c: 913: if (len < 0) {
 16134                           
 16135                           ;usb.c: 907: {
 16136                           ;usb.c: 909: const void *desc;
 16137                           ;usb.c: 910: int16_t len;
 16138                           ;usb.c: 911: {
 16139                           ;usb.c: 912: len = usb_application_get_string(descriptor_index, &desc);
 16140                           
 16141                           ;usb.c: 885: else if (descriptor == DESC_STRING) {
 16142                           
 16143                           ;usb.c: 882: start_control_return(desc, desc->wTotalLength, setup->wLength);
 16144                           
 16145                           ;usb.c: 880: else {
 16146                           ;usb.c: 881: desc = usb_application_config_descs[descriptor_index];
 16147                           
 16148                           ;usb.c: 879: stall_ep0();
 16149                           
 16150                           ;usb.c: 877: const struct configuration_descriptor *desc;
 16151                           ;usb.c: 878: if (descriptor_index >= 1)
 16152                           
 16153                           ;usb.c: 876: else if (descriptor == DESC_CONFIGURATION) {
 16154                           
 16155                           ;usb.c: 875: }
 16156                           
 16157                           ;usb.c: 871: ;
 16158                           ;usb.c: 874: start_control_return(&this_device_descriptor, this_device_descriptor.bLengt
      +                          h, setup->wLength);
 16159                           
 16160                           ;usb.c: 870: if (descriptor == DESC_DEVICE) {
 16161                           
 16162                           ;usb.c: 868: uint8_t descriptor_index = setup->wValue & 0x00ff;
 16163                           
 16164                           ;usb.c: 867: char descriptor = ((setup->wValue >> 8) & 0x00ff);
 16165                           
 16166                           ;usb.c: 865: if (setup->bRequest == GET_DESCRIPTOR &&
 16167                           ;usb.c: 866: setup->REQUEST.bmRequestType == 0x80 ) {
 16168                           
 16169                           ;usb.c: 862: setup = (struct setup_packet*) ep0_buf.out;
 16170                           
 16171                           ;usb.c: 853: struct setup_packet *setup;
 16172                           ;usb.c: 854: int8_t res = 0;
 16173                           
 16174                           ;incstack = 0
 16175                           ; Regs used in _handle_standard_control_request: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 16176                           
 16177                           
 16178                           	psect	text65
 16179  0000                     __ptext65:	
 16180 ;; *************** function _handle_ep0_out *****************
 16181 ;; Defined at:
 16182 ;;		line 1262 in file "usb/src/usb.c"
 16183 ;; Parameters:    Size  Location     Type
 16184 ;;		None
 16185 ;; Auto vars:     Size  Location     Type
 16186 ;;  bytes_to_cop    1    3[BANK0 ] unsigned char 
 16187 ;;  pkt_len         1    2[BANK0 ] unsigned char 
 16188 ;; Return value:  Size  Location     Type
 16189 ;;		None               void
 16190 ;; Registers used:
 16191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16192 ;; Tracked objects:
 16193 ;;		On entry : 1F/0
 16194 ;;		On exit  : 1F/0
 16195 ;;		Unchanged: 0/0
 16196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16198 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16199 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16200 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16201 ;;Total ram usage:        6 bytes
 16202 ;; Hardware stack levels used:    1
 16203 ;; Hardware stack levels required when called:    1
 16204 ;; This function calls:
 16205 ;;		_send_zero_length_packet_ep0
 16206 ;;		_stall_ep0
 16207 ;;		i1_memcpy
 16208 ;;		i1_reset_ep0_data_stage
 16209 ;; This function is called by:
 16210 ;;		_usb_service
 16211 ;; This function uses a non-reentrant model
 16212 ;;
 16213                           
 16214  0000                     _handle_ep0_out:	
 16215                           ;psect for function _handle_ep0_out
 16216                           
 16217  0000                     __end_of_handle_ep0_out:	
 16218                           ;usb.c: 1315: else {
 16219                           ;usb.c: 1317: send_zero_length_packet_ep0();
 16220                           
 16221                           ;usb.c: 1310: stall_ep0();
 16222                           
 16223                           ;usb.c: 1308: if (bytes_to_copy < pkt_len) {
 16224                           
 16225                           ;usb.c: 1303: if (pkt_len < 8 || ep0_data_stage_buf_remaining == 0) {
 16226                           
 16227                           ;usb.c: 1298: ep0_data_stage_buf_remaining -= bytes_to_copy;
 16228                           
 16229                           ;usb.c: 1297: ep0_data_stage_out_buffer += bytes_to_copy;
 16230                           
 16231                           ;usb.c: 1295: memcpy(ep0_data_stage_out_buffer, ep0_buf.out, bytes_to_copy);
 16232                           
 16233                           ;usb.c: 1288: uint8_t bytes_to_copy = (((pkt_len)<(ep0_data_stage_buf_remaining))?(pkt_l
      +                          en):(ep0_data_stage_buf_remaining));
 16234                           
 16235                           ;usb.c: 1279: else {
 16236                           ;usb.c: 1287: if (ep0_data_stage_out_buffer) {
 16237                           
 16238                           ;usb.c: 1278: }
 16239                           
 16240                           ;usb.c: 1277: reset_ep0_data_stage();
 16241                           
 16242                           ;usb.c: 1269: if (ep0_data_stage_direc == 1 ) {
 16243                           
 16244                           ;usb.c: 1267: uint8_t pkt_len = (bds[0].BDnCNT);
 16245                           
 16246                           ;incstack = 0
 16247                           ; Regs used in _handle_ep0_out: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16248                           
 16249                           
 16250                           	psect	text68
 16251  0000                     __ptext68:	
 16252 ;; *************** function _handle_ep0_in *****************
 16253 ;; Defined at:
 16254 ;;		line 1324 in file "usb/src/usb.c"
 16255 ;; Parameters:    Size  Location     Type
 16256 ;;		None
 16257 ;; Auto vars:     Size  Location     Type
 16258 ;;  bytes_to_sen    1   13[COMMON] unsigned char 
 16259 ;; Return value:  Size  Location     Type
 16260 ;;		None               void
 16261 ;; Registers used:
 16262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16263 ;; Tracked objects:
 16264 ;;		On entry : 1F/1D
 16265 ;;		On exit  : 0/0
 16266 ;;		Unchanged: 0/0
 16267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16269 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16271 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16272 ;;Total ram usage:        3 bytes
 16273 ;; Hardware stack levels used:    1
 16274 ;; Hardware stack levels required when called:    3
 16275 ;; This function calls:
 16276 ;;		_usb_send_in_buffer_0
 16277 ;;		i1_memcpy
 16278 ;;		i1_reset_ep0_data_stage
 16279 ;; This function is called by:
 16280 ;;		_usb_service
 16281 ;; This function uses a non-reentrant model
 16282 ;;
 16283                           
 16284  0000                     _handle_ep0_in:	
 16285                           ;psect for function _handle_ep0_in
 16286                           
 16287  0000                     __end_of_handle_ep0_in:	
 16288                           ;usb.c: 1354: else {
 16289                           ;usb.c: 1355: if (ep0_data_stage_direc == 0 ) {
 16290                           
 16291                           ;usb.c: 1353: }
 16292                           
 16293                           ;usb.c: 1352: reset_ep0_data_stage();
 16294                           
 16295                           ;usb.c: 1351: control_need_zlp = 0;
 16296                           
 16297                           ;usb.c: 1350: usb_send_in_buffer_0(0);
 16298                           
 16299                           ;usb.c: 1349: else if (control_need_zlp) {
 16300                           
 16301                           ;usb.c: 1348: }
 16302                           
 16303                           ;usb.c: 1347: usb_send_in_buffer_0(bytes_to_send);
 16304                           
 16305                           ;usb.c: 1345: control_need_zlp = 1;
 16306                           
 16307                           ;usb.c: 1342: if (ep0_data_stage_buf_remaining == 0 &&
 16308                           ;usb.c: 1343: bytes_to_send == 8 &&
 16309                           ;usb.c: 1344: returning_short)
 16310                           
 16311                           ;usb.c: 1337: ep0_data_stage_in_buffer += bytes_to_send;
 16312                           
 16313                           ;usb.c: 1336: ep0_data_stage_buf_remaining -= bytes_to_send;
 16314                           
 16315                           ;usb.c: 1335: memcpy(ep0_buf.in,ep0_data_stage_in_buffer,bytes_to_send);;
 16316                           
 16317                           ;usb.c: 1333: uint8_t bytes_to_send = (((ep0_data_stage_buf_remaining)<(8))?(ep0_data_st
      +                          age_buf_remaining):(8));
 16318                           
 16319                           ;usb.c: 1329: }
 16320                           ;usb.c: 1331: if (ep0_data_stage_buf_remaining) {
 16321                           
 16322                           ;usb.c: 1328: addr_pending = 0;
 16323                           
 16324                           ;usb.c: 1327: UADDR = addr;
 16325                           
 16326                           ;usb.c: 1326: if (addr_pending) {
 16327                           
 16328                           ;incstack = 0
 16329                           ; Regs used in _handle_ep0_in: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16330                           


Data Sizes:
    Strings     84
    Constant    352
    Data        28
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            56     49      56
    BANK1            48     48      48
    BANK2             0      0       0
    BANK3            37     37      37
    BANK4            80     80      80
    BANK5            80     72      80
    BANK6            80     64      80
    BANK7            80      0      47
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           32      0       0
    BANK12            0      0       0

Pointer List with Targets:

    Absolute function$1	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    init_endpoints$2198	const PTR void  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    ep0_data_stage_callback$1	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    USB_HID_REPORT_DESCRIPTOR_FUNC$1	PTR PTR const void  size(1) Largest target is 2
		 -> process_hid_setup_request@desc(COMMON[1]), 

    USB_HID_DESCRIPTOR_FUNC$1	PTR PTR const void  size(1) Largest target is 2
		 -> process_hid_setup_request@desc(COMMON[1]), 

    memset@p1	PTR void  size(2) Largest target is 24
		 -> bdm_interrupt@out(BANK3[5]), bdm_resume@out(BANK4[5]), bdm_set_data@out(BANK3[5]), bdm_get_data@out(BANK3[5]), 
		 -> bdm_set_spr@out(BANK4[5]), bdm_get_spr2@out(COMMON[5]), bdm_get_spr@out(BANK4[5]), bdm_set_gpr@out(BANK3[5]), 
		 -> bdm_get_gpr@out(BANK3[5]), bdm_nop@out(BANK3[5]), UEP0(SFR29[1]), bds(BANK0[24]), 

    memset@p	PTR unsigned char  size(2) Largest target is 24
		 -> bdm_interrupt@out(BANK3[5]), bdm_resume@out(BANK4[5]), bdm_set_data@out(BANK3[5]), bdm_get_data@out(BANK3[5]), 
		 -> bdm_set_spr@out(BANK4[5]), bdm_get_spr2@out(COMMON[5]), bdm_get_spr@out(BANK4[5]), bdm_set_gpr@out(BANK3[5]), 
		 -> bdm_get_gpr@out(BANK3[5]), bdm_nop@out(BANK3[5]), UEP0(SFR29[1]), bds(BANK0[24]), 

    memcpy@d1	PTR void  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 155
		 -> STR_10(CODE[1]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[73]), 
		 -> gdb_process_command@msg_out(BANK5[64]), fake_serial_num(CODE[120]), cdc_data_string(CODE[38]), cdc_interface_string(CODE[28]), 
		 -> product_string(CODE[26]), vendor_string(CODE[48]), str00(CODE[4]), configuration_1(CODE[70]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), handle_standard_control_request@ret_644(BANK0[1]), handle_standard_control_request@ret_642(BANK0[2]), 
		 -> handle_standard_control_request@ret(BANK0[2]), this_device_descriptor(CODE[18]), g_configuration(BANK0[1]), ep_buffers(BIGRAM[155]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 155
		 -> STR_10(CODE[1]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[73]), 
		 -> gdb_process_command@msg_out(BANK5[64]), fake_serial_num(CODE[120]), cdc_data_string(CODE[38]), cdc_interface_string(CODE[28]), 
		 -> product_string(CODE[26]), vendor_string(CODE[48]), str00(CODE[4]), configuration_1(CODE[70]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), handle_standard_control_request@ret_644(BANK0[1]), handle_standard_control_request@ret_642(BANK0[2]), 
		 -> handle_standard_control_request@ret(BANK0[2]), this_device_descriptor(CODE[18]), g_configuration(BANK0[1]), ep_buffers(BIGRAM[155]), 
		 -> NULL(NULL[0]), 

    gdb_extract_bytes@msg	PTR unsigned char  size(1) Largest target is 64
		 -> main@msg(BANK6[64]), 

    gdb_send@reply	PTR unsigned char  size(2) Largest target is 73
		 -> STR_10(CODE[1]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[73]), 
		 -> gdb_process_command@msg_out(BANK5[64]), STR_2(CODE[4]), STR_1(CODE[4]), 

    gdb_send@qbuf	PTR unsigned char  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    gdb_send_end@chksum	PTR unsigned char  size(1) Largest target is 1
		 -> qchksum(BANK5[1]), 

    gdb_send_end@qbuf	PTR unsigned char  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    gdb_send_data@reply	PTR unsigned char  size(1) Largest target is 64
		 -> gdb_process_command@msg_out(BANK5[64]), 

    gdb_send_data@chksum	PTR unsigned char  size(1) Largest target is 1
		 -> qchksum(BANK5[1]), 

    gdb_send_data@qbuf	PTR unsigned char  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    gdb_send_start@chksum	PTR unsigned char  size(1) Largest target is 1
		 -> qchksum(BANK5[1]), 

    gdb_send_start@qbuf	PTR unsigned char  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    gdb_hexstr@buf	PTR unsigned char  size(2) Largest target is 155
		 -> gdb_process_command@msg_out(BANK5[64]), ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    gdb_process_command@msg	PTR unsigned char  size(1) Largest target is 64
		 -> main@msg(BANK6[64]), 

    bdm_clk_serial@in	PTR struct bdm_in_s size(2) Largest target is 5
		 -> bdm_interrupt@in(BANK3[5]), bdm_resume@in(BANK4[5]), bdm_set_data@in(BANK3[5]), bdm_get_data@in(BANK3[5]), 
		 -> bdm_set_spr@in(BANK4[5]), bdm_get_spr2@in(COMMON[5]), bdm_get_spr@in(BANK4[5]), bdm_set_gpr@in(BANK3[5]), 
		 -> bdm_get_gpr@in(BANK3[5]), bdm_nop@in(BANK3[5]), 

    bdm_clk_serial@out	PTR struct bdm_out_s size(2) Largest target is 5
		 -> bdm_interrupt@out(BANK3[5]), bdm_resume@out(BANK4[5]), bdm_set_data@out(BANK3[5]), bdm_get_data@out(BANK3[5]), 
		 -> bdm_set_spr@out(BANK4[5]), bdm_get_spr2@out(COMMON[5]), bdm_get_spr@out(BANK4[5]), bdm_set_gpr@out(BANK3[5]), 
		 -> bdm_get_gpr@out(BANK3[5]), bdm_nop@out(BANK3[5]), 

    usb_application_get_string@ptr	PTR PTR const void  size(1) Largest target is 2
		 -> handle_standard_control_request@desc_632(BANK0[2]), 

    main@out_buf	PTR const unsigned char  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    usb_get_out_buffer@buf	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> main@out_buf(BANK5[2]), 

    usb_send_in_buffer@bd	PTR struct buffer_descriptor size(1) Largest target is 24
		 -> bds(BANK0[24]), 

    sp__usb_get_in_buffer	PTR unsigned char  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    usb_service@ep	PTR volatile struct . size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    ep0_data_stage_context	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    handle_ep0_setup@setup	PTR struct setup_packet size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), 

    handle_standard_control_request@desc_632	PTR const void  size(2) Largest target is 120
		 -> fake_serial_num(CODE[120]), cdc_data_string(CODE[38]), cdc_interface_string(CODE[28]), product_string(CODE[26]), 
		 -> vendor_string(CODE[48]), str00(CODE[4]), 

    usb_application_config_descs	PTR const struct configuration_descriptor[1] size(2) Largest target is 70
		 -> configuration_1(CODE[70]), 

    handle_standard_control_request@desc	PTR const struct configuration_descriptor size(2) Largest target is 70
		 -> configuration_1(CODE[70]), 

    handle_standard_control_request@setup	PTR struct setup_packet size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), 

    sp__memcpy	PTR void  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    start_control_return@ptr	PTR const void  size(2) Largest target is 120
		 -> fake_serial_num(CODE[120]), cdc_data_string(CODE[38]), cdc_interface_string(CODE[28]), product_string(CODE[26]), 
		 -> vendor_string(CODE[48]), str00(CODE[4]), configuration_1(CODE[70]), handle_standard_control_request@ret_644(BANK0[1]), 
		 -> handle_standard_control_request@ret_642(BANK0[2]), handle_standard_control_request@ret(BANK0[2]), this_device_descriptor(CODE[18]), g_configuration(BANK0[1]), 

    usb_init@ep	PTR volatile struct . size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    sp__memset	PTR void  size(2) Largest target is 24
		 -> bdm_interrupt@out(BANK3[5]), bdm_resume@out(BANK4[5]), bdm_set_data@out(BANK3[5]), bdm_get_data@out(BANK3[5]), 
		 -> bdm_set_spr@out(BANK4[5]), bdm_get_spr2@out(COMMON[5]), bdm_get_spr@out(BANK4[5]), bdm_set_gpr@out(BANK3[5]), 
		 -> bdm_get_gpr@out(BANK3[5]), bdm_nop@out(BANK3[5]), UEP0(SFR29[1]), bds(BANK0[24]), 

    ep0_data_stage_callback	PTR FTN(unsigned char ,PTR void ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    ep0_data_stage_out_buffer	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    ep0_data_stage_in_buffer	PTR unsigned char  size(2) Largest target is 120
		 -> fake_serial_num(CODE[120]), cdc_data_string(CODE[38]), cdc_interface_string(CODE[28]), product_string(CODE[26]), 
		 -> vendor_string(CODE[48]), str00(CODE[4]), configuration_1(CODE[70]), handle_standard_control_request@ret_644(BANK0[1]), 
		 -> handle_standard_control_request@ret_642(BANK0[2]), handle_standard_control_request@ret(BANK0[2]), this_device_descriptor(CODE[18]), g_configuration(BANK0[1]), 
		 -> NULL(NULL[0]), 

    pic16_linear_addr@ptr	PTR void  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    S168ep_buf$in	const PTR unsigned char  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    ep_buf.in	const PTR unsigned char  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    S168ep_buf$out	const PTR unsigned char  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    ep_buf.out	const PTR unsigned char  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), NULL(NULL[0]), 

    S162ep0_buf$in	const PTR unsigned char  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), 

    ep0_buf.in	const PTR unsigned char  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), 

    S162ep0_buf$out	const PTR unsigned char  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), 

    ep0_buf.out	const PTR unsigned char  size(2) Largest target is 155
		 -> ep_buffers(BIGRAM[155]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _usb_service->_handle_ep0_in
    i1_init_endpoints->i1_pic16_linear_addr
    i1_pic16_linear_addr->i1___wmul
    _usb_halt_ep_out->i1___bmul
    _usb_halt_ep_in->_stall_ep_in
    _stall_ep_in->i1___bmul
    _start_control_return->i1_memcpy
    _handle_ep0_out->i1_memcpy
    _handle_ep0_in->i1_memcpy
    _usb_send_in_buffer_0->i1_usb_in_endpoint_halted
    i1_usb_in_endpoint_halted->i1___bmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_usb_service
    _usb_service->_handle_ep0_setup
    i1_usb_init->i1_init_endpoints
    _handle_ep0_setup->_handle_standard_control_request
    _handle_standard_control_request->_start_control_return
    i1_init_endpoints->i1_pic16_linear_addr

Critical Paths under _main in BANK1

    _usb_out_endpoint_halted->___bmul
    _usb_init->_init_endpoints
    _init_endpoints->_pic16_linear_addr
    _pic16_linear_addr->___wmul
    _usb_get_out_buffer->___bmul
    _usb_arm_out_endpoint->___bmul
    _gdb_process_command->_bdm_set_gpr
    _gdb_send_start->_usb_send_in_buffer
    _gdb_send_data->_memcpy
    _usb_send_in_buffer->_usb_in_endpoint_halted
    _usb_in_endpoint_halted->___bmul
    _usb_get_in_buffer->___bmul
    _bdm_set_data->_bdm_set_gpr
    _bdm_reset->_bdm_wait_ready
    _bdm_get_data->_bdm_set_gpr
    _bdm_set_spr->_bdm_set_gpr
    _bdm_save_regs->_bdm_get_gpr
    _bdm_get_gpr->_bdm_clk_serial
    _bdm_restore_regs->_bdm_set_gpr
    _bdm_set_gpr->_bdm_clk_serial
    _bdm_interrupt->_bdm_nop
    _bdm_nop->_bdm_clk_serial
    _bdm_clk_serial->_memset

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    _gdb_process_command->_gdb_hexstr
    _gdb_send_end->_gdb_hexstr
    _gdb_send->_gdb_hexstr
    _gdb_hexstr->_bdm_get_data
    _bdm_update_breakpoints->_bdm_set_spr
    _bdm_set_data->_bdm_set_gpr
    _bdm_get_data->_bdm_get_gpr
    _bdm_get_data->_bdm_set_gpr
    _bdm_continue_single_step->_bdm_set_spr
    _bdm_continue->_bdm_set_spr
    _bdm_set_spr->_bdm_set_gpr
    _bdm_resume->_bdm_get_spr
    _bdm_get_spr->_bdm_get_gpr
    _bdm_save_regs->_bdm_get_gpr
    _bdm_restore_regs->_bdm_set_gpr
    _bdm_interrupt->_bdm_nop

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_gdb_process_command
    _gdb_process_command->_gdb_send
    _gdb_send_end->_gdb_hexstr
    _gdb_send->_gdb_hexstr
    _bdm_update_breakpoints->_bdm_get_spr
    _bdm_continue_single_step->_bdm_resume
    _bdm_continue->_bdm_resume
    _bdm_resume->_bdm_get_spr

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_gdb_process_command

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                94    94      0  379851
                                             58 BANK4     22    22      0
                                             64 BANK5      8     8      0
                                              0 BANK6     64    64      0
                _ConfigureOscillator
                            _InitApp
                           _bdm_init
                      _bdm_interrupt
                            _bdm_nop
                       _gdb_ahex2bin
                _gdb_process_command
                           _gdb_send
                          _led_flash
               _usb_arm_out_endpoint
              _usb_get_configuration
                 _usb_get_out_buffer
                           _usb_init
            _usb_out_endpoint_halted
          _usb_out_endpoint_has_data
 ---------------------------------------------------------------------------------
 (1) _usb_out_endpoint_has_data                            1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _usb_out_endpoint_halted                              1     1      0     916
                                              3 BANK1      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _usb_init                                             5     5      0    8972
                                             19 BANK1      5     5      0
                     _init_endpoints
                             _memset
               _reset_ep0_data_stage
 ---------------------------------------------------------------------------------
 (2) _reset_ep0_data_stage                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_endpoints                                       1     1      0    7896
                                             18 BANK1      1     1      0
                             ___bmul
                             _memset
                  _pic16_linear_addr
 ---------------------------------------------------------------------------------
 (3) _pic16_linear_addr                                   12    10      2    5771
                                              6 BANK1     12    10      2
                             ___bmul (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _usb_get_out_buffer                                   2     1      1    1049
                                              3 BANK1      2     1      1
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _usb_arm_out_endpoint                                 2     2      0    1093
                                              3 BANK1      2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _led_flash                                            8     6      2     227
                                              0 BANK1      8     6      2
 ---------------------------------------------------------------------------------
 (1) _gdb_process_command                                112   111      1  343021
                                             34 BANK4     24    23      1
                                              0 BANK5     64    64      0
                             ___bmul
                       _bdm_continue
           _bdm_continue_single_step
                       _bdm_get_data
                        _bdm_get_gpr
                        _bdm_get_spr
                           _bdm_init
                            _bdm_nop
                          _bdm_reset
                       _bdm_set_data
                        _bdm_set_gpr
                        _bdm_set_spr
             _bdm_update_breakpoints
                  _gdb_extract_bytes
                         _gdb_hexstr
                           _gdb_send
                      _gdb_send_data
                       _gdb_send_end
                     _gdb_send_start
 ---------------------------------------------------------------------------------
 (2) _gdb_send_start                                       6     5      1    4651
                                              9 BANK1      6     5      1
              _usb_get_configuration
                  _usb_get_in_buffer
               _usb_in_endpoint_busy
             _usb_in_endpoint_halted
                 _usb_send_in_buffer
 ---------------------------------------------------------------------------------
 (2) _gdb_send_end                                         3     3      0    7162
                                             21 BANK4      3     3      0
                         _gdb_hexstr
              _usb_get_configuration
                  _usb_get_in_buffer
               _usb_in_endpoint_busy
             _usb_in_endpoint_halted
                 _usb_send_in_buffer
 ---------------------------------------------------------------------------------
 (2) _gdb_send_data                                        6     5      1    6492
                                             11 BANK1      6     5      1
                             _memcpy
              _usb_get_configuration
                  _usb_get_in_buffer
               _usb_in_endpoint_busy
             _usb_in_endpoint_halted
                 _usb_send_in_buffer
 ---------------------------------------------------------------------------------
 (1) _gdb_send                                            13    11      2    9993
                                             21 BANK4     13    11      2
                         _gdb_hexstr
                             _memcpy
              _usb_get_configuration
                  _usb_get_in_buffer
               _usb_in_endpoint_busy
             _usb_in_endpoint_halted
                 _usb_send_in_buffer
 ---------------------------------------------------------------------------------
 (2) _usb_send_in_buffer                                   5     3      2    2530
                                              4 BANK1      5     3      2
                             ___bmul
             _usb_in_endpoint_halted
 ---------------------------------------------------------------------------------
 (3) _usb_in_endpoint_halted                               1     1      0     916
                                              3 BANK1      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _usb_in_endpoint_busy                                 1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _usb_get_in_buffer                                    4     1      3     916
                                              3 BANK1      4     1      3
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _usb_get_configuration                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6    1532
                                              0 BANK1     11     5      6
 ---------------------------------------------------------------------------------
 (2) _gdb_hexstr                                          29    21      8    2541
                                             29 BANK3      8     0      8
                                              0 BANK4     21    21      0
                       _bdm_get_data (ARG)
                        _bdm_get_gpr (ARG)
 ---------------------------------------------------------------------------------
 (2) _gdb_extract_bytes                                   16    12      4    1630
                                              0 BANK1     16    12      4
 ---------------------------------------------------------------------------------
 (2) _bdm_update_breakpoints                              18    18      0   52280
                                             30 BANK3      4     4      0
                                             14 BANK4     13    13      0
                             ___bmul
                             ___wmul
                        _bdm_get_spr
                        _bdm_set_spr
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    5236
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     894
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (2) _bdm_set_data                                        19    10      9   22095
                                             10 BANK3     19    10      9
                     _bdm_clk_serial
                   _bdm_restore_regs
                      _bdm_save_regs
                        _bdm_set_gpr
 ---------------------------------------------------------------------------------
 (2) _bdm_reset                                            3     3      0     178
                                              2 BANK1      3     3      0
                     _bdm_wait_ready
 ---------------------------------------------------------------------------------
 (2) _bdm_init                                             3     3      0       0
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _bdm_get_data                                        19    14      5   26505
                                             10 BANK3     19    14      5
                     _bdm_clk_serial
                        _bdm_get_gpr
                   _bdm_restore_regs
                      _bdm_save_regs
                        _bdm_set_gpr
 ---------------------------------------------------------------------------------
 (2) _bdm_continue_single_step                             8     8      0   71911
                                             24 BANK4      8     8      0
                        _bdm_get_spr
                         _bdm_resume
                        _bdm_set_spr
 ---------------------------------------------------------------------------------
 (2) _bdm_continue                                         8     8      0   71911
                                             24 BANK4      8     8      0
                        _bdm_get_spr
                         _bdm_resume
                        _bdm_set_spr
 ---------------------------------------------------------------------------------
 (3) _bdm_set_spr                                         30    22      8   24208
                                             10 BANK3     20    12      8
                                              0 BANK4     10    10      0
                             ___bmul (ARG)
                     _bdm_clk_serial
                   _bdm_restore_regs
                      _bdm_save_regs
                        _bdm_set_gpr
 ---------------------------------------------------------------------------------
 (3) _bdm_resume                                          12    10      2   26037
                                             26 BANK3      2     0      2
                                             14 BANK4     10    10      0
                     _bdm_clk_serial
                        _bdm_get_spr
 ---------------------------------------------------------------------------------
 (3) _bdm_get_spr                                         30    26      4   21618
                                             10 BANK3     16    12      4
                                              0 BANK4     14    14      0
                     _bdm_clk_serial
                        _bdm_get_gpr
                   _bdm_restore_regs
                      _bdm_save_regs
 ---------------------------------------------------------------------------------
 (4) _bdm_save_regs                                        0     0      0    5099
                        _bdm_get_gpr
 ---------------------------------------------------------------------------------
 (5) _bdm_get_gpr                                         18    14      4    5099
                                             36 BANK1      8     4      4
                                              0 BANK3     10    10      0
                     _bdm_clk_serial
 ---------------------------------------------------------------------------------
 (4) _bdm_restore_regs                                     0     0      0    5710
                        _bdm_set_gpr
 ---------------------------------------------------------------------------------
 (4) _bdm_set_gpr                                         22    14      8    5710
                                             36 BANK1     12     4      8
                                              0 BANK3     10    10      0
                     _bdm_clk_serial
 ---------------------------------------------------------------------------------
 (1) _gdb_ahex2bin                                         3     2      1     179
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _bdm_interrupt                                       16    16      0    8840
                                             10 BANK3     16    16      0
                     _bdm_clk_serial
                            _bdm_nop
 ---------------------------------------------------------------------------------
 (2) _bdm_nop                                             14    10      4    4373
                                             36 BANK1      4     0      4
                                              0 BANK3     10    10      0
                     _bdm_clk_serial
 ---------------------------------------------------------------------------------
 (5) _bdm_clk_serial                                      28    24      4    4258
                                              8 BANK1     28    24      4
                        _bdm_clk_bit
                     _bdm_wait_ready
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     897
                                              0 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (6) _bdm_wait_ready                                       2     0      2     178
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (6) _bdm_clk_bit                                          6     2      4     491
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  0     0      0   13768
                        _usb_service
 ---------------------------------------------------------------------------------
 (10) _usb_service                                         9     9      0   13768
                                             40 BANK0      9     9      0
                      _handle_ep0_in
                     _handle_ep0_out
                   _handle_ep0_setup
                      _reset_bd0_out
                          _stall_ep0
                        _stall_ep_in
                       _stall_ep_out
                           i1___bmul
                         i1_usb_init
 ---------------------------------------------------------------------------------
 (11) i1_usb_init                                          5     5      0    1854
                                              5 BANK0      5     5      0
                   i1_init_endpoints
                           i1_memset
             i1_reset_ep0_data_stage
 ---------------------------------------------------------------------------------
 (11) _reset_bd0_out                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _handle_ep0_setup                                    3     3      0    9015
                                             37 BANK0      3     3      0
                    _clear_ep0_stall
    _handle_standard_control_request
                          _stall_ep0
             i1_reset_ep0_data_stage
 ---------------------------------------------------------------------------------
 (12) _handle_standard_control_request                    26    26      0    8947
                                             11 BANK0     26    26      0
        _send_zero_length_packet_ep0
                          _stall_ep0
               _start_control_return
         _usb_application_get_string
                     _usb_halt_ep_in
                    _usb_halt_ep_out
                           i1___bmul
                   i1_init_endpoints
 ---------------------------------------------------------------------------------
 (12) i1_init_endpoints                                    3     3      0    1423
                                              4 BANK0      1     1      0
                           i1___bmul
                           i1_memset
                i1_pic16_linear_addr
 ---------------------------------------------------------------------------------
 (13) i1_pic16_linear_addr                                12    10      2     427
                                              6 COMMON     8     6      2
                                              0 BANK0      4     4      0
                           i1___bmul (ARG)
                           i1___wmul
 ---------------------------------------------------------------------------------
 (14) i1___wmul                                            6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (12) i1_memset                                            8     2      6     252
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (13) _usb_halt_ep_out                                     1     1      0     542
                                              3 COMMON     1     1      0
                       _stall_ep_out
                           i1___bmul
 ---------------------------------------------------------------------------------
 (11) _stall_ep_out                                        1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _usb_halt_ep_in                                      1     1      0     974
                                              4 COMMON     1     1      0
                        _stall_ep_in
                           i1___bmul
 ---------------------------------------------------------------------------------
 (11) _stall_ep_in                                         1     1      0     476
                                              3 COMMON     1     1      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (13) _usb_application_get_string                          4     1      3     353
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (13) _start_control_return                               13     7      6    3663
                                             11 COMMON     2     2      0
                                              0 BANK0     11     5      6
               _usb_send_in_buffer_0
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (12) _clear_ep0_stall                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _handle_ep0_out                                      6     6      0     556
                                             11 COMMON     2     2      0
                                              0 BANK0      4     4      0
        _send_zero_length_packet_ep0
                          _stall_ep0
                           i1_memcpy
             i1_reset_ep0_data_stage
 ---------------------------------------------------------------------------------
 (11) _stall_ep0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _send_zero_length_packet_ep0                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _handle_ep0_in                                       3     3      0    1255
                                             11 COMMON     3     3      0
               _usb_send_in_buffer_0
                           i1_memcpy
             i1_reset_ep0_data_stage
 ---------------------------------------------------------------------------------
 (12) i1_reset_ep0_data_stage                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_memcpy                                           11     5      6     354
                                              0 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (14) _usb_send_in_buffer_0                                3     1      2     766
                                              4 COMMON     3     1      2
           i1_usb_in_endpoint_halted
 ---------------------------------------------------------------------------------
 (15) i1_usb_in_endpoint_halted                            1     1      0     432
                                              3 COMMON     1     1      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (13) i1___bmul                                            3     2      1     410
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _bdm_init
   _bdm_interrupt
     _bdm_clk_serial
       _bdm_clk_bit
       _bdm_wait_ready
       _memset
     _bdm_nop
       _bdm_clk_serial
         _bdm_clk_bit
         _bdm_wait_ready
         _memset
   _bdm_nop
     _bdm_clk_serial
       _bdm_clk_bit
       _bdm_wait_ready
       _memset
   _gdb_ahex2bin
   _gdb_process_command
     ___bmul
     _bdm_continue
       _bdm_get_spr
         _bdm_clk_serial
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
         _bdm_get_gpr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
         _bdm_restore_regs
           _bdm_set_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
         _bdm_save_regs
           _bdm_get_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
       _bdm_resume
         _bdm_clk_serial
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
         _bdm_get_spr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
           _bdm_get_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
           _bdm_restore_regs
             _bdm_set_gpr
               _bdm_clk_serial
                 _bdm_clk_bit
                 _bdm_wait_ready
                 _memset
           _bdm_save_regs
             _bdm_get_gpr
               _bdm_clk_serial
                 _bdm_clk_bit
                 _bdm_wait_ready
                 _memset
       _bdm_set_spr
         ___bmul (ARG)
         _bdm_clk_serial (ARG)
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
         _bdm_restore_regs (ARG)
           _bdm_set_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
         _bdm_save_regs (ARG)
           _bdm_get_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
         _bdm_set_gpr (ARG)
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
     _bdm_continue_single_step
       _bdm_get_spr
         _bdm_clk_serial
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
         _bdm_get_gpr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
         _bdm_restore_regs
           _bdm_set_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
         _bdm_save_regs
           _bdm_get_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
       _bdm_resume
         _bdm_clk_serial
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
         _bdm_get_spr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
           _bdm_get_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
           _bdm_restore_regs
             _bdm_set_gpr
               _bdm_clk_serial
                 _bdm_clk_bit
                 _bdm_wait_ready
                 _memset
           _bdm_save_regs
             _bdm_get_gpr
               _bdm_clk_serial
                 _bdm_clk_bit
                 _bdm_wait_ready
                 _memset
       _bdm_set_spr
         ___bmul (ARG)
         _bdm_clk_serial (ARG)
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
         _bdm_restore_regs (ARG)
           _bdm_set_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
         _bdm_save_regs (ARG)
           _bdm_get_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
         _bdm_set_gpr (ARG)
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
     _bdm_get_data
       _bdm_clk_serial
         _bdm_clk_bit
         _bdm_wait_ready
         _memset
       _bdm_get_gpr
         _bdm_clk_serial
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
       _bdm_restore_regs
         _bdm_set_gpr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
       _bdm_save_regs
         _bdm_get_gpr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
       _bdm_set_gpr
         _bdm_clk_serial
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
     _bdm_get_gpr
       _bdm_clk_serial
         _bdm_clk_bit
         _bdm_wait_ready
         _memset
     _bdm_get_spr
       _bdm_clk_serial
         _bdm_clk_bit
         _bdm_wait_ready
         _memset
       _bdm_get_gpr
         _bdm_clk_serial
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
       _bdm_restore_regs
         _bdm_set_gpr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
       _bdm_save_regs
         _bdm_get_gpr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
     _bdm_init
     _bdm_nop
       _bdm_clk_serial
         _bdm_clk_bit
         _bdm_wait_ready
         _memset
     _bdm_reset
       _bdm_wait_ready
     _bdm_set_data
       _bdm_clk_serial
         _bdm_clk_bit
         _bdm_wait_ready
         _memset
       _bdm_restore_regs
         _bdm_set_gpr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
       _bdm_save_regs
         _bdm_get_gpr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
       _bdm_set_gpr
         _bdm_clk_serial
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
     _bdm_set_gpr
       _bdm_clk_serial
         _bdm_clk_bit
         _bdm_wait_ready
         _memset
     _bdm_set_spr
       ___bmul (ARG)
       _bdm_clk_serial (ARG)
         _bdm_clk_bit
         _bdm_wait_ready
         _memset
       _bdm_restore_regs (ARG)
         _bdm_set_gpr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
       _bdm_save_regs (ARG)
         _bdm_get_gpr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
       _bdm_set_gpr (ARG)
         _bdm_clk_serial
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
     _bdm_update_breakpoints
       ___bmul
       ___wmul
       _bdm_get_spr
         _bdm_clk_serial
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
         _bdm_get_gpr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
         _bdm_restore_regs
           _bdm_set_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
         _bdm_save_regs
           _bdm_get_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
       _bdm_set_spr
         ___bmul (ARG)
         _bdm_clk_serial (ARG)
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
         _bdm_restore_regs (ARG)
           _bdm_set_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
         _bdm_save_regs (ARG)
           _bdm_get_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
         _bdm_set_gpr (ARG)
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
     _gdb_extract_bytes
     _gdb_hexstr
       _bdm_get_data (ARG)
         _bdm_clk_serial
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
         _bdm_get_gpr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
         _bdm_restore_regs
           _bdm_set_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
         _bdm_save_regs
           _bdm_get_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
         _bdm_set_gpr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
       _bdm_get_gpr (ARG)
         _bdm_clk_serial
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
     _gdb_send
       _gdb_hexstr
         _bdm_get_data (ARG)
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
           _bdm_get_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
           _bdm_restore_regs
             _bdm_set_gpr
               _bdm_clk_serial
                 _bdm_clk_bit
                 _bdm_wait_ready
                 _memset
           _bdm_save_regs
             _bdm_get_gpr
               _bdm_clk_serial
                 _bdm_clk_bit
                 _bdm_wait_ready
                 _memset
           _bdm_set_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
         _bdm_get_gpr (ARG)
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
       _memcpy
       _usb_get_configuration
       _usb_get_in_buffer
         ___bmul
       _usb_in_endpoint_busy
       _usb_in_endpoint_halted
         ___bmul
       _usb_send_in_buffer
         ___bmul
         _usb_in_endpoint_halted
           ___bmul
     _gdb_send_data
       _memcpy
       _usb_get_configuration
       _usb_get_in_buffer
         ___bmul
       _usb_in_endpoint_busy
       _usb_in_endpoint_halted
         ___bmul
       _usb_send_in_buffer
         ___bmul
         _usb_in_endpoint_halted
           ___bmul
     _gdb_send_end
       _gdb_hexstr
         _bdm_get_data (ARG)
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
           _bdm_get_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
           _bdm_restore_regs
             _bdm_set_gpr
               _bdm_clk_serial
                 _bdm_clk_bit
                 _bdm_wait_ready
                 _memset
           _bdm_save_regs
             _bdm_get_gpr
               _bdm_clk_serial
                 _bdm_clk_bit
                 _bdm_wait_ready
                 _memset
           _bdm_set_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
         _bdm_get_gpr (ARG)
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
       _usb_get_configuration
       _usb_get_in_buffer
         ___bmul
       _usb_in_endpoint_busy
       _usb_in_endpoint_halted
         ___bmul
       _usb_send_in_buffer
         ___bmul
         _usb_in_endpoint_halted
           ___bmul
     _gdb_send_start
       _usb_get_configuration
       _usb_get_in_buffer
         ___bmul
       _usb_in_endpoint_busy
       _usb_in_endpoint_halted
         ___bmul
       _usb_send_in_buffer
         ___bmul
         _usb_in_endpoint_halted
           ___bmul
   _gdb_send
     _gdb_hexstr
       _bdm_get_data (ARG)
         _bdm_clk_serial
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
         _bdm_get_gpr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
         _bdm_restore_regs
           _bdm_set_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
         _bdm_save_regs
           _bdm_get_gpr
             _bdm_clk_serial
               _bdm_clk_bit
               _bdm_wait_ready
               _memset
         _bdm_set_gpr
           _bdm_clk_serial
             _bdm_clk_bit
             _bdm_wait_ready
             _memset
       _bdm_get_gpr (ARG)
         _bdm_clk_serial
           _bdm_clk_bit
           _bdm_wait_ready
           _memset
     _memcpy
     _usb_get_configuration
     _usb_get_in_buffer
       ___bmul
     _usb_in_endpoint_busy
     _usb_in_endpoint_halted
       ___bmul
     _usb_send_in_buffer
       ___bmul
       _usb_in_endpoint_halted
         ___bmul
   _led_flash
   _usb_arm_out_endpoint
     ___bmul
   _usb_get_configuration
   _usb_get_out_buffer
     ___bmul
   _usb_init
     _init_endpoints
       ___bmul
       _memset
       _pic16_linear_addr
         ___bmul (ARG)
         ___wmul (ARG)
     _memset
     _reset_ep0_data_stage
   _usb_out_endpoint_halted
     ___bmul
   _usb_out_endpoint_has_data

 _isr (ROOT)
   _usb_service
     _handle_ep0_in
       _usb_send_in_buffer_0
         i1_usb_in_endpoint_halted
           i1___bmul
       i1_memcpy
       i1_reset_ep0_data_stage
     _handle_ep0_out
       _send_zero_length_packet_ep0
       _stall_ep0
       i1_memcpy
       i1_reset_ep0_data_stage
     _handle_ep0_setup
       _clear_ep0_stall
       _handle_standard_control_request
         _send_zero_length_packet_ep0
         _stall_ep0
         _start_control_return
           _usb_send_in_buffer_0
             i1_usb_in_endpoint_halted
               i1___bmul
           i1_memcpy
         _usb_application_get_string
         _usb_halt_ep_in
           _stall_ep_in
             i1___bmul
           i1___bmul
         _usb_halt_ep_out
           _stall_ep_out
           i1___bmul
         i1___bmul
         i1_init_endpoints
           i1___bmul
           i1_memset
           i1_pic16_linear_addr
             i1___bmul (ARG)
             i1___wmul (ARG)
       _stall_ep0
       i1_reset_ep0_data_stage
     _reset_bd0_out
     _stall_ep0
     _stall_ep_in
       i1___bmul
     _stall_ep_out
     i1___bmul
     i1_usb_init
       i1_init_endpoints
         i1___bmul
         i1_memset
         i1_pic16_linear_addr
           i1___bmul (ARG)
           i1___wmul (ARG)
       i1_memset
       i1_reset_ep0_data_stage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            38      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               38     31      38       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               30     30      30       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2                0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               25     25      25      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     50      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50     48      50      15      100.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50     40      50      17      100.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      2F      19       58.8%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1BA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              20      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1BA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue May 22 23:29:01 2018

                                    _stall_ep_in 0F3B                          usb_arm_out_endpoint@pid 00A3  
                   __size_of_gdb_process_command 06F5                                     _stall_ep_out 0F76  
                            ??_pic16_linear_addr 00A8                                   ___bmul@product 00A1  
                     ??i1_usb_in_endpoint_halted 0073                                      __CFG_CP$OFF 0000  
                           _usb_in_endpoint_busy 17AE                         __end_of_bdm_restore_regs 1E67  
                            ___wmul@multiplicand 00A2                                 i1___wmul@product 0074  
                         ??_start_control_return 007B                                      _usb_service 09A5  
                                            l428 1A73                                              l681 12EB  
                                            l914 04E7                                              l907 041E  
                                            l676 12E1                                              l677 12E3  
                                            l775 10B2                                              l887 02F2  
                                            l994 16DF                                              _UIE 0E92  
                                            _UIR 0E90                                              _bds 0020  
                 __size_of_usb_get_configuration 0003                                              _isr 0004  
                        __size_of_gdb_send_start 0042                    __end_of_usb_get_configuration 17AE  
                           __end_of_gdb_ahex2bin 0836                                     __CFG_BORV$HI 0000  
                                            wreg 0009                                   _usb_halt_ep_in 0F4E  
                 __end_ofi1_reset_ep0_data_stage 0E96                                             PL401 1CFC  
                                           PL411 1D04                                             PL403 0FA9  
                                           PL421 0FB1                                             PL413 13FB  
                                           PL405 1E71                                             PL415 17E1  
                                           PL407 17DA                                             PL351 1367  
                                           PL417 1400                                             PL409 13F5  
                                           PL361 07EE                                             PL353 1381  
                                           PL419 0FFB                                             PL371 17CE  
                                           PL363 0898                                             PL355 1FED  
                                           PL381 13CC                                             PL373 0FF5  
                                           PL365 1CE2                                             PL357 1395  
                                           PL391 13DE                                             PL383 0FA1  
                                           PL375 13B4                                             PL367 1A76  
                                           PL359 13A5                                             PL393 13E5  
                                           PL385 1CE8                                             PL377 0F9B  
                                           PL369 17C1                                     __CFG_LVP$OFF 0000  
                                           PL395 1CF0                                             PL387 1E67  
                                           PL379 13C0                                             PL397 13EC  
                                           PL389 13D7                                             PL399 1CF6  
                                    main@buf_end 02E5                             bdm_clk_serial@reslen 00C0  
                                           l1011 0798                                             l1013 07AA  
                                           l1019 082F                                             l5111 0074  
                                           l4065 178F                                             l5121 008B  
                                           l5025 1A4D                                             l3603 12D7  
                                           l3611 11D6                                             l5203 01F2  
                                           l5123 008C                                             l4331 1BFB  
                                           l3621 11F6                                             l4317 1F32  
                                           l4237 1FB5                                             l5133 009E  
                                           l5037 1A60                                             l5045 1A3C  
                                           l3631 1232                                             l3623 11FE  
                                           l5063 0868                                             l3711 134A  
                                           l4271 1B5D                                             l4255 0701  
                                           l4247 1FD8                                             l4511 16EB  
                                           l5311 0438                                             l5231 02B9  
                                           l5223 027F                                             l5215 0244  
                                           l5143 00BA                                             l3633 1234  
                                           l5065 0848                                             l4601 1D3C  
                                           l5209 01FE                                             l5153 00CE  
                                           l5161 011D                                             l3635 1236  
                                           l5067 086A                                             l3707 1341  
                                           l4283 1B83                                             l5331 048B  
                                           l5323 044A                                             l5251 0309  
                                           l5235 02D6                                             l5227 029C  
                                           l5219 0262                                             l5139 00AB  
                                           l3637 123A                                             l3725 1DC4  
                                           l4605 1D43                                             l4533 1730  
                                           l4525 171B                                             l5421 05EA  
                                           l5413 05EB                                             l5405 05BF  
                                           l5317 043E                                             l5309 040D  
                                           l5181 017E                                             l4357 1C3F  
                                           l3639 123E                                             l3647 1245  
                                           l5079 0829                                             l4279 1B7E  
                                           l4607 1D4E                                             l4527 171E  
                                           l5335 04B9                                             l5239 02FA  
                                           l5183 0180                                             l5175 0178  
                                           l5191 01C3                                             l3593 12F6  
                                           l3649 1253                                             l4721 141D  
                                           l5441 0650                                             l5409 05E5  
                                           l5425 0611                                             l5353 0523  
                                           l5265 0346                                             l5257 0315  
                                           l5185 0188                                             l5177 017A  
                                           l3675 12B4                                             l3667 1271  
                                           l4571 1D76                                             l4539 175E  
                                           l5451 068A                                             l5443 0651  
                                           l5371 0554                                             l5363 0525  
                                           l5355 0526                                             l5427 061C  
                                           l5339 04EF                                             l5275 0399  
                                           l5267 0394                                             l5179 017C  
                                           l5195 01E5                                             l3669 12A5  
                                           l4573 1D78                                             l4581 1D8C  
                                           l4661 108F                                             l4725 142A  
                                           l4717 140F                                             l4741 1ECF  
                                           l5277 03E2                                             l5605 15AC  
                                           l4575 1D7A                                             l4663 10A2  
                                           l4671 10B8                                             l4647 1074  
                                           l5455 068C                                             l5471 06C9  
                                           l5383 0597                                             l5391 05BB  
                                           l5367 0550                                             l5295 0403  
                                           l5279 03E5                                             l5615 15E1  
                                           l5607 15AD                                             l5543 150E  
                                           l5535 14F6                                             l5527 14D3  
                                           l4497 088A                                             l3785 1E3D  
                                           l4665 10A5                                             l4673 10EE  
                                           l5465 068E                                             l5457 068F  
                                           l5289 03F7                        __end_of_pic16_linear_addr 1CC3  
                                           l5609 15BF                                             l5545 1510  
                                           l4587 1DA4                                             l4579 1D81  
                                           l4667 10A8                                             l4771 07C4  
                                           l5483 06E5                                             l5387 05A8  
                                           l5395 05BD                                             l5643 1676  
                                           l5651 1588                                             l5563 1554  
                                           l5571 1530                                             l5539 1501  
                                           l4597 1D38                                             l3789 0786  
                                           l4669 10AB                                             l5477 06D7  
                                           l5469 06BE                                             l5397 05C0  
                                           l5661 1684                                             l5653 1680  
                                           l5629 1614                                             l5573 1579  
                                           l3967 11B1                                             l4599 1D3A  
                                           l3975 1CC5                                             l4695 1E80  
                                           l5663 16C1                                             l5671 16CC  
                                           l5567 1575                                             l5489 06FA  
                                           l5753 01A5                                             l5665 16C4  
                                           l5649 167D                                             l5593 1590  
                                           l5569 1577                                             l3979 1CCB  
                                           l5755 01BE                                             l5595 1591  
                                           ?_isr 0070                                             l5757 01AA  
                                           l5597 15A7                                             l5759 10E0  
                                           l4879 1BC1                                             l4989 0FD9  
                                           STR_1 19AD                                             STR_2 19A9  
                                           STR_3 1960                                             STR_4 19A9  
                                           STR_5 19B1                                             STR_6 19B1  
                                           STR_7 19B1                                             STR_8 19B1  
                                           STR_9 19B1                                             u3035 1154  
                                           u3045 116B                                             u3055 117A  
                                           u4040 07B6                                             u4045 07B2  
                                           u5005 06B0                                             u3425 072E  
                                           u4305 1A46                             _ep0_data_stage_direc 006D  
                                           u5050 14C1                                             u2715 127B  
                                           u3435 0745                                             u2725 12BF  
                                           u3445 0754                                             u4335 0856  
                                           u3480 1F57                                             u4360 0014  
                                           u3490 1F6B                                             u2755 1321  
                                           u4435 0118                                             u5235 15DD  
                                           u3485 1F53                                             u5165 153A  
                                           u5317 14ED                           _usb_in_endpoint_halted 1F12  
                                           u3495 1F66                                             u4455 0156  
                                           u5327 1A52                                             u5255 1669  
                                           u2785 1DD8                                             u5337 1A65  
                                           u5347 103D                                             u5357 104C  
                                           u5285 1699                                             u5367 1059  
                                           u4815 054C                                             u4680 042A  
                                           u5377 1066                                             _SCS0 04C8  
                                           u5387 07D7                                             _SCS1 04C9  
                                           u5397 07E7                                             u4685 0426  
                                           u4895 05E1                                             u4985 0677  
                                           _UEP0 0E98                                             _UEIE 0E97  
                                   __CFG_WRT$OFF 0000                                             _addr 036A  
                                    main@msg_len 026D                                             _main 14B9  
                                           fsr0h 0005                                             fsr1h 0007  
                                           fsr0l 0004                                             indf0 0000  
                                           indf1 0001                                             fsr1l 0006  
                                           btemp 007E                                    __CFG_BOREN$ON 0000  
                                           ltemp 007E                                      main@out_buf 02E0  
                                           start 000A                                             ttemp 007E  
                                           wtemp 007E                    __size_of_usb_arm_out_endpoint 003F  
                                  __CFG_IESO$OFF 0000                                ___bmul@multiplier 00A2  
                                ?_bdm_wait_ready 00A0                                    __CFG_MCLRE$ON 0000  
                         gdb_process_command@msg 0258                                  _usb_halt_ep_out 0F62  
                                     i1_usb_init 08C7                             __end_of_gdb_send_end 1F12  
                                __end_of_InitApp 17F2                                     main@checksum 0266  
                           __size_of_bdm_clk_bit 001D                            ?_usb_in_endpoint_busy 0070  
                                          ??_isr 007E                             __size_of_bdm_get_gpr 005E  
                           __size_of_bdm_get_spr 0097                                i1init_endpoints@i 003C  
                                          ?_main 0070                                            STR_10 19A8  
                                  __CFG_WDTE$OFF 0000                                            _IRCF0 04CA  
                                          _IRCF1 04CB                                            _IRCF2 04CC  
                                          _IRCF3 04CD                        ??_usb_out_endpoint_halted 00A3  
                                          i1l170 0DCF                                            i1l236 0284  
                                          i1l174 0DE3                                            i1l249 003B  
                                     i1memcpy@d1 0070                                            i1l291 0CE6  
                                          i1l285 09D6                                            i1l296 0DAC  
                                          i1l288 0DAE                       ?_usb_out_endpoint_has_data 0070  
                                     i1memcpy@s1 0072                                            _UADDR 0E96  
                           __size_of_bdm_set_gpr 004B                           __end_of_usb_halt_ep_in 0F62  
                           __size_of_bdm_set_spr 0082                                  __end_of_bdm_nop 0898  
                                          _TRISA 008C                                            _TRISC 008E  
                            _ConfigureOscillator 17B7                                       i1memset@p1 0070  
                                  bdm_get_gpr@in 01CB                                   __CFG_FCMEN$OFF 0000  
                                  bdm_get_spr@in 0229                                            _str00 195C  
                             _usb_send_in_buffer 1FA7                                            main@c 0262  
                                          main@e 02E2                                            main@i 02E7  
                                          main@k 02E4                                            main@s 026F  
                               __end_ofi1___bmul 0DC0                                 __end_ofi1___wmul 0F9B  
                                          ltemp0 007E                                            ltemp1 0082  
                                          ltemp2 0086                                            ltemp3 0080  
                   __size_ofi1_pic16_linear_addr 003A                                            ttemp0 007E  
                                          ttemp1 0081                                            ttemp2 0084  
                                          ttemp3 0087                                            ttemp4 007F  
                                          status 0003                              i1___wmul@multiplier 0070  
                                          wtemp0 007E                                            wtemp1 0080  
                                          wtemp2 0082                                            wtemp3 0084  
                                          wtemp4 0086                                            wtemp5 0088  
                                          wtemp6 007F                                 __end_ofi1_memcpy 0E8C  
                               __end_ofi1_memset 0ECF                start_control_return@bytes_to_send 0042  
                                   __end_ofPL401 1D04                                     __end_ofPL411 1D09  
                                   __end_ofPL403 0FB1                                     __end_ofPL421 0FB6  
                                   __end_ofPL413 1400                                     __end_ofPL405 1E79  
                                   __end_ofPL415 17E6                                     __end_ofPL407 17E1  
                                   __end_ofPL351 1381                                     __end_ofPL417 1405  
                                   __end_ofPL409 13FB                                     __end_ofPL361 07FD  
                                   __end_ofPL353 1395                                     __end_ofPL419 1000  
                                   __end_ofPL371 17DA                                     __end_ofPL363 08A6  
                                   __end_ofPL355 2000                                     __end_ofPL381 13D7  
                                   __end_ofPL373 0FFB                                     __end_ofPL365 1CE8  
                                   __end_ofPL357 13A5                                     __end_ofPL391 13E5  
                                   __end_ofPL383 0FA9                                     __end_ofPL375 13C0  
                                   __end_ofPL367 1A83                                     __end_ofPL359 13B4  
                                   __end_ofPL393 13EC                                     __end_ofPL385 1CF0  
                                   __end_ofPL377 0FA1                                     __end_ofPL369 17CE  
                                   __end_ofPL395 1CF6                                     __end_ofPL387 1E71  
                                   __end_ofPL379 13CC                                     __end_ofPL397 13F5  
                                   __end_ofPL389 13DE                                     __end_ofPL399 1CFC  
                            ?_usb_send_in_buffer 00A4                       usb_get_out_buffer@endpoint 00A4  
                           ?_ConfigureOscillator 0070                            handle_ep0_out@pkt_len 003A  
                       __end_ofi1_init_endpoints 09A5                                  __initialization 1458  
                                 bdm_clk_bit@res 00A4                                     __end_of_main 16D1  
                          __end_of_gdb_send_data 1458                  usb_out_endpoint_halted@endpoint 00A3  
                      usb_get_in_buffer@endpoint 00A6                                   __CFG_LPBOR$OFF 0000  
                                         ??_main 025A                            handle_ep0_setup@setup 005E  
                          __size_of_bdm_get_data 0067                             ??_usb_send_in_buffer 00A6  
                                ?_usb_halt_ep_in 0070                              __CFG_USBLSCLK$48MHz 0000  
                          __size_of_bdm_continue 0070                                bdm_set_gpr@reg_nr 00C4  
                                _cdc_data_string 18EE                __size_of_bdm_continue_single_step 006A  
                                   _addr_pending 036B                                    main@buf_start 02E6  
                      ?_bdm_continue_single_step 0070                       __size_of_pic16_linear_addr 0039  
                      bdm_update_breakpoints@reg 0236                                           i1l4023 095A  
                                         i1l4201 022C                                           i1l4113 00D4  
                                         i1l4105 00B9                                           i1l4211 026C  
                                         i1l4203 0237                                           i1l4131 011A  
                                         i1l4123 00EF                                           i1l4115 00DB  
                                         i1l4107 00BC                                           i1l4141 0148  
                                         i1l4117 00DE                                           i1l4207 0257  
                                         i1l4151 016D                                           i1l4143 0155  
                                         i1l4135 0139                                           i1l4127 010D  
                                         i1l4119 00E1                                           i1l4071 0009  
                                         i1l4209 0261                                           i1l4153 016E  
                                         i1l4145 015E                                           i1l4137 0140  
                                         i1l4129 0118                                           i1l4073 0014  
                                         i1l4411 000F                                           i1l4403 0000  
                                         i1l4171 01B8                                           i1l4139 0142  
                                         i1l4083 0053                                           i1l4075 001E  
                                         i1l4067 0000                                           i1l4421 0039  
                                         i1l4413 001C                                           i1l4181 01E2  
                                         i1l4165 0199                                           i1l4093 008A  
                                         i1l4077 0030                                           i1l4069 0001  
                                         i1l4423 003D                                           i1l4191 0202  
                                         i1l4183 01E4                                           i1l4175 01C5  
                                         i1l4167 019A                                           i1l4095 0094  
                                         i1l4079 0035                                           i1l4441 0008  
                                         i1l4425 0043                                           i1l4417 0026  
                                         i1l4185 01ED                                           i1l4177 01D0  
                                         i1l4089 0064                                           i1l4451 0024  
                                         i1l4419 0036                                           i1l4187 01F3  
                                         i1l4179 01DB                                           i1l4461 004B  
                                         i1l4453 0034                                           i1l4445 0011  
                                         i1l4437 0000                                           i1l4429 004F  
                                         i1l4197 0210                                           i1l4189 01FE  
                                         i1l4381 0017                                           i1l4373 0000  
                                         i1l4471 0063                                           i1l4463 0050  
                                         i1l4455 0039                                           i1l4447 001A  
                                         i1l4439 0005                                           i1l3903 0F0A  
                                         i1l4199 0223                                           i1l4383 0019  
                                         i1l4375 0008                                           i1l4457 003E  
                                         i1l3913 0F19                                           i1l3753 0F8E  
                                         i1l4393 002F                                           i1l4377 0010  
                                         i1l3683 0DB6                                           i1l3827 0E70  
                                         i1l4459 0045                                           i1l3851 0DCB  
                                         i1l3931 0F37                                           i1l3923 0F28  
                                         i1l3835 0EBC                                           i1l4395 0033  
                                         i1l4379 0013                                           i1l4469 005E  
                                         i1l3749 0F88                                           i1l4389 0020  
                                         i1l3855 0DE0                                           i1l4815 08E8  
                                         i1l3769 0E9C                                           i1l3779 0EB0  
                                         i1l3867 0E1A                                           i1l3883 0EEE  
                                         i1l3893 0EFB                                           i1l4917 09B2  
                                         i1l4909 09AC                                           i1l4953 0D62  
                                         i1l4945 0CE4                                           i1l4937 0C8D  
                       _start_control_return$602 003E                         _start_control_return$603 0040  
                                         i1l4963 0D94                                           i1l4947 0CE9  
                                         i1l3997 0922                                           u410_25 09D2  
                          __size_of_bdm_set_data 0054                                           u290_25 0DD9  
                                         u291_25 0DEB                                           u292_25 0E14  
                                 bdm_get_data@in 01E3                      __size_of_usb_get_out_buffer 0018  
                       __size_of_clear_ep0_stall 0004                          __end_of_usb_halt_ep_out 0F76  
                   _ep0_data_stage_buf_remaining 0069                                           _SPLLEN 04CF  
                               __end_of_bdm_init 07EE                        _ep0_data_stage_out_buffer 006E  
                               ??_bdm_clk_serial 00AC                                 _handle_ep0_setup 0000  
                __end_of_usb_out_endpoint_halted 1800                                        ??_InitApp 00A0  
                          ??_ConfigureOscillator 00A0                                 __end_of_gdb_send 1787  
                                 bdm_get_gpr@out 01D0                                   __CFG_PWRTE$OFF 0000  
                                  bdm_set_gpr@in 01CB                                      ?i1_usb_init 0070  
                                         ___bmul 0783                           ??_usb_in_endpoint_busy 00A0  
                                  bdm_set_spr@in 0225                                   bdm_get_spr@reg 01D5  
                                   _bdm_get_data 1D5D                                   bdm_get_spr@out 0224  
                                 bdm_get_spr@spr 0220                                           ___wmul 1CC3  
                                 __CFG_STVREN$ON 0000                                    bdm_resume@out 0233  
            handle_standard_control_request@desc 004F                                           _ep_buf 03BA  
                                   _bdm_continue 1AED                                           _memcpy 1787  
                                      ??_bdm_nop 00C8                                           _memset 12F2  
                                   usb_service@i 0066                            __size_of_gdb_ahex2bin 0015  
                            gdb_send_data@chksum 00AB                            __end_of_reset_bd0_out 0F86  
                                 _gdb_send_start 1E79                                     _bdm_set_data 1D09  
                               __end_of_usb_init 1BF5                              _gdb_process_command 000C  
                           gdb_send_start@chksum 00A9                          __end_of__initialization 14B6  
                         i1pic16_linear_addr@low 0039                               gdb_send@reply_type 023E  
                         i1pic16_linear_addr@ptr 0076                   __end_of_this_device_descriptor 195C  
                              bdm_clk_serial@len 00B8                                bdm_clk_serial@res 00BE  
                          __size_of_gdb_send_end 0057                                bdm_clk_serial@out 00AA  
                                   _check_freeze 02ED                     __end_of_usb_send_in_buffer_0 0EB8  
                            ___bmul@multiplicand 00A0                                     _gdb_ahex2bin 0821  
                                   ?_stall_ep_in 0070                             ?_gdb_process_command 0242  
                                 __pcstackCOMMON 0070                                     __pidataBANK5 0000  
                                   __pidataBANK6 0000                                     __pidataBANK7 0000  
                             __size_of_bdm_reset 003C                                    __end_of_str00 1960  
                                    i1usb_init@i 003F                                ?_bdm_restore_regs 0070  
                        __end_of_cdc_data_string 1914                           __end_of_gdb_send_start 1EBB  
                                      ?i1___bmul 0070                                     ?_usb_service 0070  
                                      ?i1___wmul 0070                              handle_ep0_setup@res 005D  
                             ??_bdm_restore_regs 00D0                                    stall_ep_in@ep 0073  
                                      ?i1_memcpy 0070                                        ?i1_memset 0070  
                        ?_usb_in_endpoint_halted 0070                                  gdb_ahex2bin@LSB 00A0  
                                gdb_ahex2bin@MSB 00A2                            __end_of_handle_ep0_in 0000  
                             __size_of_led_flash 003C                                 i1___bmul@product 0072  
                                   _gdb_send_end 1EBB                              __size_ofi1_usb_init 0055  
                                     _bdm_resume 1B5D                                  _g_configuration 006F  
                                     __pbssBANK0 0069                                       __pbssBANK5 02ED  
                                     __pbssBANK6 0360                                       __pbssBANK7 03A0  
                                bdm_clk_serial@n 00C2                                  bdm_clk_serial@x 00B4  
                               ??_bdm_wait_ready 00A2                                 ?_usb_halt_ep_out 0070  
                  __size_of_reset_ep0_data_stage 000A                                       _gdb_hexstr 1F20  
                                _gdb_hexstr$1711 0230                             pic16_linear_addr@low 00AF  
                           pic16_linear_addr@ptr 00A6                            ??_gdb_process_command 0243  
                                     __pmaintext 14B9                                   bdm_interrupt@c 01D9  
                                 bdm_interrupt@x 01D5                                ??_clear_ep0_stall 0070  
                                        ?___bmul 00A0                                 bdm_interrupt@out 01E0  
                                __CFG_PLLMULT$3x 0000                                          ?___wmul 00A0  
                                     __pintentry 0004                                _usb_get_in_buffer 1F97  
                                        ?_memcpy 00A0                                          ?_memset 00A0  
                        __size_of_handle_ep0_out 0000                           __size_of_bdm_interrupt 003A  
                       ??_bdm_update_breakpoints 01E9                                  ?_gdb_send_start 00A9  
                        _ep0_data_stage_callback 006B                               ?_usb_get_in_buffer 00A3  
                            i1_pic16_linear_addr 0E2E                                       ??i1___bmul 0071  
                                     ??i1___wmul 0074                                  _fake_serial_num 1800  
                              _handle_ep0_in$680 007B                     __end_of_usb_arm_out_endpoint 0FF5  
                  __size_of_start_control_return 0069                                       _ep_buffers 2080  
                    ??_usb_out_endpoint_has_data 00A0                                        ?_bdm_init 0070  
                         __size_of_bdm_save_regs 002E                                       ??i1_memcpy 0076  
                 __end_of_usb_in_endpoint_halted 1F20                                       ??i1_memset 0076  
                                      ?_gdb_send 0235                               gdb_extract_bytes@e 00A0  
                             gdb_extract_bytes@i 00AE                               gdb_extract_bytes@j 00AD  
                             gdb_extract_bytes@k 00AF                               gdb_extract_bytes@s 00A8  
                             gdb_extract_bytes@x 00A9                              ??_usb_get_in_buffer 00A6  
                                bdm_get_data@val 01DA                                  bdm_get_data@out 01DE  
                             __size_of_stall_ep0 0005                            _usb_get_configuration 17AB  
              __size_ofi1_usb_in_endpoint_halted 000C                                __end_of_bdm_reset 1072  
                      ?i1_usb_in_endpoint_halted 0070                                          _UIEbits 0E92  
                                        _UIRbits 0E90                             ?i1_pic16_linear_addr 0076  
                                 bdm_set_data@in 01E3                     ?_send_zero_length_packet_ep0 0070  
                                   _break_points 03A0                                          _InitApp 17E6  
                                     bdm_nop@out 01D0                                   bdm_set_gpr@out 01D0  
                                  ??_bdm_clk_bit 00A4                                    ??_bdm_get_gpr 00C8  
                      __end_of_usb_get_in_buffer 1FA7                                    ??_bdm_get_spr 01D9  
                              ?i1_init_endpoints 0070                          __size_of_init_endpoints 0095  
                                __size_of___bmul 000D                                          _ep0_buf 02E8  
                              __end_of_led_flash 1A76                                   bdm_set_spr@reg 01D5  
                                __size_of___wmul 0015                                   bdm_set_spr@out 0220  
                                      ?_usb_init 0070                               ??i1_init_endpoints 007E  
                               ??_usb_halt_ep_in 0074                                          _bdm_nop 0870  
                                  ??_bdm_set_gpr 00CC                                    ??_bdm_set_spr 01DD  
                                        _gdb_buf 2390                                  __size_of_memcpy 0024  
                                __size_of_memset 0017             handle_standard_control_request@flags 0053  
                                        __ptext1 08A6                                          __ptext2 17F2  
                                        __ptext3 1B9E                                          __ptext4 1CD8  
                                        __ptext5 1BF5                                          __ptext6 1C8A  
                                        __ptext7 08AF                                          __ptext8 0FB6  
                                        __ptext9 1A3A             handle_standard_control_request@setup 005B  
                       __end_of_handle_ep0_setup 0000             handle_standard_control_request@stall 004D  
            start_control_return@bytes_asked_for 003C                                       ??_bdm_init 00A0  
                                   __size_of_isr 0006                                 usb_halt_ep_in@ep 0074  
                                        _qchksum 02EF                                    usb_service@ep 0064  
                                     ??_gdb_send 0237                      bdm_continue_single_step@der 0238  
                            i1___bmul@multiplier 0071                             _usb_send_in_buffer_0 0E9C  
                           usb_send_in_buffer@bd 00A8                                          main@msg 0320  
                                        clrloop0 0816                                      ?_bdm_resume 01E5  
                                  gdb_hexstr@buf 01E8                                    gdb_hexstr@len 01EE  
                                  gdb_hexstr@val 01EA                             end_of_initialization 14B6  
                          __end_of_vendor_string 18EE                            ??i1_pic16_linear_addr 0078  
                                  _bdm_interrupt 0836                                          memcpy@d 00A7  
                                        memcpy@n 00A4                                          memcpy@s 00A9  
                                        memset@c 00A2                                          memset@n 00A4  
                                        memset@p 00A6                                      ?_gdb_hexstr 01E8  
                      _usb_out_endpoint_has_data 08A6                                    _bdm_save_regs 1E0F  
                           gdb_extract_bytes@msg 00A1                    ??_send_zero_length_packet_ep0 0070  
                                bdm_continue@der 0238                                     ??i1_usb_init 003D  
                              __end_of_stall_ep0 0E2E                          __end_of_fake_serial_num 1878  
                                     ??_usb_init 00B3                                     __pstringtext 1800  
                                  gdb_send@reply 0235                         ?_usb_out_endpoint_halted 0070  
                           __size_of_stall_ep_in 0013                            i1___wmul@multiplicand 0072  
                        usb_send_in_buffer_0@len 0074                          usb_send_in_buffer_0@pid 0076  
                            __end_of_bdm_clk_bit 12EB                                        _PORTAbits 000C  
                            __end_of_bdm_get_gpr 1367                         ??i1_reset_ep0_data_stage 0070  
                __size_of_bdm_update_breakpoints 00CD                              __end_of_bdm_get_spr 11D6  
                                init_endpoints@i 00B2                       handle_ep0_in@bytes_to_send 007D  
                    __size_of_usb_send_in_buffer 0046                                 __CFG_FOSC$INTOSC 0000  
                           __size_of_usb_service 040F                     ??_usb_application_get_string 0073  
                          ?_usb_send_in_buffer_0 0074                           ?_usb_get_configuration 0070  
                            __end_of_bdm_set_gpr 1E0F                                        _TRISBbits 008D  
                            __end_of_bdm_set_spr 0783                          i1pic16_linear_addr@addr 003A  
                        i1pic16_linear_addr@high 0038                       __end_of_usb_get_out_buffer 08C7  
                             bdm_clk_serial@mask 00BA                      __end_of_ConfigureOscillator 17C1  
                             __end_ofi1_usb_init 091C                           __size_of_gdb_send_data 0053  
                             bdm_clk_serial@word 00B0                                   ?_bdm_interrupt 0070  
                                      _USTATbits 0E8F                             gdb_process_command@i 0259  
                           gdb_process_command@j 0253                             gdb_process_command@k 0252  
                           gdb_process_command@s 024C                             gdb_process_command@u 0247  
                           gdb_process_command@x 0254                             gdb_process_command@y 0248  
                                 ?_bdm_save_regs 0070                                       led_flash@c 00A0  
                                     led_flash@i 00A6                                       led_flash@j 00A4  
                           _usb_arm_out_endpoint 0FB6                               __CFG_PLLEN$ENABLED 0000  
                                   bdm_clk_bit@b 00A0                       __size_of_usb_get_in_buffer 0010  
                                  ?_stall_ep_out 0070                                bdm_get_gpr@reg_nr 00C4  
                               gdb_hexstr@offset 01EF                                   __end_of___bmul 0790  
            __size_of_usb_application_get_string 005C                                 bdm_set_data@addr 01D5  
                  __size_of_usb_in_endpoint_busy 0009                                        i1memcpy@d 0077  
                                      i1memcpy@n 0074                                        i1memcpy@s 0079  
                                 __end_of___wmul 1CD8                              __size_of_bdm_resume 0041  
                                 _handle_ep0_out 0000                                 bdm_set_data@size 01DD  
                                      i1memset@c 0072                                        i1memset@n 0074  
                                      i1memset@p 0076                      handle_ep0_out@bytes_to_copy 003B  
                                 __end_of_memcpy 17AB                                   __end_of_memset 1309  
                       _bdm_continue_single_step 1A83             __size_of_send_zero_length_packet_ep0 0006  
                              __size_ofi1___bmul 000C                              __size_of_gdb_hexstr 0077  
                                   i1usb_init@ep 0040                              start_initialization 1458  
                              __size_ofi1___wmul 0015                                      __end_of_isr 000A  
                              __size_ofi1_memcpy 0024                                __size_ofi1_memset 0017  
        usb_application_get_string@string_number 0073                        __size_of_bdm_restore_regs 002A  
                                _clear_ep0_stall 0EDB                           _bdm_update_breakpoints 1072  
                               bdm_set_gpr@value 00C8                                  _returning_short 036D  
                          ?_usb_arm_out_endpoint 0070                                   stall_ep_out@ep 0070  
                         __size_of_reset_bd0_out 0006                                main@buf_end_found 02E3  
                                    _bdm_clk_bit 12CE                                   ??_stall_ep_out 0070  
                               ??_gdb_send_start 00AA                                   _init_endpoints 1BF5  
                                       ??___bmul 00A1                                     bdm_resume@in 022E  
                                    _bdm_get_gpr 1309                                      _bdm_get_spr 113F  
                         __end_of_handle_ep0_out 0000                                         ??___wmul 00A4  
                                  _gdb_send_data 1405                                      __pdataBANK5 02E8  
                                    __pdataBANK6 036E                                      __pdataBANK7 03BA  
                        __size_of_bdm_clk_serial 00F8                               gdb_send_data@reply 00AF  
                                       ??_memcpy 00A6                                         ??_memset 00A6  
               __end_ofi1_usb_in_endpoint_halted 0EDB                                      _bdm_set_gpr 1DC4  
                                    _bdm_set_spr 0701                     __end_of_reset_ep0_data_stage 1CE2  
                __size_ofi1_reset_ep0_data_stage 000A                               gdb_send_end@chksum 0237  
                         ??_usb_send_in_buffer_0 0076                                      __pbssBIGRAM 2390  
                               bdm_clk_serial@in 00A8                                        ___latbits 0002  
                                  __pcstackBANK0 0038                                    __pcstackBANK1 00A0  
                                  __pcstackBANK3 01CB                                    __pcstackBANK4 0220  
                                  __pcstackBANK5 02A0                                    __pcstackBANK6 0320  
                               bdm_set_spr@value 01D9                              __end_of__stringdata 19B4  
                              __size_of_bdm_init 0021                                 main@msg_checksum 0267  
                                ??_bdm_interrupt 00C8                                      _gdb_buf_idx 02EE  
                              __size_of_gdb_send 00B6                       usb_send_in_buffer@endpoint 00A7  
                          pic16_linear_addr@addr 00B0                            pic16_linear_addr@high 00AE  
                                ??_bdm_save_regs 00CC                      __end_of_gdb_process_command 0701  
                   __end_of_start_control_return 0E29                                        _bdm_reset 1036  
                                       ?_InitApp 0070          __end_of_handle_standard_control_request 0000  
       __size_of_handle_standard_control_request 0000                ??_handle_standard_control_request 0043  
               ?_handle_standard_control_request 0070                  _handle_standard_control_request 0000  
                         __end_of_init_endpoints 1C8A                                  bdm_interrupt@in 01DB  
                                 ?_gdb_send_data 00AB                   usb_in_endpoint_halted@endpoint 00A3  
                                ?_handle_ep0_out 0070                         __size_of_usb_halt_ep_out 0014  
                         __size_of_handle_ep0_in 0000                usb_out_endpoint_has_data@endpoint 00A0  
                  usb_application_get_string@ptr 0070               __size_of_usb_out_endpoint_has_data 0009  
         handle_standard_control_request@ret_642 0048           handle_standard_control_request@ret_644 004E  
                                       ?_bdm_nop 00C4                                _gdb_extract_bytes 0790  
                                      _led_flash 1A3A                                __size_of_usb_init 0057  
                             ?_gdb_extract_bytes 00A0               __end_of_usb_application_get_string 0F3B  
                     _usb_application_get_string 0EDF                                ?_handle_ep0_setup 0070  
                                  _reset_bd0_out 0F80                          __end_of_clear_ep0_stall 0EDF  
                                      bdm_nop@in 01CB                        __size_ofi1_init_endpoints 0089  
                             ??_handle_ep0_setup 007E                              main@buf_start_found 026E  
                            ??_gdb_extract_bytes 00A4                                     ??_bdm_resume 00D0  
                                      gdb_send@k 0241                           ??_usb_arm_out_endpoint 00A3  
                         i1_reset_ep0_data_stage 0E8C                                   ___wmul@product 00A4  
                                     ?_bdm_reset 0070                                         _LATBbits 010D  
                                       _LATCbits 010E                                     ??_gdb_hexstr 0220  
                                      clear_ram0 0815                                         _PIE2bits 0092  
                          i1___bmul@multiplicand 0070                                  ?_init_endpoints 0070  
                   _usb_application_config_descs 036E                                 bdm_get_data@addr 01D5  
                                       _PIR2bits 0012  handle_standard_control_request@descriptor_index 0057  
                               bdm_get_data@size 01D9                                         _UCFGbits 0E91  
                                  ?_bdm_get_data 01D5                                     gdb_send@qbuf 023F  
                             _handle_ep0_out$676 0038                        __end_of_gdb_extract_bytes 07CD  
                       _ep0_data_stage_in_buffer 03B8                                         _UCONbits 0E8E  
                        __size_of_bdm_wait_ready 0007                                    ?_bdm_continue 0070  
                                       _SPLLMULT 04CE                                        _stall_ep0 0E29  
                             __end_of_bdm_resume 1B9E                                         i1___bmul 0DB4  
              __end_of_usb_out_endpoint_has_data 08AF                                       ?_led_flash 00A0  
                                    __stringdata 1960                          start_control_return@len 003A  
                        ??_usb_get_configuration 00A0                                ___wmul@multiplier 00A0  
                        start_control_return@ptr 0038                                         i1___wmul 0F86  
                                 ?_reset_bd0_out 0070                                         i1_memcpy 0E68  
                                       i1_memset 0EB8                     usb_arm_out_endpoint@endpoint 00A4  
                                  ?_bdm_set_data 01D5                         i1_usb_in_endpoint_halted 0ECF  
                             __end_of_gdb_hexstr 1F97                                 mpc_bdm@save_regs 03B0  
                    __end_ofi1_pic16_linear_addr 0E68                             __end_of_stall_ep_out 0F80  
               __size_of_usb_out_endpoint_halted 000E                                    _handle_ep0_in 0000  
                                bdm_set_data@val 01D9                                  bdm_set_data@out 01DE  
                               gdb_send@checksum 023D                                 _bdm_restore_regs 1E3D  
                                     _ACTCONbits 039B                     bdm_update_breakpoints@reg_l1 022E  
                          bdm_wait_ready@timeout 00A0                             _reset_ep0_data_stage 1CD8  
                                     usb_init@ep 00B6                         bdm_update_breakpoints@wc 0232  
                               __size_of_InitApp 000C                                    ?_gdb_ahex2bin 00A0  
                                ??_gdb_send_data 00AC              _handle_standard_control_request$643 0045  
                                 ??_bdm_get_data 00D0                                    ??_stall_ep_in 0073  
                             _usb_get_out_buffer 08AF                       ??_bdm_continue_single_step 00D0  
                   usb_in_endpoint_busy@endpoint 00A0                                gdb_send_data@qbuf 00AD  
                                 ??_bdm_continue 00D0                                   _bdm_clk_serial 11D6  
             handle_standard_control_request@len 0051               handle_standard_control_request@req 0047  
             handle_standard_control_request@res 004C               handle_standard_control_request@ret 004A  
                                _configuration_1 1878                               gdb_send_start@qbuf 00AD  
                       ??_usb_in_endpoint_halted 00A3                       __end_of_usb_send_in_buffer 1FED  
                                     ?_stall_ep0 0070                              ?_usb_get_out_buffer 00A3  
                                  ??_usb_service 0060                                 __size_of_bdm_nop 0028  
                   __end_of_cdc_interface_string 1930                                ??_usb_halt_ep_out 0073  
                           _start_control_return 0DC0                                   ??_bdm_set_data 00D0  
                                       _bdm_init 07CD                                         _gdb_send 16D1  
                               ?_clear_ep0_stall 0070            handle_standard_control_request@ep_dir 0055  
                                 ?_handle_ep0_in 0070                                    ?_gdb_send_end 0070  
                        __size_of_usb_halt_ep_in 0014            handle_standard_control_request@ep_num 0054  
                                       __ptext10 000C                                         __ptext11 1E79  
                                       __ptext20 1787                                         __ptext12 1EBB  
                                       __ptext21 1F20                                         __ptext13 1405  
                                       __ptext30 1A83                                         __ptext22 0790  
                                       __ptext14 16D1                                         __ptext31 1AED  
                                       __ptext23 1072                                         __ptext15 1FA7  
                                       __ptext40 0836                                         __ptext32 0701  
                                       __ptext24 1CC3                                         __ptext16 1F12  
                                       __ptext41 0870                                         __ptext33 1B5D  
                                       __ptext25 0783                                         __ptext17 17AE  
                                       __ptext50 08C7                                         __ptext42 11D6  
                                       __ptext34 113F                                         __ptext26 1D09  
                                       __ptext18 1F97                                         __ptext51 0F80  
                                       __ptext43 12F2                                         __ptext35 1E0F  
                                       __ptext27 1036                                         __ptext19 17AB  
                                       __ptext60 0F4E                                         __ptext52 0000  
                                       __ptext44 12EB                                         __ptext36 1309  
                                       __ptext28 07CD                                         __ptext61 0F3B  
                                       __ptext53 0000                                         __ptext45 12CE  
                                       __ptext37 1E3D                                         __ptext29 1D5D  
                                       __ptext70 0E68                                         __ptext62 0EDF  
                                       __ptext54 091C                                         __ptext46 17E6  
                                       __ptext38 1DC4                                         __ptext71 0E9C  
                                       __ptext63 0DC0                                         __ptext55 0E2E  
                                       __ptext47 17B7                                         __ptext39 0821  
                                       __ptext72 0ECF                                         __ptext64 0EDB  
                                       __ptext56 0F86                                         __ptext73 0DB4  
                                       __ptext65 0000                                         __ptext57 0EB8  
                                       __ptext49 09A5                                         __ptext66 0E29  
                                       __ptext58 0F62                                         __ptext67 0E96  
                                       __ptext59 0F76                                         __ptext68 0000  
                                       __ptext69 0E8C                          ?_bdm_update_breakpoints 0070  
                   __end_of_usb_in_endpoint_busy 17B7                       gdb_process_command@reg_val 024E  
                     gdb_process_command@reg_num 024D                             ??_usb_get_out_buffer 00A4  
                     gdb_process_command@msg_len 0242                       gdb_process_command@msg_out 02A0  
            __end_of_send_zero_length_packet_ep0 0E9C                      _send_zero_length_packet_ep0 0E96  
                                    ??_bdm_reset 00A2                                    __size_of_main 0218  
                          ?_reset_ep0_data_stage 0070                                   ??_gdb_ahex2bin 00A1  
                                 usb_service@pid 0068                                      gdb_hexstr@a 0233  
                                    gdb_hexstr@i 0234                                      gdb_hexstr@j 0232  
                                    gdb_hexstr@m 022C                     __size_of_ConfigureOscillator 000A  
                               _control_need_zlp 036C                                     ?_bdm_clk_bit 00A0  
                              usb_halt_ep_out@ep 0073                     bdm_continue_single_step@srr1 023C  
                         __end_of_bdm_clk_serial 12CE                                     ?_bdm_get_gpr 00C4  
                                   ?_bdm_get_spr 01D5                            usb_send_in_buffer@len 00A4  
                          usb_send_in_buffer@pid 00A6                       __size_of_gdb_extract_bytes 003D  
                                       _usb_init 1B9E                                     ?_bdm_set_gpr 00C4  
                                ??_reset_bd0_out 0070                                     ?_bdm_set_spr 01D5  
                                    ??_led_flash 00A2                              __end_of_stall_ep_in 0F4E  
                          ?_start_control_return 0038                                       _INTCONbits 000B  
                                      usb_init@i 00B5                          bdm_update_breakpoints@i 023A  
                                       memcpy@d1 00A0                                 i1_init_endpoints 091C  
                                       memcpy@s1 00A2                   __end_of_bdm_update_breakpoints 113F  
                                 ??_gdb_send_end 00D0                              __end_of_usb_service 0DB4  
                                       memset@p1 00A0        handle_standard_control_request@descriptor 0056  
                                    pic14e$flags 007E                                 gdb_send_end@qbuf 0235  
                                       intlevel1 0000                                    _vendor_string 18BE  
      handle_standard_control_request@ep_num_646 005A          handle_standard_control_request@desc_632 0058  
                              __CFG_CLKOUTEN$OFF 0000                                 ??_handle_ep0_out 007B  
                        __end_of_configuration_1 18BE                                  main@out_buf_len 026B  
                               bdm_continue@srr1 023C                                       _OSCCONbits 0099  
                                ?_bdm_clk_serial 00A8                           _this_device_descriptor 194A  
                                 _bdm_wait_ready 12EB                             __CFG_CPUDIV$NOCLKDIV 0000  
                                   _watch_points 0360                                   _product_string 1930  
                __size_of_usb_in_endpoint_halted 000E                            usb_get_out_buffer@buf 00A3  
                                    ??_stall_ep0 0070                            __size_of_stall_ep_out 000A  
                    ?_usb_application_get_string 0070                                  ??_handle_ep0_in 007B  
                  __size_of_usb_send_in_buffer_0 001C                          _usb_out_endpoint_halted 17F2  
               i1usb_in_endpoint_halted@endpoint 0073                             __end_of_bdm_get_data 1DC4  
                        ?i1_reset_ep0_data_stage 0070                                   gdb_send_data@k 00B0  
                           __end_of_bdm_continue 1B5D                            __end_of_bdm_interrupt 0870  
                               ??_init_endpoints 00B2                           ??_reset_ep0_data_stage 00A0  
                              _pic16_linear_addr 1C8A                            __end_of_bdm_save_regs 1E3D  
                      __size_of_handle_ep0_setup 0000                             _cdc_interface_string 1914  
                             ?_pic16_linear_addr 00A6                             __end_of_bdm_set_data 1D5D  
               __end_of_bdm_continue_single_step 1AED                           __end_of_bdm_wait_ready 12F2  
                       gdb_send_start@reply_type 00AC                           __end_of_product_string 194A  
